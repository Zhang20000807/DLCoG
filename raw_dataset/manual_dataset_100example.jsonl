{"repo": "TeamSPoon/CYC_JRTL_with_CommonLisp_OLD", "path": "platform/main/java/eu/larkc/core/query/ORDIVariableBinding.java", "star_count": 10, "raw_code": "private void writeObject(ObjectOutputStream out) throws IOException {\n\t\tCloseableIterator<Binding> i = iterator();\n\t\t// used to wait until the bindNames field is init\n\t\tgetVariables();\n\t\tout.writeObject(bindNames);\n\t\tout.writeBoolean(i.hasNext());\n\t\twhile (i.hasNext()) {\t\n\t\t\tout.writeObject(i.next().getValues());\n\t\t\tout.writeBoolean(i.hasNext());\n\t\t}\n\t\tout.flush();\n\t\tisClosed = true;\n\t}", "code_summary": "// Custom serialization methods", "code_snippets": [{"sub_id": 0, "code_snippet": "getVariables();", "code_summary": "// used to wait until the bindNames field is init", "place": [4, 4]}], "id": 4}
{"repo": "SwerveRoboticsTeams/ftc_app", "path": "TeamSwerve/src/main/java/org/firstinspires/ftc/teamswerve/JustinOmniDrive.java", "star_count": 7, "raw_code": "@Override public void runOpMode() throws InterruptedException\n    {\n        // Initialize hardware and other important things\n        initializeRobot();\n\n        robotAngle = imu.getAngularOrientation().firstAngle;\n\n        // Wait until start button has been pressed\n        waitForStart();\n\n        robotAngle = imu.getAngularOrientation().firstAngle;\n        //robotAngle = adjustAngles(robotAngle);\n        anglePivot = robotAngle;\n\n\n        // Main loop\n        while(opModeIsActive())\n        {\n            omniDriveDiagonal();\n\n            telemetry.update();\n            idle();\n        }\n    }", "code_summary": "// Drive mode constants", "code_snippets": [{"sub_id": 0, "code_snippet": "initializeRobot();", "code_summary": "// Initialize hardware and other important things", "place": [4, 4]}, {"sub_id": 1, "code_snippet": "waitForStart();", "code_summary": "// Wait until start button has been pressed", "place": [9, 9]}], "id": 6}
{"repo": "Null-Tank/Auto-Installer", "path": "src/home/homeController.java", "star_count": 1, "raw_code": "private void displayGamingApplications(){\n        var gridX = -1;\n        var gridY = 0;\n\n        softwareDisplay.getChildren().clear();\n        softwareDisplay.setHgap(10); //horizontal gap in pixels => that's what you are asking for\n        softwareDisplay.setVgap(10); //vertical gap in pixels\n        softwareDisplay.setPadding(new Insets(10,10,10,10)); //margins around the whole grid\n\n        mapper.configure(JsonParser.Feature.ALLOW_UNQUOTED_FIELD_NAMES, true);\n\n        var programsData = data.getPrograms();\n\n        //Gets the properties for all of the gaming applications\n        try{\n            for (int i = 0; programsData.gamingApplications.length > i; i++) {\n\n                Object selectedProgram = programsData.getGamingApplications()[i];\n                String programJSON = mapper.writeValueAsString(selectedProgram);\n                Program program = mapper.readValue(programJSON, Program.class);\n\n\n                Pane softwareContainer = createSoftwareNode(program);\n\n\n                // Determines in which cell the software will be displayed in\n                if(gridX < 4){\n                    gridX++;\n\n                }else{\n                    gridX = 0;\n                    gridY++;\n                }\n\n                System.out.println(gridX + \" \" + gridY);\n                softwareDisplay.add(softwareContainer, gridX, gridY); // column, row\n\n                System.out.println(program.name + \" \" + program.version);\n            }\n        }catch (JsonParseException e) {\n            e.printStackTrace();\n        }\n        catch (JsonMappingException e) {\n            e.printStackTrace();\n        }\n        catch (IOException e) {\n            e.printStackTrace();\n        }\n    }", "code_summary": "// Displays Applications based on the Category Selected", "code_snippets": [{"sub_id": 0, "code_snippet": "softwareDisplay.setVgap(10);", "code_summary": "//vertical gap in pixels", "place": [7, 7]}, {"sub_id": 1, "code_snippet": "softwareDisplay.setPadding(new Insets(10,10,10,10));", "code_summary": "//margins around the whole grid", "place": [8, 8]}], "id": 7}
{"repo": "Null-Tank/Auto-Installer", "path": "src/home/homeController.java", "star_count": 1, "raw_code": "public static Pane createSoftwareNode(Program program){\n        // Software Pane (Container for everything that goes into the software node)\n        Pane softwareContainer = new Pane();\n        softwareContainer.setStyle(\"-fx-background-color: #eaeaea;\");\n        softwareContainer.setPrefSize(200.0,230.0);\n\n        // Software Image\n        ImageView softwareImgContainer = new ImageView();\n\n        Image softwareImg = new Image(\"./icons/\" + program.img_dir);\n        softwareImgContainer.setImage(softwareImg);\n\n        System.out.println(\"Issue loading Image? \" + softwareImg.isError());\n\n        softwareImgContainer.setLayoutX(36.0);\n        softwareImgContainer.setLayoutY(51.0);\n        softwareImgContainer.setFitHeight(128.0);\n        softwareImgContainer.setFitWidth(128.0);\n        softwareImgContainer.setSmooth(true);\n        softwareImgContainer.setCache(true);\n        softwareImgContainer.setPreserveRatio(true);\n\n\n\n        // Software Selector (CheckBox)\n        CheckBox softwareSelectionCheckBox = new CheckBox();\n\n        softwareSelectionCheckBox.setLayoutX(85.0);\n        softwareSelectionCheckBox.setLayoutY(179.0);\n        softwareSelectionCheckBox.setFont(Font.font(25.0));\n        softwareSelectionCheckBox.setCursor(Cursor.HAND);\n\n        // Software Name\n        Text softwareName = new Text();\n        softwareName.setFont(new Font(22.0));\n        softwareName.setText((program.name).toString());\n        softwareName.setFill(Color.WHITE);\n        softwareName.setLayoutY(30.0);\n        softwareName.setTextAlignment(TextAlignment.CENTER);\n\n        // Handles what will occur when the software is selected\n        softwareSelectionCheckBox.setOnMousePressed(new EventHandler<MouseEvent>() {\n\n            @Override\n            public void handle(MouseEvent event) {\n                if(!(softwareSelectionCheckBox.isSelected())){\n                    softwareToBeInstalled.add(program);\n                    System.out.println(\"Added \" +  program + \" to be installed\");\n                }else{\n                    softwareToBeInstalled.remove(program);\n                    System.out.println(\"Removed \" +  program + \" from being installed\");\n                }\n                setSoftwaresList(softwareToBeInstalled);\n            }\n        });\n\n        softwareContainer.getChildren().addAll(softwareSelectionCheckBox, softwareName, softwareImgContainer);\n\n        return softwareContainer;\n\n    }", "code_summary": "// Method for creating software icons", "code_snippets": [{"sub_id": 0, "code_snippet": "Pane softwareContainer = new Pane();\nsoftwareContainer.setStyle(\"-fx-background-color: #eaeaea;\");\nsoftwareContainer.setPrefSize(200.0,230.0);", "code_summary": "// Software Pane (Container for everything that goes into the software node)", "place": [3, 5]}, {"sub_id": 1, "code_snippet": "CheckBox softwareSelectionCheckBox = new CheckBox();\n\nsoftwareSelectionCheckBox.setLayoutX(85.0);\nsoftwareSelectionCheckBox.setLayoutY(179.0);\nsoftwareSelectionCheckBox.setFont(Font.font(25.0));\nsoftwareSelectionCheckBox.setCursor(Cursor.HAND);", "code_summary": "// Software Selector (CheckBox)", "place": [26, 31]}, {"sub_id": 2, "code_snippet": "softwareSelectionCheckBox.setOnMousePressed(new EventHandler<MouseEvent>() {\n\n            @Override\n            public void handle(MouseEvent event) {\n                if(!(softwareSelectionCheckBox.isSelected())){\n                    softwareToBeInstalled.add(program);\n                    System.out.println(\"Added \" +  program + \" to be installed\");\n                }else{\n                    softwareToBeInstalled.remove(program);\n                    System.out.println(\"Removed \" +  program + \" from being installed\");\n                }\n                setSoftwaresList(softwareToBeInstalled);\n            }\n        });", "code_summary": "// Handles what will occur when the software is selected", "place": [42, 55]}], "id": 8}
{"repo": "kermodes19767/freightfrenzy", "path": "TeamCode/src/main/java/org/firstinspires/ftc/teamcode/Robot2driveV2.java", "star_count": 0, "raw_code": "private void drive(String mode) {\n    if (gamepad2.right_trigger > 0.5) {\n      masterSpeed = 0.8;\n    } else {\n      masterSpeed = 0.4;\n    }\n\n    leftDrivePower = 0;\n    rightDrivePower = 0;\n    strafePower = 0;\n\n    if (mode.equals(\"A\")) {\n      //left stick used for driving straight and strafing\n      if (-0.2 > gamepad2.left_stick_y | gamepad2.left_stick_y > 0.2) {\n        leftDrivePower = masterSpeed * gamepad2.left_stick_y;\n        rightDrivePower = masterSpeed * gamepad2.left_stick_y;\n      }\n      //right stick used for turning\n      if (-0.2 > gamepad2.right_stick_x | gamepad2.right_stick_x > 0.2) {\n        leftDrivePower = turnSpeed * -gamepad2.right_stick_x;\n        rightDrivePower = turnSpeed * gamepad2.right_stick_x;\n      }\n      //strafing\n      if (-0.2 > gamepad2.left_stick_x | gamepad2.left_stick_x > 0.2) {\n        strafePower = maxStrafePower * gamepad2.left_stick_x;\n      }\n    }\n    else if (mode.equals(\"singlejoystick\")) {\n      //right stick used for driving straight and turning\n      if (-0.5 < gamepad2.left_stick_x && gamepad2.left_stick_x < 0.5) {\n        leftDrivePower = masterSpeed * gamepad2.left_stick_y;\n        rightDrivePower = masterSpeed * gamepad2.left_stick_y;\n      }\n\n      if (-0.5 < gamepad2.left_stick_y && gamepad2.left_stick_y < 0.5) {\n        leftDrivePower = turnSpeed * gamepad2.left_stick_x;\n        rightDrivePower = turnSpeed * -gamepad2.left_stick_x;\n      }\n      Strafe();\n    }\n\n    rightRearMotor.setPower(rightDrivePower);\n    rightFrontMotor.setPower(rightDrivePower);\n    leftRearMotor.setPower(leftDrivePower);\n    leftFrontMotor.setPower(leftDrivePower);\n    strafeMotor.setPower(strafePower);\n  }", "code_summary": "//drive loop, handles joystick control for wheels and strafe wheel, as well as speed boost", "code_snippets": [{"sub_id": 0, "code_snippet": "if (-0.2 > gamepad2.left_stick_y | gamepad2.left_stick_y > 0.2) {\n      leftDrivePower = masterSpeed * gamepad2.left_stick_y;\n      rightDrivePower = masterSpeed * gamepad2.left_stick_y;\n    }", "code_summary": "//left stick used for driving straight and strafing", "place": [14, 17]}, {"sub_id": 1, "code_snippet": "if (-0.2 > gamepad2.right_stick_x | gamepad2.right_stick_x > 0.2) {\n    leftDrivePower = turnSpeed * -gamepad2.right_stick_x;\n    rightDrivePower = turnSpeed * gamepad2.right_stick_x;\n  }", "code_summary": "//right stick used for turning", "place": [19, 22]}, {"sub_id": 2, "code_snippet": "if (-0.5 < gamepad2.left_stick_x && gamepad2.left_stick_x < 0.5) {\n        leftDrivePower = masterSpeed * gamepad2.left_stick_y;\n        rightDrivePower = masterSpeed * gamepad2.left_stick_y;\n      }\n\n      if (-0.5 < gamepad2.left_stick_y && gamepad2.left_stick_y < 0.5) {\n        leftDrivePower = turnSpeed * gamepad2.left_stick_x;\n        rightDrivePower = turnSpeed * -gamepad2.left_stick_x;\n      }", "code_summary": "//right stick used for driving straight and turning", "place": [30, 38]}], "id": 15}
{"repo": "AtharvaSKarande/Post_Navigator", "path": "app/src/main/java/com/project/postnav/recycler_view_adapter.java", "star_count": 0, "raw_code": "@Override\n    public void onBindViewHolder(recycler_view_adapter.ViewHolder holder, int position) {\n        // Get the data model based on position\n        recyclec_class contact = mContacts.get(position);\n\n        // Set item views based on your views and data model\n        TextView textView = holder.nameTextView;\n        textView.setText(contact.getName());\n        ImageView imageView = holder.imageView;\n\n        imageView.setImageResource(R.drawable.ic_baseline_face_24);\n\n    }", "code_summary": "// Involves populating data into the item through holder", "code_snippets": [{"sub_id": 0, "code_snippet": "recyclec_class contact = mContacts.get(position);", "code_summary": "// Get the data model based on position", "place": [4, 4]}, {"sub_id": 1, "code_snippet": "TextView textView = holder.nameTextView;\ntextView.setText(contact.getName());\nImageView imageView = holder.imageView;\n\nimageView.setImageResource(R.drawable.ic_baseline_face_24);", "code_summary": "// Set item views based on your views and data model", "place": [7, 11]}], "id": 16}
{"repo": "FTC-5202/SkyStone", "path": "TeamCode/src/main/java/org/firstinspires/ftc/teamcode/Dummy/NewIMU2DummyPID.java", "star_count": 0, "raw_code": "@Override\n    public void runOpMode() throws InterruptedException {\n\n        right_side = hardwareMap.dcMotor.get(\"FRBR\");\n        left_side = hardwareMap.dcMotor.get(\"FLBL\");\n\n        left_side.setMode(DcMotor.RunMode.RUN_USING_ENCODER);\n        right_side.setMode(DcMotor.RunMode.RUN_USING_ENCODER);\n\n        left_side.setDirection(DcMotorSimple.Direction.REVERSE);\n      /*  BLMotor = hardwareMap.get(DcMotor.class, \"BL\");\n        BRMotor = hardwareMap.get(DcMotor.class, \"BR\");\n        FLMotor = hardwareMap.get(DcMotor.class, \"FL\");\n        FRMotor = hardwareMap.get(DcMotor.class, \"FR\");\n\n        FLMotor.setDirection(DcMotor.Direction.REVERSE);\n\n        BLMotor.setZeroPowerBehavior(DcMotor.ZeroPowerBehavior.BRAKE);\n        BRMotor.setZeroPowerBehavior(DcMotor.ZeroPowerBehavior.BRAKE);\n        FLMotor.setZeroPowerBehavior(DcMotor.ZeroPowerBehavior.BRAKE);\n        FRMotor.setZeroPowerBehavior(DcMotor.ZeroPowerBehavior.BRAKE);*/\n\n\n\n        // get a reference to REV Touch sensor.\n        //touch = hardwareMap.digitalChannel.get(\"touch_sensor\");\n\n        BNO055IMU.Parameters parameters = new BNO055IMU.Parameters();\n\n        parameters.mode = BNO055IMU.SensorMode.IMU;\n        parameters.angleUnit = DEGREES;\n        parameters.accelUnit = BNO055IMU.AccelUnit.METERS_PERSEC_PERSEC;\n        parameters.loggingEnabled = false;\n\n        // Retrieve and initialize the IMU. We expect the IMU to be attached to an I2C port\n        // on a Core Device Interface Module, configured to be a sensor of type \"AdaFruit IMU\",\n        // and named \"imu\".\n        imu = hardwareMap.get(BNO055IMU.class, \"imu\");\n\n        imu.initialize(parameters);\n\n        telemetry.addData(\"Mode\", \"calibrating...\");\n        telemetry.update();\n\n        // make sure the imu gyro is calibrated before continuing.\n        while (!isStopRequested() && !imu.isGyroCalibrated()) {\n            sleep(50);\n            idle();\n        }\n\n        telemetry.addData(\"Mode\", \"waiting for start\");\n        telemetry.addData(\"imu calib status\", imu.getCalibrationStatus().toString());\n        telemetry.update();\n\n        // wait for start button.\n\n        waitForStart();\n\n        telemetry.addData(\"Mode\", \"running\");\n        telemetry.update();\n\n        sleep(1000);\n\n        // drive until end of period.\n\n        while (opModeIsActive()) {\n            // Use gyro to drive in a straight line.\n            correction = checkDirection();\n\n            telemetry.addData(\"1 imu heading\", lastAngles.firstAngle);\n            telemetry.addData(\"2 global heading\", globalAngle);\n            telemetry.addData(\"3 correction\", correction);\n            telemetry.update();\n\n            // We record the sensor values because we will test them in more than\n            // one place with time passing between those places. See the lesson on\n            // Timing Considerations to know why.\n\n            /*aButton = gamepad1.a;\n            bButton = gamepad1.b;\n\n            BLMotor.setPower(-power - correction);\n            FLMotor.setPower(-power - correction);\n            BRMotor.setPower(-power);\n            FRMotor.setPower(-power);\n\n            // turn the motors off.\n            BLMotor.setPower(0);\n            FLMotor.setPower(0);\n            BRMotor.setPower(0);\n            FRMotor.setPower(0);*/\n        }\n            //turning right\n         /*   if (gamepad1.a) {\n                BLMotor.setPower(power);\n                FLMotor.setPower(power);\n                BRMotor.setPower(-power);\n                FRMotor.setPower(-power);\n                getAngle();\n                FLMotor.getPower();\n\n\n                if (currentAngle <=targetAngle){\n                    if (currentPowerR > minimumPower) {\n                        currentPowerR -=  currentAngle /100;\n                        BLMotor.setPower(currentPowerR);\n                        FLMotor.setPower(currentPowerR);\n                        BRMotor.setPower(-currentPowerR);\n                        FRMotor.setPower(-currentPowerR);\n                    }\n                }\n                if (currentAngle <=targetAngle){\n                    if (currentPowerR == minimumPower) {\n                        currentPowerR = minimumPower;\n                        BLMotor.setPower(currentPowerR);\n                        FLMotor.setPower(currentPowerR);\n                        BRMotor.setPower(-currentPowerR);\n                        FRMotor.setPower(-currentPowerR);\n                    }\n                }\n                if (currentAngle == 90 && currentPowerR == minimumPower){\n                    BLMotor.setPower(0);\n                    FLMotor.setPower(0);\n                    BRMotor.setPower(0);\n                    FRMotor.setPower(0);\n                }\n            }\n            //turning left\n            if (gamepad1.b) {\n                BLMotor.setPower(-power);\n                FLMotor.setPower(-power);\n                BRMotor.setPower(power);\n                FRMotor.setPower(power);\n                getAngle();\n                FRMotor.getPower();\n\n                if (currentAngle <=targetAngle){\n                    if (currentPowerL > minimumPower) {\n                        currentPowerL -= currentAngle /100;\n                        BLMotor.setPower(-currentPowerL);\n                        FLMotor.setPower(-currentPowerL);\n                        BRMotor.setPower(currentPowerL);\n                        FRMotor.setPower(currentPowerL);\n                    }\n                }\n                if (currentAngle <=targetAngle){\n                    if (currentPowerL == minimumPower) {\n                        currentPowerL = minimumPower;\n                        BLMotor.setPower(-currentPowerL);\n                        FLMotor.setPower(-currentPowerL);\n                        BRMotor.setPower(currentPowerL);\n                        FRMotor.setPower(currentPowerL);\n                    }\n                }\n                if (currentAngle == 90 && currentPowerL == minimumPower){\n                    currentPowerL = 0;\n                    BLMotor.setPower(currentPowerL);\n                    FLMotor.setPower(currentPowerL);\n                    BRMotor.setPower(currentPowerL);\n                    FRMotor.setPower(currentPowerL);\n                }\n            }\n\n            //turn right\n       /* if (aButton && errorDegrees > 20) {\n            BLMotor.setPower(power);\n            FLMotor.setPower(power);\n            BRMotor.setPower(-power);\n            FRMotor.setPower(-power);\n        }\n        if (aButton && errorDegrees < 20) {\n            BLMotor.setPower(power / 3);\n            FLMotor.setPower(power / 3);\n            BRMotor.setPower(-power / 3);\n            FRMotor.setPower(-power / 3);\n\n        }\n\n        //turn left\n        if (bButton && errorDegrees > 20) {\n            BLMotor.setPower(-power);\n            FLMotor.setPower(-power);\n            BRMotor.setPower(power);\n            FRMotor.setPower(power);\n        }\n        if (bButton && errorDegrees < 20) {\n            BLMotor.setPower(-power / 3);\n            FLMotor.setPower(-power / 3);\n            BRMotor.setPower(power / 3);\n            FRMotor.setPower(power / 3);\n\n        }*/\n\n        }", "code_summary": "// called when init button is  pressed.", "code_snippets": [{"sub_id": 0, "code_snippet": "waitForStart();", "code_summary": "// wait for start button.", "place": [57, 57]}, {"sub_id": 1, "code_snippet": "while (opModeIsActive()) {\n            // Use gyro to drive in a straight line.\n            correction = checkDirection();\n\n            telemetry.addData(\"1 imu heading\", lastAngles.firstAngle);\n            telemetry.addData(\"2 global heading\", globalAngle);\n            telemetry.addData(\"3 correction\", correction);\n            telemetry.update();\n\n            // We record the sensor values because we will test them in more than\n            // one place with time passing between those places. See the lesson on\n            // Timing Considerations to know why.\n\n            /*aButton = gamepad1.a;\n            bButton = gamepad1.b;\n\n            BLMotor.setPower(-power - correction);\n            FLMotor.setPower(-power - correction);\n            BRMotor.setPower(-power);\n            FRMotor.setPower(-power);\n\n            // turn the motors off.\n            BLMotor.setPower(0);\n            FLMotor.setPower(0);\n            BRMotor.setPower(0);\n            FRMotor.setPower(0);*/\n        }", "code_summary": "// drive until end of period.", "place": [66, 92]}, {"sub_id": 2, "code_snippet": "correction = checkDirection();\n\ntelemetry.addData(\"1 imu heading\", lastAngles.firstAngle);\ntelemetry.addData(\"2 global heading\", globalAngle);\ntelemetry.addData(\"3 correction\", correction);\ntelemetry.update();", "code_summary": "// Use gyro to drive in a straight line.", "place": [68, 73]}], "id": 36}
{"repo": "eorgad/Cobol-to-Hive", "path": "src/main/java/com/savy3/hadoop/hive/serde3/cobol/CobolSerdeUtils.java", "star_count": 0, "raw_code": "protected static String getLayoutFromFS(String layoutFSUrl,\n\t\t\tConfiguration conf) throws IOException, URISyntaxException {\n\t\tFSDataInputStream in = null;\n\t\tFileSystem fs = null;\n\t\ttry {\n\t\t\tfs = FileSystem.get(new URI(layoutFSUrl), conf);\n\t\t} catch (IOException ioe) {\n\t\t\t// return null only if the file system in layout is not recognized\n\t\t\tString msg = \"Failed to open file system for uri \" + layoutFSUrl\n\t\t\t\t\t+ \" assuming it is not a FileSystem url\";\n\t\t\tLOG.debug(msg, ioe);\n\t\t\treturn null;\n\t\t}\n\t\ttry {\n\t\t\tin = fs.open(new Path(layoutFSUrl));\n\t\t\tString s = CobolSerdeUtils.getLayoutFor(in);\n\t\t\treturn s;\n\t\t} finally {\n\t\t\tif (in != null)\n\t\t\t\tin.close();\n\t\t}\n\t}", "code_summary": "// Protected for testing and so we can pass in a conf for testing.", "code_snippets": [{"sub_id": 0, "code_snippet": "String msg = \"Failed to open file system for uri \" + layoutFSUrl\n        + \" assuming it is not a FileSystem url\";\nLOG.debug(msg, ioe);\nreturn null;", "code_summary": "// return null only if the file system in layout is not recognized", "place": [9, 12]}], "id": 43}
{"repo": "AtifAbbAsi19/Firebase-Helper", "path": "app/src/main/java/inc/droidflick/firebasetutorial/MainActivity.java", "star_count": 5, "raw_code": "public void implementScrollListener() {\n\n        recyclerView\n                .addOnScrollListener(new RecyclerView.OnScrollListener() {\n\n                    @Override\n                    public void onScrollStateChanged(RecyclerView recyclerView,\n                                                     int newState) {\n\n                        super.onScrollStateChanged(recyclerView, newState);\n\n                        // If scroll state is touch scroll then set userScrolled\n                        // true\n                        if (newState == AbsListView.OnScrollListener.SCROLL_STATE_TOUCH_SCROLL) {\n                            userScrolled = true;\n\n                        }\n\n                    }\n\n                    @Override\n                    public void onScrolled(RecyclerView recyclerView, int dx,\n                                           int dy) {\n                        super.onScrolled(recyclerView, dx, dy);\n\n                        // Here get the child count, item count and visibleitems\n                        // from layout manager\n\n                        visibleItemCount = mLayoutManager.getChildCount();\n                        totalItemCount = mLayoutManager.getItemCount();\n                        pastVisibleItems = mLayoutManager.findFirstVisibleItemPosition();\n\n                        // Now check if userScrolled is true and also check if\n                        // the item is end then update recycler view and set\n                        // userScrolled to false\n                        if (userScrolled\n                                && (visibleItemCount + pastVisibleItems) == totalItemCount) {\n                            userScrolled = false;\n                            Toast.makeText(MainActivity.this, \"Scrolling\", Toast.LENGTH_SHORT).show();\n                            prepareMovieData();\n                        }\n                    }\n                });\n    }", "code_summary": "// Implement scroll listener", "code_snippets": [{"sub_id": 0, "code_snippet": "if (userScrolled\n    && (visibleItemCount + pastVisibleItems) == totalItemCount) {\n    userScrolled = false;\n    Toast.makeText(MainActivity.this, \"Scrolling\", Toast.LENGTH_SHORT).show();\n    prepareMovieData();\n}", "code_summary": "// Now check if userScrolled is true and also check if // the item is end then update recycler view and set", "place": [36, 41]}, {"sub_id": 1, "code_snippet": "userScrolled = false;", "code_summary": "// userScrolled to false", "place": [38, 38]}], "id": 51}
{"repo": "tuangeek/read_13f", "path": "src/main/java/com/ben/smith/reader/Web_Scraper.java", "star_count": 36, "raw_code": "public static String[] checkArr(String[] input) {\n\n        int totalSize = 0;\n        List<String> list = new ArrayList<String>();\n\n        // Incorrect info starts with a #\n        for(int i = 0; i < input.length; i++) {\n            if(input[i].charAt(0) == '#') {\n\n            } else {\n                totalSize++;\n                list.add(input[i]);\n            }\n        }\n\n        // Return an array of correct elements.\n        String[] ret = new String[totalSize];\n        list.toArray(ret);\n\n        return ret;\n    }", "code_summary": "// Verifies that only correct id numbers will be processed.", "code_snippets": [{"sub_id": 0, "code_snippet": "for(int i = 0; i < input.length; i++) {\n    if(input[i].charAt(0) == '#') {\n\n    } else {\n        totalSize++;\n        list.add(input[i]);\n    }\n}", "code_summary": "// Incorrect info starts with a #", "place": [7, 14]}, {"sub_id": 1, "code_snippet": "String[] ret = new String[totalSize];\nlist.toArray(ret);", "code_summary": "// Return an array of correct elements.", "place": [17, 18]}], "id": 54}
{"repo": "hafizhadi/trackGenerator", "path": "src/tabu/TrackObjectiveFunction.java", "star_count": 0, "raw_code": "public double[] calculateTrackValues(int[][] track, double accel, double grip, double maxSp){\n\t\t\n\t\t// Variable for race profile validation\n\t\tdouble[] validVal = new double[6];\n\t\t\n\t\t// Variable for race profile evaluation\n\t\tdouble curveVal = 0;\n\t\tdouble speedVal = 0;\n\t\t\n\t\t// Calculate validation values\n\t\tvalidVal = Validation.countValidityValue(track);\n\t\t\n\t\t// Calculate evaluation values\n\t\tcurveVal = Evaluation.evaluateCurvature(track);\n\t\tspeedVal = Evaluation.evaluateSpeed(track, accel, grip, maxSp);\n\n\t\t//System.out.println(speedVal);\n\t\t\n\t\treturn new double[] { validVal[0], validVal[1], validVal[2], curveVal, speedVal, validVal[3], validVal[4], validVal[5] };\n\t}", "code_summary": "// Calculate the values of the track", "code_snippets": [{"sub_id": 0, "code_snippet": "double[] validVal = new double[6];", "code_summary": "// Variable for race profile validation", "place": [4, 4]}, {"sub_id": 1, "code_snippet": "double curveVal = 0;\ndouble speedVal = 0;", "code_summary": "// Variable for race profile evaluation", "place": [7, 8]}, {"sub_id": 2, "code_snippet": "validVal = Validation.countValidityValue(track);", "code_summary": "// Calculate validation values", "place": [11, 11]}, {"sub_id": 3, "code_snippet": "curveVal = Evaluation.evaluateCurvature(track);\nspeedVal = Evaluation.evaluateSpeed(track, accel, grip, maxSp);", "code_summary": "// Calculate evaluation values", "place": [14, 15]}], "id": 55}
{"repo": "codyhalstead/RB18", "path": "app/src/main/java/com/rba18/adapters/ApartmentListAdapter.java", "star_count": 0, "raw_code": "private void setTextHighlightSearch(TextView textView, String theTextToSet) {\n        //If user has any text in the search bar\n        if (mSearchText != null && !mSearchText.isEmpty()) {\n            int startPos = theTextToSet.toLowerCase(Locale.US).indexOf(mSearchText.toLowerCase(Locale.US));\n            int endPos = startPos + mSearchText.length();\n            if (startPos != -1) {\n                //If theTextToSet contains match, highlight match\n                Spannable spannable = new SpannableString(theTextToSet);\n                TextAppearanceSpan highlightSpan = new TextAppearanceSpan(null, Typeface.BOLD, -1, mHighlightColor, null);\n                spannable.setSpan(highlightSpan, startPos, endPos, Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);\n                textView.setText(spannable);\n            } else {\n                //Set regular text if not\n                textView.setText(theTextToSet);\n            }\n        } else {\n            //Set regular text if search bar is empty\n            textView.setText(theTextToSet);\n        }\n    }", "code_summary": "//Used to change color of any text matching search", "code_snippets": [{"sub_id": 0, "code_snippet": "\nif (mSearchText != null && !mSearchText.isEmpty()) {\n    int startPos = theTextToSet.toLowerCase(Locale.US).indexOf(mSearchText.toLowerCase(Locale.US));\n    int endPos = startPos + mSearchText.length();\n    if (startPos != -1) {\n        //If theTextToSet contains match, highlight match\n        Spannable spannable = new SpannableString(theTextToSet);\n        TextAppearanceSpan highlightSpan = new TextAppearanceSpan(null, Typeface.BOLD, -1, mHighlightColor, null);\n        spannable.setSpan(highlightSpan, startPos, endPos, Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);\n        textView.setText(spannable);\n    } else {\n        //Set regular text if not\n        textView.setText(theTextToSet);\n    }\n} else {\n    //Set regular text if search bar is empty\n    textView.setText(theTextToSet);\n}\n", "code_summary": "//If user has any text in the search bar", "place": [2, 19]}, {"sub_id": 1, "code_snippet": "Spannable spannable = new SpannableString(theTextToSet);\nTextAppearanceSpan highlightSpan = new TextAppearanceSpan(null, Typeface.BOLD, -1, mHighlightColor, null);\nspannable.setSpan(highlightSpan, startPos, endPos, Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);\ntextView.setText(spannable);", "code_summary": "//If theTextToSet contains match, highlight match", "place": [8, 11]}, {"sub_id": 2, "code_snippet": "textView.setText(theTextToSet);", "code_summary": "//Set regular text if not //Set regular text if search bar is empty", "place": [14, 14]}], "id": 67}
{"repo": "enestasdemir/TaskList", "path": "src/main/java/com/tasdemir/tasklist/TaskController.java", "star_count": 0, "raw_code": "@SuppressWarnings(\"unchecked\")\n\t@RequestMapping(value = \"/tasklist\", method = RequestMethod.GET)\n\tpublic String taskList(Model model, HttpServletRequest req) {\n\t\tmodel.addAttribute(\"filter\", 1); // Filter dropdown menu activate\n\t\t// Check the session\n\t\tboolean log = req.getSession().getAttribute(\"id\") != null;\n\t\tif (log) {\n\t\t\tint id = (Integer) req.getSession().getAttribute(\"id\"); // Set the user ID\n\t\t\tSession sesi = sf.openSession();\n\t\t\tList<Task> taskarr = new ArrayList<Task>(); // Create a list for tasks\n\t\t\ttry {\n\t\t\t\t// Fill the task list with tasks\n\t\t\t\ttaskarr = sesi.createQuery(\"from Task where task_user_id = '\" + id + \"' order by task_id desc\").list();\n\t\t\t\tmodel.addAttribute(\"ls\", taskarr); // Create a model for the task list\n\t\t\t} catch (Exception e) {\n\t\t\t\tSystem.err.println(\"Databse error: \" + e);\n\t\t\t}\n\n\t\t\treturn \"tasklist\";\n\t\t} else {\n\t\t\treturn \"redirect:/\";\n\t\t}\n\t}", "code_summary": "// Task list page", "code_snippets": [{"sub_id": 0, "code_snippet": "boolean log = req.getSession().getAttribute(\"id\") != null;", "code_summary": "// Check the session", "place": [6, 6]}, {"sub_id": 1, "code_snippet": "int id = (Integer) req.getSession().getAttribute(\"id\");", "code_summary": "// Set the user ID", "place": [8, 8]}, {"sub_id": 2, "code_snippet": "List<Task> taskarr = new ArrayList<Task>();", "code_summary": "// Create a list for tasks", "place": [10, 10]}, {"sub_id": 3, "code_snippet": "taskarr = sesi.createQuery(\"from Task where task_user_id = '\" + id + \"' order by task_id desc\").list();", "code_summary": "// Fill the task list with tasks", "place": [13, 13]}, {"sub_id": 4, "code_snippet": "model.addAttribute(\"ls\", taskarr);", "code_summary": "// Create a model for the task list", "place": [14, 14]}], "id": 74}
{"repo": "enestasdemir/TaskList", "path": "src/main/java/com/tasdemir/tasklist/TaskController.java", "star_count": 0, "raw_code": "@RequestMapping(value = \"/taskadd\", method = RequestMethod.GET)\n\tpublic String taskAddPage(HttpServletRequest req, Model model) {\n\t\t// Check errors\n\t\tboolean error = req.getSession().getAttribute(\"error\") != null;\n\t\tif (error) {\n\t\t\tString err = \"\" + req.getSession().getAttribute(\"error\"); // Convert error object to string\n\t\t\tmodel.addAttribute(\"error\", err); // Set error model\n\t\t\treq.getSession().removeAttribute(\"error\"); // Clear error object\n\t\t}\n\n\t\treturn Utils.loginControl(req, \"redirect:/\", \"taskadd\");\n\t}", "code_summary": "// Task add page", "code_snippets": [{"sub_id": 0, "code_snippet": "model.addAttribute(\"error\", err);", "code_summary": "// Set error model", "place": [7, 7]}, {"sub_id": 1, "code_snippet": "req.getSession().removeAttribute(\"error\");", "code_summary": "// Clear error object", "place": [8, 8]}], "id": 75}
{"repo": "enestasdemir/TaskList", "path": "src/main/java/com/tasdemir/tasklist/TaskController.java", "star_count": 0, "raw_code": "@RequestMapping(value = \"/addtask\", method = RequestMethod.POST)\n\tpublic String addTask(Task task, HttpServletRequest req, @RequestParam String startDate,\n\t\t\t@RequestParam String dueDate) {\n\t\t// Check required fields\n\t\tif (task.getTaskName().equals(\"\") || task.getTaskDescription().equals(\"\") || startDate.equals(\"\")\n\t\t\t\t|| dueDate.equals(\"\")) {\n\t\t\treq.getSession().setAttribute(\"error\", \"All fields are required!\");\n\t\t\treturn \"redirect:/taskadd\";\n\t\t}\n\n\t\t// Check the sessions\n\t\tboolean log = req.getSession().getAttribute(\"id\") != null;\n\t\tif (log) {\n\t\t\tint id = (Integer) req.getSession().getAttribute(\"id\"); // Standart user ID\n\n\t\t\t// Date formatter (String -> Date)\n\t\t\tSimpleDateFormat formatter = new SimpleDateFormat(\"yyyy-MM-dd\");\n\t\t\tDate sd = new Date();\n\t\t\tDate dd = new Date();\n\t\t\ttry {\n\t\t\t\tsd = formatter.parse(startDate);\n\t\t\t\tdd = formatter.parse(dueDate);\n\t\t\t} catch (ParseException e) {\n\t\t\t\tSystem.err.println(\"Date parse error: \" + e);\n\t\t\t}\n\n\t\t\t// New task creating\n\t\t\tSession sesi = sf.openSession();\n\t\t\tTransaction tr = sesi.beginTransaction();\n\t\t\ttask.setTaskId(Integer.MAX_VALUE); // Set task id\n\t\t\ttask.setTaskUserId(id); // Set task user id\n\t\t\ttask.setTaskStartDate(sd); // Set task start date\n\t\t\ttask.setTaskDueDate(dd); // Set task due date\n\t\t\tsesi.save(task); // Save task\n\t\t\ttr.commit();\n\t\t\tsesi.close();\n\n\t\t\treturn \"redirect:/tasklist\";\n\t\t} else {\n\t\t\treturn \"redirect:/\";\n\t\t}\n\t}", "code_summary": "// Task create action", "code_snippets": [{"sub_id": 0, "code_snippet": "if (task.getTaskName().equals(\"\") || task.getTaskDescription().equals(\"\") || startDate.equals(\"\")\n\t\t\t\t|| dueDate.equals(\"\")) {\n\t\t\treq.getSession().setAttribute(\"error\", \"All fields are required!\");\n\t\t\treturn \"redirect:/taskadd\";\n\t\t}", "code_summary": "// Check required fields", "place": [5, 9]}, {"sub_id": 1, "code_snippet": "boolean log = req.getSession().getAttribute(\"id\") != null;\nif (log) {\n    int id = (Integer) req.getSession().getAttribute(\"id\"); // Standart user ID", "code_summary": "// Check the sessions", "place": [12, 14]}, {"sub_id": 2, "code_snippet": "SimpleDateFormat formatter = new SimpleDateFormat(\"yyyy-MM-dd\");\nDate sd = new Date();\nDate dd = new Date();\ntry {\n    sd = formatter.parse(startDate);\n    dd = formatter.parse(dueDate);\n} catch (ParseException e) {\n    System.err.println(\"Date parse error: \" + e);\n}", "code_summary": "// Date formatter (String -> Date)", "place": [17, 25]}, {"sub_id": 3, "code_snippet": "Session sesi = sf.openSession();\nTransaction tr = sesi.beginTransaction();\ntask.setTaskId(Integer.MAX_VALUE); // Set task id\ntask.setTaskUserId(id); // Set task user id\ntask.setTaskStartDate(sd); // Set task start date\ntask.setTaskDueDate(dd); // Set task due date\nsesi.save(task); // Save task\ntr.commit();\nsesi.close();", "code_summary": "// New task creating", "place": [28, 36]}, {"sub_id": 4, "code_snippet": "task.setTaskId(Integer.MAX_VALUE);", "code_summary": "// Set task id", "place": [30, 30]}, {"sub_id": 5, "code_snippet": "task.setTaskUserId(id);", "code_summary": "// Set task user id", "place": [31, 31]}, {"sub_id": 6, "code_snippet": "task.setTaskStartDate(sd);", "code_summary": "// Set task start date", "place": [32, 32]}], "id": 76}
{"repo": "enestasdemir/TaskList", "path": "src/main/java/com/tasdemir/tasklist/TaskController.java", "star_count": 0, "raw_code": "@SuppressWarnings(\"unchecked\")\n\t@RequestMapping(value = \"/taskedit/{id}\", method = RequestMethod.GET)\n\tpublic String taskEditPage(@PathVariable Integer id, Model model, HttpServletRequest req) {\n\t\ttid = id; // Set task ID for update operations\n\t\tUser user = (User) req.getSession().getAttribute(\"user\"); // Get the user's attributes\n\n\t\tSession sesi = sf.openSession();\n\t\t// Create a list and fill it with the task\n\t\tList<Task> ls = sesi.createQuery(\"from Task where taskId = '\" + id + \"' \").setMaxResults(1).list();\n\t\t// Check the user's ID for validation\n\t\tif (ls.get(0).getTaskUserId() != user.getUserId()) {\n\t\t\tmodel.addAttribute(\"error\", \"User is not validated!\");\n\t\t} else {\n\t\t\tmodel.addAttribute(\"ls\", ls); // Create a model for the task\n\t\t\tsesi.close();\n\t\t}\n\t\treturn Utils.loginControl(req, \"redirect:/\", \"taskedit\");\n\t}", "code_summary": "// Task edit page// Selected task id", "code_snippets": [{"sub_id": 0, "code_snippet": "tid = id;", "code_summary": "// Set task ID for update operations", "place": [4, 4]}, {"sub_id": 1, "code_snippet": "List<Task> ls = sesi.createQuery(\"from Task where taskId = '\" + id + \"' \").setMaxResults(1).list();", "code_summary": "// Create a list and fill it with the task", "place": [9, 9]}, {"sub_id": 2, "code_snippet": "model.addAttribute(\"ls\", ls);", "code_summary": "// Create a model for the task", "place": [14, 14]}], "id": 77}
{"repo": "enestasdemir/TaskList", "path": "src/main/java/com/tasdemir/tasklist/TaskController.java", "star_count": 0, "raw_code": "@RequestMapping(value = \"/updatetask\", method = RequestMethod.POST)\n\tpublic String updateTask(Task task, HttpServletRequest req, @RequestParam String startDate,\n\t\t\t@RequestParam String dueDate) {\n\t\t// Check required fields\n\t\tif (task.getTaskName().equals(\"\") || task.getTaskDescription().equals(\"\") || startDate.equals(\"\")\n\t\t\t\t|| dueDate.equals(\"\")) {\n\t\t\treq.getSession().setAttribute(\"error\", \"All fields are required!\");\n\t\t\treturn \"redirect:/taskedit/\" + tid;\n\t\t}\n\n\t\t// Check the session\n\t\tboolean log = req.getSession().getAttribute(\"id\") != null;\n\t\tif (log) {\n\t\t\tint id = (Integer) req.getSession().getAttribute(\"id\"); // Standart user ID\n\n\t\t\t// Date formatter (String -> Date)\n\t\t\tSimpleDateFormat formatter = new SimpleDateFormat(\"yyyy-MM-dd\");\n\t\t\tDate sd = new Date();\n\t\t\tDate dd = new Date();\n\t\t\ttry {\n\t\t\t\tsd = formatter.parse(startDate);\n\t\t\t\tdd = formatter.parse(dueDate);\n\t\t\t} catch (ParseException e) {\n\t\t\t\tSystem.err.println(\"Date parse error: \" + e);\n\t\t\t}\n\n\t\t\t// New task creating\n\t\t\tSession sesi = sf.openSession();\n\t\t\tTransaction tr = sesi.beginTransaction();\n\t\t\ttask.setTaskId(tid); // Set the task id\n\t\t\ttask.setTaskUserId(id); // Set the task user ID\n\t\t\ttask.setTaskStartDate(sd); // Set the task start date\n\t\t\ttask.setTaskDueDate(dd); // Set the task due date\n\t\t\tsesi.update(task); // Update the task\n\t\t\ttr.commit();\n\t\t\tsesi.close();\n\n\t\t\treturn \"redirect:/tasklist\";\n\t\t} else {\n\t\t\treturn \"redirect:/\";\n\t\t}\n\t}", "code_summary": "// Task edit action", "code_snippets": [{"sub_id": 0, "code_snippet": "if (task.getTaskName().equals(\"\") || task.getTaskDescription().equals(\"\") || startDate.equals(\"\")\n\t\t\t\t|| dueDate.equals(\"\")) {\n\t\t\treq.getSession().setAttribute(\"error\", \"All fields are required!\");\n\t\t\treturn \"redirect:/taskedit/\" + tid;\n\t\t}", "code_summary": "// Check required fields", "place": [5, 9]}, {"sub_id": 1, "code_snippet": "boolean log = req.getSession().getAttribute(\"id\") != null;\nif (log) {\n\tint id = (Integer) req.getSession().getAttribute(\"id\"); // Standart user ID", "code_summary": "// Check the session", "place": [12, 14]}, {"sub_id": 2, "code_snippet": "SimpleDateFormat formatter = new SimpleDateFormat(\"yyyy-MM-dd\");\nDate sd = new Date();\nDate dd = new Date();\ntry {\n    sd = formatter.parse(startDate);\n    dd = formatter.parse(dueDate);\n} catch (ParseException e) {\n    System.err.println(\"Date parse error: \" + e);\n}", "code_summary": "// Date formatter (String -> Date)", "place": [17, 25]}, {"sub_id": 3, "code_snippet": "Session sesi = sf.openSession();\nTransaction tr = sesi.beginTransaction();\ntask.setTaskId(tid); // Set the task id\ntask.setTaskUserId(id); // Set the task user ID\ntask.setTaskStartDate(sd); // Set the task start date\ntask.setTaskDueDate(dd); // Set the task due date\nsesi.update(task); // Update the task\ntr.commit();\nsesi.close();", "code_summary": "// New task creating", "place": [28, 36]}, {"sub_id": 4, "code_snippet": "task.setTaskStartDate(sd);", "code_summary": "// Set the task start date", "place": [32, 32]}, {"sub_id": 5, "code_snippet": "task.setTaskDueDate(dd);", "code_summary": "// Set the task due date", "place": [33, 33]}], "id": 78}
{"repo": "rocribera/GeekHub_Android", "path": "app/src/main/java/org/udg/pds/todoandroid/activity/ProfileSettings.java", "star_count": 0, "raw_code": "public String getRealPathFromURI(Uri contentUri) {\n\n        // can post image\n        String [] proj={MediaStore.Images.Media.DATA};\n        Cursor cursor = managedQuery( contentUri,\n                proj,                // Which columns to return\n                null,       // WHERE clause; which rows to return (all rows)\n                null,    // WHERE clause selection arguments (none)\n                null);      // Order-by clause (ascending by name)\n        int column_index = cursor.getColumnIndexOrThrow(MediaStore.Images.Media.DATA);\n        cursor.moveToFirst();\n\n        return cursor.getString(column_index);\n    }", "code_summary": "// And to convert the image URI to the direct file system path of the image file", "code_snippets": [{"sub_id": 0, "code_snippet": "String [] proj={MediaStore.Images.Media.DATA};\nCursor cursor = managedQuery( contentUri,\n        proj,                // Which columns to return\n        null,       // WHERE clause; which rows to return (all rows)\n        null,    // WHERE clause selection arguments (none)\n        null);      // Order-by clause (ascending by name)", "code_summary": "// can post image", "place": [4, 9]}, {"sub_id": 1, "code_snippet": "null,", "code_summary": "// WHERE clause selection arguments (none)", "place": [7, 7]}], "id": 83}
{"repo": "Olutobz/self-work", "path": "src/dietelBook/chapter3/AccountTest.java", "star_count": 1, "raw_code": "public static void main(String[] args) {\r\n        Account account1 = new Account(50503.02); //create account object\r\n        Account account2 = new Account(4270.89); //create account object\r\n\r\n        //display initial balance of each object\r\n        System.out.printf(\"Account1 balance: $%.2f\\n\", account1.getBalance());\r\n        System.out.printf(\"Account2 balance: $%.2f\\n\", account2.getBalance());\r\n        System.out.println(); //outputs a blank line\r\n\r\n        //program uses class scanner to collect input from user\r\n        Scanner input = new Scanner(System.in);\r\n\r\n        //validates credit and gives account details\r\n        System.out.print(\"Enter deposit amount for account1: \");\r\n        double depositAmount; //deposit amount read from user\r\n        depositAmount = input.nextDouble();\r\n        System.out.printf(\"\\nAdding %.2f to account1 balance\\n\", depositAmount );\r\n        account1.credit(depositAmount); //adds new amount to account1 balance\r\n        System.out.printf(\"\\nAccount1 balance: $%.2f\\n\", account1.getBalance());\r\n        System.out.printf(\"Account2 balance: $%.2f\\n\", account2.getBalance());\r\n\r\n        System.out.print(\"\\nEnter deposit amount for account2: \");\r\n        depositAmount = input.nextDouble();\r\n        System.out.printf(\"\\nAdding %.2f to account2 balance\\n\", depositAmount);\r\n        account2.credit(depositAmount);\r\n        System.out.printf(\"\\nAccount1 balance: $%.2f\\n\", account1.getBalance());\r\n        System.out.printf(\"Account2 balance: $%.2f\\n\\n\", account2.getBalance());\r\n\r\n        System.out.println(\"Thank you for banking with us!!!\\n\\n\\n\");\r\n\r\n        //validates withdrawal and gives account details\r\n        double debitAmount;\r\n        System.out.print(\"Enter amount to withdraw from account1: \");\r\n        debitAmount = input.nextDouble();\r\n        System.out.printf(\"\\nSubtract %.2f from account1 balance\\n\", debitAmount );\r\n        account1.debit(debitAmount);\r\n        System.out.printf(\"\\nAccount1 balance: $%.2f\\n\", account1.getBalance());\r\n        System.out.printf(\"Account2 balance: $%.2f\\n\", account2.getBalance());\r\n\r\n        System.out.print(\"Enter amount to withdraw from account2: \");\r\n        debitAmount = input.nextDouble();\r\n        System.out.printf(\"\\nSubtract %.2f from account2 balance\\n\", debitAmount);\r\n        account2.debit(debitAmount);\r\n        System.out.printf(\"\\nAccount1 balance: $%.2f\\n\", account1.getBalance());\r\n        System.out.printf(\"Account2 balance: $%.2f\\n\", account2.getBalance());\r\n\r\n        System.out.println(\"Thank you for banking with us!!!\\n\\n\");\r\n\r\n    }", "code_summary": "//main method begins program execution\r", "code_snippets": [{"sub_id": 0, "code_snippet": "System.out.printf(\"Account1 balance: $%.2f\\n\", account1.getBalance());\nSystem.out.printf(\"Account2 balance: $%.2f\\n\", account2.getBalance());\nSystem.out.println();", "code_summary": "//display initial balance of each object\r", "place": [6, 8]}, {"sub_id": 1, "code_snippet": "System.out.println(); //outputs a blank line", "code_summary": "//outputs a blank line\r", "place": [8, 8]}, {"sub_id": 2, "code_snippet": "Scanner input = new Scanner(System.in);", "code_summary": "//program uses class scanner to collect input from user\r", "place": [11, 11]}, {"sub_id": 3, "code_snippet": "System.out.print(\"Enter deposit amount for account1: \");\ndouble depositAmount; //deposit amount read from user\ndepositAmount = input.nextDouble();\nSystem.out.printf(\"\\nAdding %.2f to account1 balance\\n\", depositAmount );\naccount1.credit(depositAmount); //adds new amount to account1 balance\nSystem.out.printf(\"\\nAccount1 balance: $%.2f\\n\", account1.getBalance());\nSystem.out.printf(\"Account2 balance: $%.2f\\n\", account2.getBalance());\n\nSystem.out.print(\"\\nEnter deposit amount for account2: \");\ndepositAmount = input.nextDouble();\nSystem.out.printf(\"\\nAdding %.2f to account2 balance\\n\", depositAmount);\naccount2.credit(depositAmount);\nSystem.out.printf(\"\\nAccount1 balance: $%.2f\\n\", account1.getBalance());\nSystem.out.printf(\"Account2 balance: $%.2f\\n\\n\", account2.getBalance());\n\nSystem.out.println(\"Thank you for banking with us!!!\\n\\n\\n\");", "code_summary": "//validates credit and gives account details\r", "place": [14, 29]}, {"sub_id": 4, "code_snippet": "double depositAmount; //deposit amount read from user\ndepositAmount = input.nextDouble();", "code_summary": "//deposit amount read from user\r", "place": [15, 16]}, {"sub_id": 5, "code_snippet": "account1.credit(depositAmount);", "code_summary": "//adds new amount to account1 balance\r", "place": [18, 18]}, {"sub_id": 6, "code_snippet": "double debitAmount;\nSystem.out.print(\"Enter amount to withdraw from account1: \");\ndebitAmount = input.nextDouble();\nSystem.out.printf(\"\\nSubtract %.2f from account1 balance\\n\", debitAmount );\naccount1.debit(debitAmount);\nSystem.out.printf(\"\\nAccount1 balance: $%.2f\\n\", account1.getBalance());\nSystem.out.printf(\"Account2 balance: $%.2f\\n\", account2.getBalance());\n\nSystem.out.print(\"Enter amount to withdraw from account2: \");\ndebitAmount = input.nextDouble();\nSystem.out.printf(\"\\nSubtract %.2f from account2 balance\\n\", debitAmount);\naccount2.debit(debitAmount);\nSystem.out.printf(\"\\nAccount1 balance: $%.2f\\n\", account1.getBalance());\nSystem.out.printf(\"Account2 balance: $%.2f\\n\", account2.getBalance());\n\nSystem.out.println(\"Thank you for banking with us!!!\\n\\n\");", "code_summary": "//validates withdrawal and gives account details\r", "place": [32, 47]}], "id": 88}
{"repo": "faph/textfile-export", "path": "src/hec/dssgui/plugins/textfileexport/BasicDom.java", "star_count": 0, "raw_code": "public static Document parseXmlFile(URI filename, boolean validating) {\r\n        try {\r\n            // Create a builder factory\r\n            DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\r\n            factory.setValidating(validating);\r\n\r\n            // Create the builder and parse the file\r\n            File file = new File(filename);\r\n            Document doc = factory.newDocumentBuilder().parse(file);\r\n            return doc;\r\n        } catch (SAXException e) {\r\n            // A parsing error occurred; the xml input is not valid\r\n            Logger.getLogger(BasicDom.class.getName()).log(Level.SEVERE, null, e);\r\n        } catch (ParserConfigurationException e) {\r\n            Logger.getLogger(BasicDom.class.getName()).log(Level.SEVERE, null, e);\r\n        } catch (IOException e) {\r\n            Logger.getLogger(BasicDom.class.getName()).log(Level.SEVERE, null, e);\r\n        }\r\n        return null;\r\n    }", "code_summary": "// specified in the file.\r// If validating is true, the contents is validated against the DTD\r// Parses an XML file and returns a DOM document.\r", "code_snippets": [{"sub_id": 0, "code_snippet": "DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\nfactory.setValidating(validating);", "code_summary": "// Create a builder factory\r", "place": [4, 5]}, {"sub_id": 1, "code_snippet": "File file = new File(filename);\r\nDocument doc = factory.newDocumentBuilder().parse(file);", "code_summary": "// Create the builder and parse the file\r", "place": [8, 9]}], "id": 102}
{"repo": "quantech-bristol/electronic-handover-v2", "path": "src/main/java/com/quantech/entities/patient/Patient.java", "star_count": 0, "raw_code": "private Long NHSNumberValidityCheck(Long NHSNumber) {\n        EntityFieldHandler.nullCheck(NHSNumber, \"NHS number\");\n\n        int digits = NHSNumber.toString().length();\n\n        if (digits > 10)\n            throw new IllegalArgumentException(\"Error: NHS number has too many digits.\");\n\n        // Check that the checksum is correct.\n        if (!checksumCorrect(NHSNumber))\n            throw new IllegalArgumentException(\"Error: NHS number is not valid (checksum does not match)\");\n\n        return NHSNumber;\n    }", "code_summary": "// Used to check that an NHS number is valid before setting an attribute to be equal to it.", "code_snippets": [{"sub_id": 0, "code_snippet": "if (!checksumCorrect(NHSNumber))\n    throw new IllegalArgumentException(\"Error: NHS number is not valid (checksum does not match)\");", "code_summary": "// Check that the checksum is correct.", "place": [10, 11]}], "id": 103}
{"repo": "quantech-bristol/electronic-handover-v2", "path": "src/main/java/com/quantech/entities/patient/Patient.java", "star_count": 0, "raw_code": "private int checkDigit(Long n) {\n        String digits = n.toString();\n\n        if (digits.length() < 10) {\n            StringBuilder zeros = new StringBuilder();\n            for (int i = 0; i < 10 - digits.length(); i++) {\n                zeros.append('0');\n            }\n            digits = zeros.toString() + digits;\n        }\n\n        // Applying Modulus 11 algorithm:\n        // Source: http://www.datadictionary.nhs.uk/data_dictionary/attributes/n/nhs/nhs_number_de.asp?shownav=1\n        // 1- Apply factors:\n        int sum = 0;\n        int factor = 10;\n        for (int i = 0; i < 9; i++) {\n            int dig = Character.getNumericValue(digits.charAt(i));\n            sum += dig * factor;\n            factor--;\n        }\n        // 2- Find the remainder of dividing by 11.\n        int r = sum % 11;\n        // 3- Take the remainder away from 11 to get the check digit.\n        int checkDigit = 11 - r;\n        // 4- If the value is 10 then the check digit used is 0. If it is 0, then the number is invalid.\n        if (checkDigit == 10)\n            return -1;\n        if (checkDigit == 11)\n            checkDigit = 0;\n        // 5- Check the remainder matches the check digit.\n        return checkDigit;\n    }", "code_summary": "// Checks that the checksum of the NHS number is correct.", "code_snippets": [{"sub_id": 0, "code_snippet": "int sum = 0;\nint factor = 10;\nfor (int i = 0; i < 9; i++) {\n    int dig = Character.getNumericValue(digits.charAt(i));\n    sum += dig * factor;\n    factor--;\n}", "code_summary": "// 1- Apply factors:", "place": [15, 21]}, {"sub_id": 1, "code_snippet": "int r = sum % 11;", "code_summary": "// 2- Find the remainder of dividing by 11.", "place": [23, 23]}, {"sub_id": 2, "code_snippet": "int checkDigit = 11 - r;", "code_summary": "// 3- Take the remainder away from 11 to get the check digit.", "place": [25, 25]}, {"sub_id": 3, "code_snippet": "if (checkDigit == 10)\n    return -1;\nif (checkDigit == 11)\n    checkDigit = 0;", "code_summary": "// 4- If the value is 10 then the check digit used is 0. If it is 0, then the number is invalid.", "place": [27, 30]}, {"sub_id": 4, "code_snippet": "return checkDigit;", "code_summary": "// 5- Check the remainder matches the check digit.", "place": [32, 32]}], "id": 104}
{"repo": "shaileshn/api-snippets", "path": "quickstart/java/sms/example-5/ReplyByName.7.x.java", "star_count": 0, "raw_code": "public void service(HttpServletRequest request, HttpServletResponse response) throws IOException {\n        // Create a dict of people we know.\n        HashMap<String, String> people = new HashMap<String, String>();\n        people.put(\"+14158675309\", \"<NAME>\");\n        people.put(\"+14158675310\", \"Boots\");\n        people.put(\"+14158675311\", \"Virgil\");\n\n        // if the sender is known, then greet them by name\n        String fromNumber = request.getParameter(\"From\");\n        String name = fromNumber != null && people.get(fromNumber) != null\n            ? people.get(fromNumber)\n            : \"Monkey\";\n        String message =String.format(\"%s, thanks for the message!\", name);\n\n        try {\n            MessagingResponse twiml = new MessagingResponse\n                .Builder()\n                .message(message)\n                .build();\n        } catch (TwiMLException e) {\n            e.printStackTrace();\n        }\n\n        response.setContentType(\"application/xml\");\n        response.getWriter().print(twiml.toXml());\n    }", "code_summary": "// You can also use doGet() or doPost()// service() responds to both GET and POST requests.", "code_snippets": [{"sub_id": 0, "code_snippet": "HashMap<String, String> people = new HashMap<String, String>();\npeople.put(\"+14158675309\", \"<NAME>\");\npeople.put(\"+14158675310\", \"Boots\");\npeople.put(\"+14158675311\", \"Virgil\");", "code_summary": "// Create a dict of people we know.", "place": [3, 6]}, {"sub_id": 1, "code_snippet": "String fromNumber = request.getParameter(\"From\");\nString name = fromNumber != null && people.get(fromNumber) != null\n    ? people.get(fromNumber)\n    : \"Monkey\";\nString message =String.format(\"%s, thanks for the message!\", name);", "code_summary": "// if the sender is known, then greet them by name", "place": [9, 13]}], "id": 127}
{"repo": "ChicGeek2/app-inventor-for-android", "path": "samples/AppInventorInJavaSample/src/com/google/appinventor/javatest1/MyButton.java", "star_count": 1, "raw_code": "@Override\n  public void click() {\n    // Call the users Click event handler. Note that we distinguish the click() abstract method\n    // implementation from the Click() event handler method.\n    Click();\n  }", "code_summary": "// behavior which just invokes a Click handler that can be registered in the Form object.// Some ButtonBase subclasses want to do more complex things, but here we just define a basic", "code_snippets": [{"sub_id": 0, "code_snippet": "Click();", "code_summary": "// Call the users Click event handler. Note that we distinguish the click() abstract method // implementation from the Click() event handler method.", "place": [5, 5]}], "id": 132}
{"repo": "FoleyFreeze/2019-FRC", "path": "src/main/java/frc/robot/subsystems/Elevator.java", "star_count": 0, "raw_code": "public void gotoPosition (ElevatorPosition position) {\n        if(position == ElevatorPosition.DONT_MOVE){\n            out.setElevatorMotor(0);\n        } else {\n            double setpoint = k.ELE_PositionArray[position.ordinal()] + k.ELE_PositionOffset;\n            if(in.elevatorStage && setpoint > k.ELE_StageHeight){\n                setpoint = k.ELE_StageHeight;\n            }\n\n            //force slowing down when the elevator is low and moving down\n            double lowPowerLimit = k.ELE_PIDLimitDown;\n            if(sense.elevatorEncoder < k.ELE_LowLimitPosition) lowPowerLimit = k.ELE_PIDLimitDownLow;\n\n            double error = setpoint - sense.elevatorEncoder;\n            double power = error*k.ELE_PositionKP;\n            if(power > k.ELE_PIDLimitUp) power = k.ELE_PIDLimitUp;\n            if(power < -lowPowerLimit) power = -lowPowerLimit;\n            out.setElevatorMotor(power);\n        }\n    }", "code_summary": "// elevator goes to set position value", "code_snippets": [{"sub_id": 0, "code_snippet": "double lowPowerLimit = k.ELE_PIDLimitDown;\nif(sense.elevatorEncoder < k.ELE_LowLimitPosition) lowPowerLimit = k.ELE_PIDLimitDownLow;", "code_summary": "//force slowing down when the elevator is low and moving down", "place": [11, 12]}], "id": 141}
{"repo": "NguyenTuanMi/Gart", "path": "src/main/java/frc/robot/commands/Shooting.java", "star_count": 0, "raw_code": "@Override\n  public void initialize() {\n    shoot.shooter(x); // Set the speed of the wheel of 2 shooter\n  }", "code_summary": "// Called when the command is initially scheduled.", "code_snippets": [{"sub_id": 0, "code_snippet": "shoot.shooter(x);", "code_summary": "// Set the speed of the wheel of 2 shooter", "place": [3, 3]}], "id": 144}
{"repo": "Storm-Cloud/Cyclic", "path": "src/main/java/com/lothrazar/cyclic/block/uncrafter/TileUncraft.java", "star_count": 0, "raw_code": "private boolean recipeMatches(ItemStack stack, IRecipe<?> recipe) {\n    //    if (stack.getTag() != null && stack.getTag().keySet().size() == 1 && stack.getTag().keySet().contains(Const.NBT_REPAIR_COST)) {\n    //      //what is it\n    //      stack.setTag(null);\n    //    }\n    // do items match\n    if (stack.isEmpty() ||\n        recipe.getRecipeOutput().isEmpty() ||\n        recipe.getRecipeOutput().getCount() > stack.getCount()) {\n      this.status = UncraftStatusEnum.NORECIPE;\n      return false;\n    }\n    //check config\n    if (UtilString.isInList(TileUncraft.IGNORELIST.get(), stack.getItem().getRegistryName())) {\n      ModCyclic.LOGGER.info(\"Uncrafter: blocked by config list \" + stack);\n      this.status = UncraftStatusEnum.CONFIG;\n      return false;\n    }\n    //both itemstacks are non-empty, and we have enough quantity\n    boolean matches = false;\n    if (TileUncraft.IGNORE_NBT.get()) {\n      ModCyclic.LOGGER.info(\"Uncrafter NBT ignored \" + stack.getTag());\n      matches = stack.getItem() == recipe.getRecipeOutput().getItem();\n    }\n    else {\n      matches = stack.getItem() == recipe.getRecipeOutput().getItem() &&\n          ItemStack.areItemStackTagsEqual(stack, recipe.getRecipeOutput());\n    }\n    if (!matches) {\n      this.status = UncraftStatusEnum.NORECIPE;\n    }\n    return matches;\n  }", "code_summary": "// matches count and has enough", "code_snippets": [{"sub_id": 0, "code_snippet": "stack.setTag(null);", "code_summary": "//      //what is it", "place": [4, 4]}, {"sub_id": 1, "code_snippet": "if (stack.isEmpty() ||\n    recipe.getRecipeOutput().isEmpty() ||\n    recipe.getRecipeOutput().getCount() > stack.getCount()) {\n  this.status = UncraftStatusEnum.NORECIPE;\n  return false;\n}", "code_summary": "// do items match", "place": [7, 12]}], "id": 150}
{"repo": "racker/omnibus", "path": "source/db-5.0.26.NC/examples_java/src/persist/gettingStarted/SimpleStoreGet.java", "star_count": 2, "raw_code": "public void setup()\n        throws DatabaseException {\n\n        try {\n            EnvironmentConfig envConfig = new EnvironmentConfig();\n            StoreConfig storeConfig = new StoreConfig();\n\n            // Open the environment and entity store\n            envmnt = new Environment(envHome, envConfig);\n            store = new EntityStore(envmnt, \"EntityStore\", storeConfig);\n        } catch (FileNotFoundException fnfe) {\n            System.err.println(\"setup(): \" + fnfe.toString());\n            System.exit(-1);\n        }\n    }", "code_summary": "// for us.// The setup() method opens the environment and store", "code_snippets": [{"sub_id": 0, "code_snippet": "envmnt = new Environment(envHome, envConfig);\nstore = new EntityStore(envmnt, \"EntityStore\", storeConfig);", "code_summary": "// Open the environment and entity store", "place": [9, 10]}], "id": 167}
{"repo": "Aconime/HeartGame", "path": "src/lib/Authentication.java", "star_count": 0, "raw_code": "public int[] authenticateLogin(String uname, String pwd) {\r\n        int[] verified = {0, 0};\r\n\r\n        // Create new database object and connect to it\r\n        Database db = new Database();\r\n        Connection dbConn = db.connect();\r\n\r\n        // If the connection failed return and display error\r\n        if (dbConn == null) {\r\n            verified = new int[]{-1, 0};\r\n            return verified;\r\n        }\r\n\r\n        // Search for the given username with an SQL Query and prepare the statement for execution.\r\n        // PreparedStatement is better than Statement -> Protects against SQL Injections\r\n        try {\r\n            String sqlQuery = \"SELECT * FROM players WHERE player_uname='\"+uname+\"'\";\r\n            PreparedStatement statement = dbConn.prepareStatement(sqlQuery);\r\n            ResultSet results = statement.executeQuery();\r\n\r\n            // Check if an entry with that username was found in the database\r\n            if (results.next()) {\r\n                // Check if the password of the user found is equal to the password entered.\r\n                // Passwords are hashed so BCrypt is used to compare in this case.\r\n                boolean matchPwd = BCrypt.checkpw(pwd, results.getString(\"player_pwd\"));\r\n                if (matchPwd) {\r\n                    // Pass the status and the player_id to this object array\r\n                    verified = new int[]{1, Integer.parseInt(results.getString(\"player_id\"))};\r\n                }\r\n            }\r\n        } catch (SQLException e) { }\r\n\r\n        db.disconnect(); // Disconnect from the database\r\n\r\n        // Return the object array back to verify the status of the authentication\r\n        return verified;\r\n    }", "code_summary": "// Authenticate login credentials from player (Used: LoginGUI)\r", "code_snippets": [{"sub_id": 0, "code_snippet": "Database db = new Database();\nConnection dbConn = db.connect();", "code_summary": "// Create new database object and connect to it\r", "place": [5, 6]}, {"sub_id": 1, "code_snippet": "if (dbConn == null) {\n    verified = new int[]{-1, 0};\n    return verified;\n}", "code_summary": "// If the connection failed return and display error\r", "place": [9, 12]}, {"sub_id": 2, "code_snippet": "String sqlQuery = \"SELECT * FROM players WHERE player_uname='\"+uname+\"'\";\r\nPreparedStatement statement = dbConn.prepareStatement(sqlQuery);\r\nResultSet results = statement.executeQuery();", "code_summary": "// Search for the given username with an SQL Query and prepare the statement for execution.\r // PreparedStatement is better than Statement -> Protects against SQL Injections\r", "place": [17, 19]}, {"sub_id": 3, "code_snippet": "if (results.next()) {\n    // Check if the password of the user found is equal to the password entered.\n    // Passwords are hashed so BCrypt is used to compare in this case.\n    boolean matchPwd = BCrypt.checkpw(pwd, results.getString(\"player_pwd\"));\n    if (matchPwd) {\n        // Pass the status and the player_id to this object array\n        verified = new int[]{1, Integer.parseInt(results.getString(\"player_id\"))};\n    }\n}", "code_summary": "// Check if an entry with that username was found in the database\r", "place": [22, 30]}, {"sub_id": 4, "code_snippet": "boolean matchPwd = BCrypt.checkpw(pwd, results.getString(\"player_pwd\"));\nif (matchPwd) {\n    // Pass the status and the player_id to this object array\n    verified = new int[]{1, Integer.parseInt(results.getString(\"player_id\"))};\n}", "code_summary": "// Check if the password of the user found is equal to the password entered.\r // Passwords are hashed so BCrypt is used to compare in this case.\r", "place": [25, 29]}, {"sub_id": 5, "code_snippet": "verified = new int[]{1, Integer.parseInt(results.getString(\"player_id\"))};", "code_summary": "// Pass the status and the player_id to this object array\r", "place": [28, 28]}, {"sub_id": 6, "code_snippet": "db.disconnect();", "code_summary": "// Disconnect from the database\r", "place": [33, 33]}, {"sub_id": 7, "code_snippet": "return verified;", "code_summary": "// Return the object array back to verify the status of the authentication\r", "place": [11, 11]}], "id": 180}
{"repo": "Hiessy/lagom", "path": "docs/manual/java/guide/cluster/code/docs/home/persistence/Post4.java", "star_count": 0, "raw_code": "private Behavior becomePostAdded(BlogState newState) {\n    BehaviorBuilder b = newBehaviorBuilder(newState);\n\n    b.setCommandHandler(\n        ChangeBody.class,\n        (cmd, ctx) ->\n            ctx.thenPersist(\n                new BodyChanged(entityId(), cmd.getBody()), evt -> ctx.reply(Done.getInstance())));\n\n    b.setEventHandler(BodyChanged.class, evt -> state().withBody(evt.getBody()));\n\n    // #publish\n    b.setCommandHandler(\n        Publish.class,\n        (cmd, ctx) ->\n            ctx.thenPersist(\n                new PostPublished(entityId()),\n                evt -> {\n                  ctx.reply(Done.getInstance());\n                  publishedTopic.publish(evt);\n                }));\n    // #publish\n\n    b.setEventHandler(PostPublished.class, evt -> new BlogState(state().getContent(), true));\n\n    return b.build();\n  }", "code_summary": "// Behavior can be changed in the event handlers.", "code_snippets": [{"sub_id": 0, "code_snippet": "b.setCommandHandler(\n    Publish.class,\n    (cmd, ctx) ->\n        ctx.thenPersist(\n            new PostPublished(entityId()),\n            evt -> {\n              ctx.reply(Done.getInstance());\n              publishedTopic.publish(evt);\n            }));", "code_summary": "// #publish // #publish", "place": [13, 21]}], "id": 211}
{"repo": "agh372/fitApp", "path": "app/src/main/java/com/teamfitness/fitapp/adapter/CouponAdapter.java", "star_count": 0, "raw_code": "@Override\n    public CouponAdapter.CouponViewHolder onCreateViewHolder(ViewGroup parent,\n                                                     int viewType) {\n        // create a new view\n        View view =  LayoutInflater.from(parent.getContext())\n                .inflate(R.layout.coupon_items, parent, false);\n        CouponViewHolder vh = new CouponViewHolder(view);\n        vh.labelText = (TextView) view.findViewById(R.id.label_txt);\n        vh.costDrop = (TextView) view.findViewById(R.id.card_desc_value);\n        vh.coverImage = (ImageView) view.findViewById(R.id.card_image);\n\n        return vh;\n    }", "code_summary": "// Create new views (invoked by the layout manager)", "code_snippets": [{"sub_id": 0, "code_snippet": "View view =  LayoutInflater.from(parent.getContext())\n                .inflate(R.layout.coupon_items, parent, false);", "code_summary": "// create a new view", "place": [5, 6]}], "id": 212}
{"repo": "iootclab/openjdk", "path": "openjdk11/test/jdk/java/awt/regtesthelpers/Sysout.java", "star_count": 2, "raw_code": "public void printInstructions( String[] instructions )\n    {\n        //Clear out any current instructions\n        instructionsText.setText( \"\" );\n\n        //Go down array of instruction strings\n\n        String printStr, remainingStr;\n        for( int i=0; i < instructions.length; i++ )\n        {\n            //chop up each into pieces maxSringLength long\n            remainingStr = instructions[ i ];\n            while( remainingStr.length() > 0 )\n            {\n                //if longer than max then chop off first max chars to print\n                if( remainingStr.length() >= maxStringLength )\n                {\n                    //Try to chop on a word boundary\n                    int posOfSpace = remainingStr.\n                        lastIndexOf( ' ', maxStringLength - 1 );\n\n                    if( posOfSpace <= 0 ) posOfSpace = maxStringLength - 1;\n\n                    printStr = remainingStr.substring( 0, posOfSpace + 1 );\n                    remainingStr = remainingStr.substring( posOfSpace + 1 );\n                }\n                //else just print\n                else\n                {\n                    printStr = remainingStr;\n                    remainingStr = \"\";\n                }\n\n                instructionsText.append( printStr + \"\\n\" );\n\n            }// while\n\n        }// for\n\n    }", "code_summary": "// TestDialog()", "code_snippets": [{"sub_id": 0, "code_snippet": "instructionsText.setText( \"\" );", "code_summary": "//Clear out any current instructions", "place": [4, 4]}, {"sub_id": 1, "code_snippet": "String printStr, remainingStr;\n        for( int i=0; i < instructions.length; i++ ", "code_summary": "//Go down array of instruction strings", "place": [8, 9]}, {"sub_id": 2, "code_snippet": "if( remainingStr.length() >= maxStringLength )\n                {\n                    //Try to chop on a word boundary\n                    int posOfSpace = remainingStr.\n                        lastIndexOf( ' ', maxStringLength - 1 );\n\n                    if( posOfSpace <= 0 ) posOfSpace = maxStringLength - 1;\n\n                    printStr = remainingStr.substring( 0, posOfSpace + 1 );\n                    remainingStr = remainingStr.substring( posOfSpace + 1 );\n                }", "code_summary": "//if longer than max then chop off first max chars to print", "place": [16, 26]}, {"sub_id": 3, "code_snippet": "int posOfSpace = remainingStr.\n    lastIndexOf( ' ', maxStringLength - 1 );\n\nif( posOfSpace <= 0 ) posOfSpace = maxStringLength - 1;", "code_summary": "//Try to chop on a word boundary", "place": [19, 22]}], "id": 219}
{"repo": "bullbots/BullbotFett", "path": "src/main/java/frc/robot/util/DifferentialDriveDebug.java", "star_count": 1, "raw_code": "@SuppressWarnings(\"ParameterName\")\n    public void arcadeDrive(double xSpeed, double zRotation, boolean squareInputs) {\n        super.arcadeDrive(xSpeed, zRotation, squareInputs);\n\n        xSpeed = MathUtil.clamp(xSpeed, -1.0, 1.0);\n        xSpeed = applyDeadband(xSpeed, m_deadband);\n\n        zRotation = MathUtil.clamp(zRotation, -1.0, 1.0);\n        zRotation = applyDeadband(zRotation, m_deadband);\n\n        // Square the inputs (while preserving the sign) to increase fine control\n        // while permitting full power.\n        if (squareInputs) {\n            xSpeed = Math.copySign(xSpeed * xSpeed, xSpeed);\n            zRotation = Math.copySign(zRotation * zRotation, zRotation);\n        }\n\n        double leftMotorOutput;\n        double rightMotorOutput;\n\n        double maxInput = Math.copySign(Math.max(Math.abs(xSpeed), Math.abs(zRotation)), xSpeed);\n\n        if (xSpeed >= 0.0) {\n            // First quadrant, else second quadrant\n            if (zRotation >= 0.0) {\n                leftMotorOutput = maxInput;\n                rightMotorOutput = xSpeed - zRotation;\n            } else {\n                leftMotorOutput = xSpeed + zRotation;\n                rightMotorOutput = maxInput;\n            }\n        } else {\n            // Third quadrant, else fourth quadrant\n            if (zRotation >= 0.0) {\n                leftMotorOutput = xSpeed + zRotation;\n                rightMotorOutput = maxInput;\n            } else {\n                leftMotorOutput = maxInput;\n                rightMotorOutput = xSpeed - zRotation;\n            }\n        }\n\n        // SmartDashboard.putNumber(\"Left Motor - ArcadeDrive\", MathUtil.clamp(leftMotorOutput, -1.0, 1.0) * m_maxOutput);\n        double rightSideInvertMultiplier = isRightSideInverted() ? -1.0 : 1.0;\n        double maxOutput = m_maxOutput * rightSideInvertMultiplier;\n        // SmartDashboard.putNumber(\"Right Motor - ArcadeDrive\", MathUtil.clamp(rightMotorOutput, -1.0, 1.0) * maxOutput);\n    }", "code_summary": "// Run super version but then output math for setting motors.", "code_snippets": [{"sub_id": 0, "code_snippet": "if (squareInputs) {\n    xSpeed = Math.copySign(xSpeed * xSpeed, xSpeed);\n    zRotation = Math.copySign(zRotation * zRotation, zRotation);\n}", "code_summary": "// Square the inputs (while preserving the sign) to increase fine control // while permitting full power.", "place": [13, 16]}, {"sub_id": 1, "code_snippet": "if (zRotation >= 0.0) {\n    leftMotorOutput = maxInput;\n    rightMotorOutput = xSpeed - zRotation;\n} else {\n    leftMotorOutput = xSpeed + zRotation;\n    rightMotorOutput = maxInput;\n}", "code_summary": "// First quadrant, else second quadrant", "place": [25, 31]}, {"sub_id": 2, "code_snippet": "if (zRotation >= 0.0) {\n    leftMotorOutput = xSpeed + zRotation;\n    rightMotorOutput = maxInput;\n} else {\n    leftMotorOutput = maxInput;\n    rightMotorOutput = xSpeed - zRotation;\n}", "code_summary": "// Third quadrant, else fourth quadrant", "place": [34, 40]}], "id": 221}
{"repo": "hokamc/core-ng-project", "path": "ext/monitor/src/main/java/app/monitor/job/KubeClient.java", "star_count": 0, "raw_code": "public void initialize() {\n        httpClient = HTTPClient.builder()\n                .trust(Files.text(Path.of(\"/var/run/secrets/kubernetes.io/serviceaccount/ca.crt\")))\n                .build();\n        // token will not be refreshed after pod created, if the token is changed somehow, it has to recreate pod\n        token = Files.text(Path.of(\"/var/run/secrets/kubernetes.io/serviceaccount/token\"));\n    }", "code_summary": "// only support Pod ServiceAccount auth within cluster", "code_snippets": [{"sub_id": 0, "code_snippet": "token = Files.text(Path.of(\"/var/run/secrets/kubernetes.io/serviceaccount/token\"));", "code_summary": "// token will not be refreshed after pod created, if the token is changed somehow, it has to recreate pod", "place": [6, 6]}], "id": 224}
{"repo": "mjlomeli/FoodieFriend", "path": "profile/src/main/java/com/interview/profile/ProfileViewAdapter.java", "star_count": 0, "raw_code": "@Override\n    public ProfilesViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {\n        Context context = parent.getContext();\n        LayoutInflater inflater = LayoutInflater.from(context);\n\n        // Inflate the custom layout\n        View contactView = inflater.inflate(R.layout.list_profile, parent, false);\n\n        // Return a new holder instance\n        ProfilesViewHolder viewHolder = new ProfilesViewHolder(contactView);\n        return viewHolder;\n    }", "code_summary": "// Usually involves inflating a layout from XML and returning the holder", "code_snippets": [{"sub_id": 0, "code_snippet": "View contactView = inflater.inflate(R.layout.list_profile, parent, false);", "code_summary": "// Inflate the custom layout", "place": [7, 7]}, {"sub_id": 1, "code_snippet": "ProfilesViewHolder viewHolder = new ProfilesViewHolder(contactView);\nreturn viewHolder;", "code_summary": "// Return a new holder instance", "place": [10, 11]}], "id": 229}
{"repo": "mjlomeli/FoodieFriend", "path": "profile/src/main/java/com/interview/profile/ProfileViewAdapter.java", "star_count": 0, "raw_code": "@Override\n    public void onBindViewHolder(ProfilesViewHolder viewHolder, int position) {\n        // Get the data model based on position\n        Profile pro = this.profiles.get(position);\n\n        // Set item_swipe views based on your views and data model\n        viewHolder.textView_Address.setText(pro.getAddress());\n        viewHolder.textView_AddressTitle.setText(pro.getAddressTitle());\n\n        //new DownloadImage((ImageView) viewHolder.imageView_logo).execute(\"https://logo.clearbit.com/\" + logos.getUrl());\n\n        //Button button = viewHolder.messageButton;f\n        //button.setText(contact.isOnline() ? \"Visit\" : \"Closed\");\n        //button.setEnabled(contact.isOnline());\n    }", "code_summary": "// Involves populating data into the item_swipe through holder", "code_snippets": [{"sub_id": 0, "code_snippet": "Profile pro = this.profiles.get(position);", "code_summary": "// Get the data model based on position", "place": [4, 4]}, {"sub_id": 1, "code_snippet": "viewHolder.textView_Address.setText(pro.getAddress());\nviewHolder.textView_AddressTitle.setText(pro.getAddressTitle());", "code_summary": "// Set item_swipe views based on your views and data model", "place": [7, 8]}], "id": 230}
{"repo": "fhl43211/Percolation", "path": "Percolation/Percolation.java", "star_count": 0, "raw_code": "public void open(int row, int col) {\n        if (isOpen(row, col)) {\n            return;\n        }\n        ++m_totalCounts;\n        int loc = calculateLoc(row, col);\n        m_cellStatus[loc] = true;\n        // Union it with the neighbors\n        int[] directions = { -1, 1 };\n        for (int rowDir : directions) {\n            int newRow = row + rowDir;\n            if (validRange(newRow) && isOpen(newRow, col)) {\n                m_percolates.union(calculateLoc(newRow, col), loc);\n                m_full.union(calculateLoc(newRow, col), loc);\n            }\n        }\n        for (int colDir : directions) {\n            int newCol = col + colDir;\n            if (validRange(newCol) && isOpen(row, newCol)) {\n                m_percolates.union(calculateLoc(row, newCol), loc);\n                m_full.union(calculateLoc(row, newCol), loc);\n            }\n        }\n        // If it is the top row, connect it to the virtual top node\n        if (row == 1) {\n            m_percolates.union(m_topLoc, loc);\n            m_full.union(m_topLoc, loc);\n        }\n        // If it is the bottom row and it is full, connect it to the virtual bottom node\n        if (row == m_n) {\n            m_percolates.union(m_bottomLoc, loc);\n            // m_full will not union bottom loc with loc to avoid a single path from the bottom loc\n        }\n    }", "code_summary": "// opens the site (row, col) if it is not open already", "code_snippets": [{"sub_id": 0, "code_snippet": "int[] directions = { -1, 1 };\nfor (int rowDir : directions) {\n    int newRow = row + rowDir;\n    if (validRange(newRow) && isOpen(newRow, col)) {\n        m_percolates.union(calculateLoc(newRow, col), loc);\n        m_full.union(calculateLoc(newRow, col), loc);\n    }\n}\nfor (int colDir : directions) {\n    int newCol = col + colDir;\n    if (validRange(newCol) && isOpen(row, newCol)) {\n        m_percolates.union(calculateLoc(row, newCol), loc);\n        m_full.union(calculateLoc(row, newCol), loc);\n    }\n}", "code_summary": "// Union it with the neighbors", "place": [9, 23]}, {"sub_id": 1, "code_snippet": "if (row == 1) {\n    m_percolates.union(m_topLoc, loc);\n    m_full.union(m_topLoc, loc);\n}", "code_summary": "// If it is the top row, connect it to the virtual top node", "place": [25, 28]}, {"sub_id": 2, "code_snippet": "if (row == m_n) {\n    m_percolates.union(m_bottomLoc, loc);\n    // m_full will not union bottom loc with loc to avoid a single path from the bottom loc\n}", "code_summary": "// If it is the bottom row and it is full, connect it to the virtual bottom node", "place": [30, 33]}], "id": 242}
{"repo": "rnlaigner/dianalyzer", "path": "worker/src/main/java/br/pucrio/inf/les/ese/dianalyzer/worker/multithreading/RepositoryBuffer.java", "star_count": 3, "raw_code": "public void set( String value ) throws InterruptedException\n   {\n      buffer.put( value ); // place value in buffer\n      System.out.printf( \"%s%s\\t%s%d\\n\", \"Producer writes \", value,\n         \"Buffer cells occupied: \", buffer.size() );\n   }", "code_summary": "// place value into buffer", "code_snippets": [{"sub_id": 0, "code_snippet": "buffer.put( value );", "code_summary": "// place value in buffer", "place": [3, 3]}], "id": 246}
{"repo": "rnlaigner/dianalyzer", "path": "worker/src/main/java/br/pucrio/inf/les/ese/dianalyzer/worker/multithreading/RepositoryBuffer.java", "star_count": 3, "raw_code": "public String get() throws InterruptedException\n   {\n      String readValue = buffer.take(); // remove value from buffer\n      System.out.printf( \"%s %s\\t%s%d\\n\", \"Consumer reads \", \n         readValue, \"Buffer cells occupied: \", buffer.size() );\n\n      return readValue;\n   }", "code_summary": "// return value from buffer// end method set", "code_snippets": [{"sub_id": 0, "code_snippet": "String readValue = buffer.take();", "code_summary": "// remove value from buffer", "place": [3, 3]}], "id": 247}
{"repo": "HomamAl/CarParkSystem", "path": "CarPark/src/CarPark_state.java", "star_count": 0, "raw_code": "public synchronized void acquireLock() throws InterruptedException{\n\t\t\tThread clientID = Thread.currentThread(); // Get the thread clientID\n\t\t\tSystem.out.println();\n\t\t    System.out.println(clientID.getName()+\" is attempting to acquire a lock.\");\t\n\t\t    ++threadsWaiting;\n\t\t\t  \n\t\t    while (accessing) {  // While someone else is accessing or threadsWaiting > 0\n\t\t    System.out.println(clientID.getName()+\" waiting to get a lock as someone else is accessing...\");\n\t\t\t// Wait for the lock to be released - see releaseLock() below\n\t\t\t  wait();\n\t\t\t}\n\t\t      \n\t\t\t// Nobody has got a lock so get one\n\t\t\t--threadsWaiting;\n\t\t\taccessing = true;\n\t\t\tSystem.out.println(clientID.getName()+\" got a lock.\"); \n\t\t}", "code_summary": "// Acquire a lock", "code_snippets": [{"sub_id": 0, "code_snippet": "Thread clientID = Thread.currentThread();", "code_summary": "// Get the thread clientID", "place": [2, 2]}, {"sub_id": 1, "code_snippet": "wait();", "code_summary": "// Wait for the lock to be released - see releaseLock() below", "place": [10, 10]}, {"sub_id": 2, "code_snippet": "--threadsWaiting;\naccessing = true;\nSystem.out.println(clientID.getName()+\" got a lock.\");", "code_summary": "// Nobody has got a lock so get one", "place": [14, 16]}], "id": 253}
{"repo": "HomamAl/CarParkSystem", "path": "CarPark/src/CarPark_state.java", "star_count": 0, "raw_code": "public synchronized void releaseLock(){\n\t\t\t// Release the lock and tell everyone\n\t\t    accessing = false;\n\t\t    notifyAll();\n\t\t    Thread clientID = Thread.currentThread(); // Get the thread clientID\n\t\t    System.out.println(clientID.getName()+\" released a lock.\");\n\t\t}", "code_summary": "// Release the lock", "code_snippets": [{"sub_id": 0, "code_snippet": "accessing = false;\nnotifyAll();", "code_summary": "// Release the lock and tell everyone", "place": [3, 4]}], "id": 254}
{"repo": "HomamAl/CarParkSystem", "path": "CarPark/src/CarPark_state.java", "star_count": 0, "raw_code": "public synchronized String processInput(String input){\n\t\tString output = null;\n\t\tString parking_clientID = Thread.currentThread().getName();\n\t\t\n\t\tif(input.equalsIgnoreCase(\"E\")){\n\t\t\t\n\t\t\t// The switch statement will help me to add more cases if I want to add more entrances and exits for testing\n\t\t\tswitch(parking_clientID){\n\t\t\t\n\t\t\t// Entrance_1\n\t\t\tcase \"Entrance_1\":\n\t\t\t\toutput = floorSpace.reserveSpace();\n\t\t\t\tbreak;\n\t\t\t\t\n\t\t\t// Entrance_2\t\n\t\t\tcase \"Entrance_2\":\n\t\t\t\toutput = floorSpace.reserveSpace();\n\t\t\t\tbreak;\n\t\t\t\n\t\t\t// Exit_1\t\n\t\t\tcase \"Exit_1\":\n\t\t\t\toutput = floorSpace.leaveSpace(parking_clientID);\n\t\t\t\tbreak;\n\t\t\t\n\t\t\t// Exit_2\n\t\t\tcase \"Exit_2\":\n\t\t\t\toutput = floorSpace.leaveSpace(parking_clientID);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t\t// Report the changes to the spaces\n\t\t\tfloorSpace.spaceReport();\n\t\t}\n\t\t\t\n\t\treturn output;\n\t}", "code_summary": "// Process the input sent to the server", "code_snippets": [{"sub_id": 0, "code_snippet": "switch(parking_clientID){\n\t\t\t\n\t\t\t// Entrance_1\n\t\t\tcase \"Entrance_1\":\n\t\t\t\toutput = floorSpace.reserveSpace();\n\t\t\t\tbreak;\n\t\t\t\t\n\t\t\t// Entrance_2\t\n\t\t\tcase \"Entrance_2\":\n\t\t\t\toutput = floorSpace.reserveSpace();\n\t\t\t\tbreak;\n\t\t\t\n\t\t\t// Exit_1\t\n\t\t\tcase \"Exit_1\":\n\t\t\t\toutput = floorSpace.leaveSpace(parking_clientID);\n\t\t\t\tbreak;\n\t\t\t\n\t\t\t// Exit_2\n\t\t\tcase \"Exit_2\":\n\t\t\t\toutput = floorSpace.leaveSpace(parking_clientID);\n\t\t\t\tbreak;\n\t\t\t}", "code_summary": "// The switch statement will help me to add more cases if I want to add more entrances and exits for testing", "place": [8, 29]}, {"sub_id": 1, "code_snippet": "floorSpace.spaceReport();", "code_summary": "// Report the changes to the spaces", "place": [32, 32]}], "id": 255}
{"repo": "jagriti295/Automatic-Code-Complexity-Prediction", "path": "CodeDataset/398.java", "star_count": 2, "raw_code": "void\npush(\nint\nnew_data) \n\n{ \n\n// allocate node and assign data \n\nListNode new_node = \nnew\nListNode(new_data); \n\n\n// link the old list off the new node \n\nnew_node.next = head; \n\n\n// move the head to point to the new node \n\nhead = new_node; \n\n}", "code_summary": "// the Linked List // Function to insert a node at the beginning of ", "code_snippets": [{"sub_id": 0, "code_snippet": "ListNode new_node = \nnew\nListNode(new_data);", "code_summary": "// allocate node and assign data ", "place": [10, 12]}, {"sub_id": 1, "code_snippet": "new_node.next = head;", "code_summary": "// link the old list off the new node ", "place": [17, 17]}, {"sub_id": 2, "code_snippet": "head = new_node;", "code_summary": "// move the head to point to the new node ", "place": [22, 22]}], "id": 264}
{"repo": "jagriti295/Automatic-Code-Complexity-Prediction", "path": "CodeDataset/398.java", "star_count": 2, "raw_code": "BinaryTreeNode convertList2Binary(BinaryTreeNode node) \n\n{ \n\n// queue to store the parent nodes \n\nQueue<BinaryTreeNode> q = \n\nnew\nLinkedList<BinaryTreeNode>(); \n\n\n// Base Case \n\nif\n(head == \nnull\n) \n\n{ \n\nnode = \nnull\n; \n\nreturn\nnull\n; \n\n} \n\n\n// 1.) The first node is always the root node, and \n\n// add it to the queue \n\nnode = \nnew\nBinaryTreeNode(head.data); \n\nq.add(node); \n\n\n// advance the pointer to the next node \n\nhead = head.next; \n\n\n// until the end of linked list is reached, do the \n\n// following steps \n\nwhile\n(head != \nnull\n) \n\n{ \n\n// 2.a) take the parent node from the q and \n\n// remove it from q \n\nBinaryTreeNode parent = q.peek(); \n\nBinaryTreeNode pp = q.poll(); \n\n\n// 2.c) take next two nodes from the linked list. \n\n// We will add them as children of the current \n\n// parent node in step 2.b. Push them into the \n\n// queue so that they will be parents to the \n\n// future nodes \n\nBinaryTreeNode leftChild = \nnull\n, rightChild = \nnull\n; \n\nleftChild = \nnew\nBinaryTreeNode(head.data); \n\nq.add(leftChild); \n\nhead = head.next; \n\nif\n(head != \nnull\n) \n\n{ \n\nrightChild = \nnew\nBinaryTreeNode(head.data); \n\nq.add(rightChild); \n\nhead = head.next; \n\n} \n\n\n// 2.b) assign the left and right children of \n\n// parent \n\nparent.left = leftChild; \n\nparent.right = rightChild; \n\n} \n\n\nreturn\nnode; \n\n}", "code_summary": "// representation of binary tree. // complete binary tree into the linked // converts a given linked list representing a ", "code_snippets": [{"sub_id": 0, "code_snippet": "Queue<BinaryTreeNode> q = \n\nnew\nLinkedList<BinaryTreeNode>();", "code_summary": "// queue to store the parent nodes ", "place": [7, 10]}, {"sub_id": 1, "code_snippet": "q.add(node);", "code_summary": "// add it to the queue ", "place": [41, 41]}, {"sub_id": 2, "code_snippet": "head = head.next;", "code_summary": "// advance the pointer to the next node ", "place": [46, 46]}, {"sub_id": 3, "code_snippet": "BinaryTreeNode parent = q.peek(); \n\nBinaryTreeNode pp = q.poll();", "code_summary": "// 2.a) take the parent node from the q and ", "place": [64, 66]}, {"sub_id": 4, "code_snippet": "BinaryTreeNode pp = q.poll();", "code_summary": "// remove it from q ", "place": [66, 66]}, {"sub_id": 5, "code_snippet": "BinaryTreeNode leftChild = \nnull\n, rightChild = \nnull\n; \n\nleftChild = \nnew\nBinaryTreeNode(head.data); \n\nq.add(leftChild); \n\nhead = head.next; \n\nif\n(head != \nnull\n) \n\n{ \n\nrightChild = \nnew\nBinaryTreeNode(head.data); \n\nq.add(rightChild); \n\nhead = head.next; \n\n} \n\n\n// 2.b) assign the left and right children of \n\n// parent \n\nparent.left = leftChild; \n\nparent.right = rightChild;", "code_summary": "// We will add them as children of the current ", "place": [79, 117]}, {"sub_id": 6, "code_snippet": "BinaryTreeNode leftChild = \nnull\n, rightChild = \nnull\n; \n\nleftChild = \nnew\nBinaryTreeNode(head.data); \n\nq.add(leftChild); \n\nhead = head.next; \n\nif\n(head != \nnull\n) \n\n{ \n\nrightChild = \nnew\nBinaryTreeNode(head.data); \n\nq.add(rightChild); \n\nhead = head.next; \n\n}", "code_summary": "// parent node in step 2.b. Push them into the  // future nodes ", "place": [79, 108]}], "id": 265}
{"repo": "jagriti295/Automatic-Code-Complexity-Prediction", "path": "CodeDataset/398.java", "star_count": 2, "raw_code": "public\nstatic\nvoid\nmain(String[] args) \n\n{ \n\nBinaryTree tree = \nnew\nBinaryTree(); \n\ntree.push(\n36\n); \n/* Last node of Linked List */\n\ntree.push(\n30\n); \n\ntree.push(\n25\n); \n\ntree.push(\n15\n); \n\ntree.push(\n12\n); \n\ntree.push(\n10\n); \n/* First node of Linked List */\n\nBinaryTreeNode node = tree.convertList2Binary(tree.root); \n\n\nSystem.out.println(\n\"Inorder Traversal of the\"\n+ \n\n\" constructed Binary Tree is:\"\n); \n\ntree.inorderTraversal(node); \n\n}", "code_summary": "// Driver program to test above functions ", "code_snippets": [{"sub_id": 0, "code_snippet": "tree.push(\n36\n);", "code_summary": "/* Last node of Linked List */", "place": [12, 14]}, {"sub_id": 1, "code_snippet": "tree.push(\n10\n);", "code_summary": "/* First node of Linked List */", "place": [33, 35]}], "id": 266}
{"repo": "TobiLang/re2j", "path": "javatests/com/google/re2j/RE2CompileTest.java", "star_count": 0, "raw_code": "@Parameters()\n  public static String[][] testData() {\n    return new String[][] {\n      {\"\", null},\n      {\".\", null},\n      {\"^.$\", null},\n      {\"a\", null},\n      {\"a*\", null},\n      {\"a+\", null},\n      {\"a?\", null},\n      {\"a|b\", null},\n      {\"a*|b*\", null},\n      {\"(a*|b)(c*|d)\", null},\n      {\"[a-z]\", null},\n      {\"[a-abc-c\\\\-\\\\]\\\\[]\", null},\n      {\"[a-z]+\", null},\n      {\"[abc]\", null},\n      {\"[^1234]\", null},\n      {\"[^\\n]\", null},\n      {\"\\\\!\\\\\\\\\", null},\n      {\"abc]\", null}, // Matches the closing bracket literally.\n      {\"a??\", null},\n      {\"*\", \"missing argument to repetition operator: `*`\"},\n      {\"+\", \"missing argument to repetition operator: `+`\"},\n      {\"?\", \"missing argument to repetition operator: `?`\"},\n      {\"(abc\", \"missing closing ): `(abc`\"},\n      {\"abc)\", \"regexp/syntax: internal error: `stack underflow`\"},\n      {\"x[a-z\", \"missing closing ]: `[a-z`\"},\n      {\"[z-a]\", \"invalid character class range: `z-a`\"},\n      {\"abc\\\\\", \"trailing backslash at end of expression\"},\n      {\"a**\", \"invalid nested repetition operator: `**`\"},\n      {\"a*+\", \"invalid nested repetition operator: `*+`\"},\n      {\"\\\\x\", \"invalid escape sequence: `\\\\x`\"},\n      {\"\\\\p\", \"invalid character class range: `\\\\p`\"},\n      {\"\\\\p{\", \"invalid character class range: `\\\\p{`\"}\n    };\n  }", "code_summary": "// succeed.// A list of regexp and expected error when calling RE2.compile. null implies that compile should", "code_snippets": [{"sub_id": 0, "code_snippet": "{\"abc]\", null}", "code_summary": "// Matches the closing bracket literally.", "place": [21, 21]}], "id": 273}
{"repo": "denkers/jdamvc-framework", "path": "src/engine/jdamvc/engine/core/authentication/StoredCredentials.java", "star_count": 0, "raw_code": "public synchronized void saveCredentials()\n    {\n        if(Config.ALLOW_CRED_SAVE)\n        {\n            //Credentials are saved in JSON\n            Gson gson           =   new GsonBuilder().setPrettyPrinting().create();\n            String storedCreds  =   gson.toJson(this);\n            \n            //Write saved credentials\n            try(BufferedWriter bw   =   new BufferedWriter(new FileWriter(Config.CRED_SAVE_FILE)))\n            {\n                bw.write(storedCreds);\n            }\n            \n            catch(IOException e)\n            {\n                ExceptionOutput.output(\"Failed to load resource, \" + e.getMessage(), ExceptionOutput.OutputType.DEBUG);\n            }\n        }\n    }", "code_summary": "//Saves the stored credentials", "code_snippets": [{"sub_id": 0, "code_snippet": "Gson gson           =   new GsonBuilder().setPrettyPrinting().create();\nString storedCreds  =   gson.toJson(this);", "code_summary": "//Credentials are saved in JSON", "place": [6, 7]}], "id": 279}
{"repo": "denkers/jdamvc-framework", "path": "src/engine/jdamvc/engine/core/authentication/StoredCredentials.java", "star_count": 0, "raw_code": "public synchronized static StoredCredentials getSavedCredentials()\n   {\n        if(Config.ALLOW_CRED_SAVE)\n        {\n            //Read saved credentials\n            //Parse file in JSON\n            try(BufferedReader br   =   new BufferedReader(new FileReader(Config.CRED_SAVE_FILE)))\n            {\n                Gson gson   =   new Gson();\n                return gson.fromJson(br, StoredCredentials.class);\n            }\n            \n            catch(IOException e)\n            {\n                ExceptionOutput.output(\"Failed to oepn resourse, \" + e.getMessage(), ExceptionOutput.OutputType.DEBUG);\n                return null;\n            }\n        }\n        \n        else return null;\n    }", "code_summary": "//Loads and returns the stored credentials", "code_snippets": [{"sub_id": 0, "code_snippet": "Gson gson   =   new Gson();\nreturn gson.fromJson(br, StoredCredentials.class);", "code_summary": "//Parse file in JSON", "place": [9, 10]}], "id": 280}
{"repo": "jcoehoorn/basic-computer-games", "path": "13_Bounce/java/Bounce.java", "star_count": 7880, "raw_code": "private void startGame() { \n\n    double coefficient = 0;\n    double height = 0;          \n    double timeIncrement = 0;\n    double timeIndex = 0;\n    double timeTotal = 0;\n    double velocity = 0;    \n \n    double[] timeData = new double[21];\n    \n    int heightInt = 0;\n    int index = 0;\n    int maxData = 0;\n    \n    String lineContent = \"\";\n    \n    System.out.println(\"THIS SIMULATION LETS YOU SPECIFY THE INITIAL VELOCITY\");\n    System.out.println(\"OF A BALL THROWN STRAIGHT UP, AND THE COEFFICIENT OF\");\n    System.out.println(\"ELASTICITY OF THE BALL.  PLEASE USE A DECIMAL FRACTION\");\n    System.out.println(\"COEFFICIENCY (LESS THAN 1).\");\n    System.out.println(\"\");\n    System.out.println(\"YOU ALSO SPECIFY THE TIME INCREMENT TO BE USED IN\");\n    System.out.println(\"'STROBING' THE BALL'S FLIGHT (TRY .1 INITIALLY).\");\n    System.out.println(\"\");\n    \n    // Begin outer while loop\n    while (true) {\n      \n      System.out.print(\"TIME INCREMENT (SEC)? \");\n      timeIncrement = Double.parseDouble(scan.nextLine());\n      System.out.println(\"\");\n      \n      System.out.print(\"VELOCITY (FPS)? \");\n      velocity = Double.parseDouble(scan.nextLine());    \n      System.out.println(\"\");\n      \n      System.out.print(\"COEFFICIENT? \");\n      coefficient = Double.parseDouble(scan.nextLine());    \n      System.out.println(\"\");\n\n      System.out.println(\"FEET\");\n      System.out.println(\"\");\n      \n      maxData = (int)(70 / (velocity / (16 * timeIncrement)));\n      \n      for (index = 1; index <= maxData; index++) {                \n        timeData[index] = velocity * Math.pow(coefficient, index - 1) / 16;\n      }\n   \n      // Begin loop through all rows of y-axis data\n      for (heightInt = (int)(-16 * Math.pow(velocity / 32, 2) + Math.pow(velocity, 2) / 32 + 0.5) * 10; \n           heightInt >= 0; heightInt -= 5) {\n\n        height = heightInt / 10.0;\n\n        lineContent = \"\";\n        \n        if ((int)(Math.floor(height)) == height) {\n\n          lineContent += \" \" + (int)(height) + \" \";\n        } \n        \n        timeTotal = 0;  \n        \n        for (index = 1; index <= maxData; index++) {                  \n          \n          for (timeIndex = 0; timeIndex <= timeData[index]; timeIndex += timeIncrement) {\n            \n            timeTotal += timeIncrement;\n\n            if (Math.abs(height - (0.5 * (-32) * Math.pow(timeIndex, 2) + velocity \n                * Math.pow(coefficient, index - 1) * timeIndex)) <= 0.25) {\n             \n              while (lineContent.length() < (timeTotal / timeIncrement) - 1) {            \n                lineContent += \" \";            \n              } \n              lineContent += \"0\";                          \n            }                       \n          }\n          \n          timeIndex = timeData[index + 1] / 2;\n          \n          if (-16 * Math.pow(timeIndex, 2) + velocity * Math.pow(coefficient, index - 1) * timeIndex < height) {\n            \n            break;                        \n          }                                   \n        } \n        \n        System.out.println(lineContent);\n        \n      }  // End loop through all rows of y-axis data\n\n      lineContent = \"\";\n      \n      // Show the x-axis\n      for (index = 1; index <= (int)(timeTotal + 1) / timeIncrement + 1; index++) {\n        \n        lineContent += \".\";        \n      }\n      \n      System.out.println(lineContent);\n      \n      lineContent = \" 0\";\n      \n      for (index = 1; index <= (int)(timeTotal + 0.9995); index++) {\n        \n        while (lineContent.length() < (int)(index / timeIncrement)) {            \n          lineContent += \" \";            \n        }     \n        lineContent += index;        \n      }\n      \n      System.out.println(lineContent);\n\n      System.out.println(\" \".repeat((int)((timeTotal + 1) / (2 * timeIncrement) - 3)) + \"SECONDS\");      \n      \n    }  // End outer while loop \n\n  }", "code_summary": "// End of method showIntro", "code_snippets": [{"sub_id": 0, "code_snippet": "for (heightInt = (int)(-16 * Math.pow(velocity / 32, 2) + Math.pow(velocity, 2) / 32 + 0.5) * 10; \n           heightInt >= 0; heightInt -= 5) {\n\n        height = heightInt / 10.0;\n\n        lineContent = \"\";\n        \n        if ((int)(Math.floor(height)) == height) {\n\n          lineContent += \" \" + (int)(height) + \" \";\n        } \n        \n        timeTotal = 0;  \n        \n        for (index = 1; index <= maxData; index++) {                  \n          \n          for (timeIndex = 0; timeIndex <= timeData[index]; timeIndex += timeIncrement) {\n            \n            timeTotal += timeIncrement;\n\n            if (Math.abs(height - (0.5 * (-32) * Math.pow(timeIndex, 2) + velocity \n                * Math.pow(coefficient, index - 1) * timeIndex)) <= 0.25) {\n             \n              while (lineContent.length() < (timeTotal / timeIncrement) - 1) {            \n                lineContent += \" \";            \n              } \n              lineContent += \"0\";                          \n            }                       \n          }\n          \n          timeIndex = timeData[index + 1] / 2;\n          \n          if (-16 * Math.pow(timeIndex, 2) + velocity * Math.pow(coefficient, index - 1) * timeIndex < height) {\n            \n            break;                        \n          }                                   \n        } \n        \n        System.out.println(lineContent);\n        \n      }", "code_summary": "// Begin loop through all rows of y-axis data", "place": [52, 92]}, {"sub_id": 1, "code_snippet": "lineContent = \"\";\n      \n// Show the x-axis\nfor (index = 1; index <= (int)(timeTotal + 1) / timeIncrement + 1; index++) {\n  \n  lineContent += \".\";        \n}\n\nSystem.out.println(lineContent);\n\nlineContent = \" 0\";\n  \nfor (index = 1; index <= (int)(timeTotal + 0.9995); index++) {\n  \n  while (lineContent.length() < (int)(index / timeIncrement)) {            \n    lineContent += \" \";            \n  }     \n  lineContent += index;        \n}\n\nSystem.out.println(lineContent);\n\nSystem.out.println(\" \".repeat((int)((timeTotal + 1) / (2 * timeIncrement) - 3)) + \"SECONDS\");", "code_summary": "// End loop through all rows of y-axis data", "place": [94, 116]}, {"sub_id": 2, "code_snippet": "}  // End outer while loop", "code_summary": "// End outer while loop ", "place": [118, 118]}], "id": 295}
{"repo": "fernando-romulo-silva/myStudies", "path": "java/core/Java8InAction/src/main/java/br/com/fernando/ch12_New_date_andTime_API/part01_LocalDate_LocalTime_Instant_Duration_and_Period/Test.java", "star_count": 1, "raw_code": "public static void test01() {\n\n\t// An instance of this class is an immutable object representing just a plain\n\t// date without the time of day. In particular, it doesn\u2019t carry any information about the time zone.\n\n\tfinal LocalDate date1 = LocalDate.of(2014, 3, 18); // 2014-03-18\n\n\tfinal int year1 = date1.getYear(); // 2014\n\tSystem.out.println(year1);\n\n\tfinal Month month1 = date1.getMonth(); // March\n\tSystem.out.println(month1);\n\n\tfinal int day = date1.getDayOfMonth(); // 18\n\tSystem.out.println(day);\n\n\tfinal DayOfWeek dow = date1.getDayOfWeek(); // Tuesday\n\tSystem.out.println(dow);\n\n\tfinal int len1 = date1.lengthOfMonth(); // 31 (days of in March)\n\tSystem.out.println(len1);\n\n\tfinal boolean leap = date1.isLeapYear(); // false (not a leap year)\n\tSystem.out.println(leap);\n\n\t// It's also possible to obtains the current date from the system clock using the now factory method:\n\tfinal LocalDate today1 = LocalDate.now();\n\tSystem.out.println(today1);\n\n\t// The ChronoField enumeration implements this interface, so you can conveniently use an element of that\n\t// enumeration with the get method, as shown in the next listing\n\tfinal int year2 = date1.get(ChronoField.YEAR);\n\tfinal int month2 = date1.get(ChronoField.MONTH_OF_YEAR);\n\tfinal int day2 = date1.get(ChronoField.DAY_OF_MONTH);\n\n\tSystem.out.println(year2);\n\tSystem.out.println(month2);\n\tSystem.out.println(day2);\n\n\t// The first one accepts an hour and a minute and the second one also accepts a second. Just like the\n\t// LocalDate class, the LocalTime class provides some getter methods to access its values, as shown in the following listing.\n\n\tfinal LocalTime time1 = LocalTime.of(13, 45, 20);\n\n\tfinal int hour1 = time1.getHour(); // 13\n\tfinal int minute1 = time1.getMinute(); // 45\n\tfinal int second1 = time1.getSecond(); // 20\n\n\tSystem.out.println(hour1);\n\tSystem.out.println(minute1);\n\tSystem.out.println(second1);\n\n\t// Both LocalDate and LocalTime can be created by parsing a String representing them.\n\t// You can achieve this using their parse static methods:\n\tfinal LocalDate date3 = LocalDate.parse(\"2014-03-18\");\n\tfinal LocalTime time3 = LocalTime.parse(\"13:45:20\");\n\n\tSystem.out.println(date3);\n\tSystem.out.println(time3);\n    }", "code_summary": "// Working with LocalDate and LocalTime", "code_snippets": [{"sub_id": 0, "code_snippet": "final LocalTime time1 = LocalTime.of(13, 45, 20);\n\nfinal int hour1 = time1.getHour(); // 13\nfinal int minute1 = time1.getMinute(); // 45\nfinal int second1 = time1.getSecond(); // 20\n\nSystem.out.println(hour1);\nSystem.out.println(minute1);\nSystem.out.println(second1);", "code_summary": "// The first one accepts an hour and a minute and the second one also accepts a second. Just like the // LocalDate class, the LocalTime class provides some getter methods to access its values, as shown in the following listing.", "place": [43, 51]}, {"sub_id": 1, "code_snippet": "final LocalDate date3 = LocalDate.parse(\"2014-03-18\");\nfinal LocalTime time3 = LocalTime.parse(\"13:45:20\");", "code_summary": "// Both LocalDate and LocalTime can be created by parsing a String representing them. // You can achieve this using their parse static methods:", "place": [55, 56]}], "id": 300}
{"repo": "fernando-romulo-silva/myStudies", "path": "java/core/Java8InAction/src/main/java/br/com/fernando/ch12_New_date_andTime_API/part01_LocalDate_LocalTime_Instant_Duration_and_Period/Test.java", "star_count": 1, "raw_code": "public static void test02() {\n\n\tfinal LocalDate date1 = LocalDate.of(2014, 3, 18); // 2014-03-18\n\tfinal LocalTime time1 = LocalTime.of(13, 45, 20);\n\n\tfinal LocalDateTime dt1 = LocalDateTime.of(2014, Month.MARCH, 18, 13, 45, 20);\n\tSystem.out.println(dt1);\n\n\tfinal LocalDateTime dt2 = LocalDateTime.of(date1, time1);\n\tSystem.out.println(dt2);\n\n\tfinal LocalDateTime dt3 = date1.atTime(13, 45, 20);\n\tSystem.out.println(dt3);\n\n\tfinal LocalDateTime dt4 = date1.atTime(time1);\n\tSystem.out.println(dt4);\n\n\tfinal LocalDateTime dt5 = time1.atDate(date1);\n\tSystem.out.println(dt5);\n\n\t// Note that it\u2019s possible to create a LocalDateTime by passing a time to a LocalDate, or conversely\n\t// a date to a LocalTime, using respectively their atTime or atDate methods. You can also extract\n\t// the LocalDate or LocalTime component from a LocalDateTime using the toLocalDate and\n\t// toLocalTime methods:\n\n\tfinal LocalDate date2 = dt1.toLocalDate(); // 2014-03-18\n\tSystem.out.println(date2);\n\n\tfinal LocalTime time2 = dt1.toLocalTime(); // 13:45:20\n\tSystem.out.println(time2);\n    }", "code_summary": "// Combining a date and a time", "code_snippets": [{"sub_id": 0, "code_snippet": "final LocalDateTime dt5 = time1.atDate(date1);\nSystem.out.println(dt5);", "code_summary": "// a date to a LocalTime, using respectively their atTime or atDate methods. You can also extract", "place": [18, 19]}, {"sub_id": 1, "code_snippet": "final LocalDate date2 = dt1.toLocalDate(); // 2014-03-18\nSystem.out.println(date2);\n\nfinal LocalTime time2 = dt1.toLocalTime(); // 13:45:20\nSystem.out.println(time2);", "code_summary": "// the LocalDate or LocalTime component from a LocalDateTime using the toLocalDate and // toLocalTime methods:", "place": [26, 30]}], "id": 301}
{"repo": "fernando-romulo-silva/myStudies", "path": "java/core/Java8InAction/src/main/java/br/com/fernando/ch12_New_date_andTime_API/part01_LocalDate_LocalTime_Instant_Duration_and_Period/Test.java", "star_count": 1, "raw_code": "public static void test03() {\n\n\t// From a machine point of view, the most natural format to model time is with a single large number representing a point\n\t// on a continuous timeline.\n\n\tInstant.ofEpochSecond(3);\n\tInstant.ofEpochSecond(3, 0);\n\n\t// There\u2019s a supplementary overloaded version of the ofEpochSecond static factory method that accepts a\n\t// second argument that\u2019s a nanosecond adjustment to the passed number of seconds. This overloaded version\n\t// adjusts the nanosecond argument, ensuring that the stored nanosecond fraction is between 0 and 999,999,999.\n\t// This means all the following invocations of the ofEpochSecond factory method will return exactly the same Instant:\n\n\tInstant.ofEpochSecond(2, 1_000_000_000); // One billion nanoseconds (1 second) after 2 seconds\n\tInstant.ofEpochSecond(4, -1_000_000_000); // One billion nanosecods (1 second) before 4 seconds\n    }", "code_summary": "// Instant: a date and time for machines", "code_snippets": [{"sub_id": 0, "code_snippet": "Instant.ofEpochSecond(3);\nInstant.ofEpochSecond(3, 0);", "code_summary": "// From a machine point of view, the most natural format to model time is with a single large number representing a point // on a continuous timeline.", "place": [6, 7]}, {"sub_id": 1, "code_snippet": "Instant.ofEpochSecond(2, 1_000_000_000);", "code_summary": "// One billion nanoseconds (1 second) after 2 seconds", "place": [14, 14]}], "id": 302}
{"repo": "fernando-romulo-silva/myStudies", "path": "java/core/Java8InAction/src/main/java/br/com/fernando/ch12_New_date_andTime_API/part01_LocalDate_LocalTime_Instant_Duration_and_Period/Test.java", "star_count": 1, "raw_code": "public static void test04() {\n\n\t// The next natural step is to create a duration between two temporal objects. The between static factory\n\t// method of the Duration class serves exactly this purpose. You can create a duration between two LocalTimes,\n\t// two LocalDateTimes, or two Instants as follows:\n\n\tfinal LocalTime time1 = LocalTime.of(13, 45, 20);\n\tfinal LocalTime time2 = LocalTime.of(14, 15, 10);\n\n\tfinal LocalDateTime dt1 = LocalDateTime.of(2014, Month.MARCH, 18, 13, 45, 20);\n\tfinal LocalDateTime dt2 = LocalDateTime.of(2018, Month.MARCH, 15, 19, 00, 00);\n\n\tfinal Instant instant1 = Instant.now();\n\n\ttry {\n\t    Thread.sleep(1000);\n\t} catch (final InterruptedException e) {\n\n\t}\n\n\tfinal Instant instant2 = Instant.now();\n\n\tfinal Duration d1 = Duration.between(time1, time2);\n\tSystem.out.println(d1);\n\n\tfinal Duration d2 = Duration.between(dt1, dt2);\n\tSystem.out.println(d2);\n\n\tfinal Duration d3 = Duration.between(instant1, instant2);\n\tSystem.out.println(d3);\n\n\t// When you need to model an amount of time in terms of years, months, and days, you can use\n\t// the Period class. You can find out the difference between two LocalDates with the between\n\t// factory method of that class:\n\n\tfinal Period tenDays1 = Period.between(LocalDate.of(2014, 3, 8), //\n\t                                       LocalDate.of(2014, 3, 18));\n\n\tSystem.out.println(tenDays1);\n\n\t// The Duration and Period classes have other convenient factory methods to create\n\t// instances of them directly, in other words, without defining them as the difference between two\n\t// temporal objects, as shown in the next listing\n\tfinal Duration threeMinutes1 = Duration.ofMinutes(3);\n\tSystem.out.println(threeMinutes1);\n\n\tfinal Duration threeMinutes2 = Duration.of(3, ChronoUnit.MINUTES);\n\tSystem.out.println(threeMinutes2);\n\n\tfinal Period tenDays2 = Period.ofDays(10);\n\tSystem.out.println(tenDays2);\n\n\tfinal Period threeWeeks1 = Period.ofWeeks(3);\n\tSystem.out.println(threeWeeks1);\n\n\tfinal Period twoYearsSixMonthsOneDay1 = Period.of(2, 6, 1);\n\tSystem.out.println(twoYearsSixMonthsOneDay1);\n    }", "code_summary": "// Defining a Duration or a Period", "code_snippets": [{"sub_id": 0, "code_snippet": "final LocalTime time1 = LocalTime.of(13, 45, 20);\nfinal LocalTime time2 = LocalTime.of(14, 15, 10);\n\nfinal LocalDateTime dt1 = LocalDateTime.of(2014, Month.MARCH, 18, 13, 45, 20);\nfinal LocalDateTime dt2 = LocalDateTime.of(2018, Month.MARCH, 15, 19, 00, 00);\n\nfinal Instant instant1 = Instant.now();\n\ntry {\n    Thread.sleep(1000);\n} catch (final InterruptedException e) {\n\n}\n\nfinal Instant instant2 = Instant.now();\n\nfinal Duration d1 = Duration.between(time1, time2);\nSystem.out.println(d1);\n\nfinal Duration d2 = Duration.between(dt1, dt2);\nSystem.out.println(d2);\n\nfinal Duration d3 = Duration.between(instant1, instant2);\nSystem.out.println(d3);", "code_summary": "// The next natural step is to create a duration between two temporal objects. The between static factory // method of the Duration class serves exactly this purpose. You can create a duration between two LocalTimes, // two LocalDateTimes, or two Instants as follows:", "place": [7, 30]}, {"sub_id": 1, "code_snippet": "\t\nfinal Period tenDays1 = Period.between(LocalDate.of(2014, 3, 8), //\n                                       LocalDate.of(2014, 3, 18));\n\nSystem.out.println(tenDays1);", "code_summary": "// When you need to model an amount of time in terms of years, months, and days, you can use", "place": [35, 39]}, {"sub_id": 2, "code_snippet": "final Period tenDays1 = Period.between(LocalDate.of(2014, 3, 8), //\n\t                                       LocalDate.of(2014, 3, 18));\n\n\tSystem.out.println(tenDays1);", "code_summary": "// the Period class. You can find out the difference between two LocalDates with the between // factory method of that class:", "place": [36, 39]}, {"sub_id": 3, "code_snippet": "final Duration threeMinutes1 = Duration.ofMinutes(3);\nSystem.out.println(threeMinutes1);\n\nfinal Duration threeMinutes2 = Duration.of(3, ChronoUnit.MINUTES);\nSystem.out.println(threeMinutes2);\n\nfinal Period tenDays2 = Period.ofDays(10);\nSystem.out.println(tenDays2);\n\nfinal Period threeWeeks1 = Period.ofWeeks(3);\nSystem.out.println(threeWeeks1);\n\nfinal Period twoYearsSixMonthsOneDay1 = Period.of(2, 6, 1);\nSystem.out.println(twoYearsSixMonthsOneDay1);", "code_summary": "// The Duration and Period classes have other convenient factory methods to create // instances of them directly, in other words, without defining them as the difference between two // temporal objects, as shown in the next listing", "place": [44, 57]}], "id": 303}
{"repo": "sanskritiagarwal/Java", "path": "src/irabank/controller/RequestController.java", "star_count": 0, "raw_code": "@RequestMapping(value=\"/ExternalUsers/Issues\", method = RequestMethod.POST)\n\t\t\n\t\t\n\t\tpublic ModelAndView createNewRequest(@ModelAttribute(\"issueFormBean\") @Valid IssueFormBean issueFormBean,  BindingResult result, ModelMap model, SessionStatus status, HttpSession sessionID) {\n\t\t\tArrayList<String> errorCode = new ArrayList<String>();\n\t\t\tif (result.hasErrors()){\n\t\t\t\tSystem.out.println(\"comes in form errors of issues\");\n\t\t\t\t//model.addAttribute(\"issueStatus\", \"Please fill the necessary fields and try again\");\n\t\t\t\tmodel.addAttribute(\"issueFormBean\",issueFormBean);\n\t\t\t\treturn new ModelAndView( \"/ExternalUsers/Issues\",model);\n\t\t\t}\n\t\t\tBoolean serverValidationError = false;\n\t\t\tif(issueFormBean.getDescription()==\"\"|| !issueFormBean.getDescription().matches(\"^[a-zA-Z0-9 ,.]+$\"))\n\t\t\t{\n\t\t\t\terrorCode.add(\"Please check the description. It is not in expected format.\");\n\t\t\t\tmodel.addAttribute(\"issueStatus\",errorCode);\n\t\t\t\tserverValidationError = true;\n\t\t\t}\n\t\t\t// use the Form Elements values from Issue form\n\t\t\t//Calling add new issue method of issueFormBean\n\t\t\t\n\t\t\t//getting the userID from session\n\t\t\tInteger userId = (Integer) sessionID.getAttribute(\"userId\");\n\t\t\tUserDTO userDTO = new UserDTO();\n\t\t\tuserDTO.setUserId(userId);\n\t\t\tif(serverValidationError){\n\t\t\t\t\n\t\t\t\treturn new ModelAndView(\"/ExternalUsers/Issues\", model); // return back to register\n\t\t\t}\n\t\t\tif(!serverValidationError)\n\t\t\t{\n\t\t\tBoolean issueCreationStatus = requestService.addNewIssue(issueFormBean, userDTO);\n\t\t\tSystem.out.println(\"issueCreationStatus is :\" + issueCreationStatus);\n\t\t\t\tif(issueCreationStatus){\n\t\t\t\t model.addAttribute(\"issueCreationStatus\", \"Issue submitted successfully\");\n//\t\t\t\t\tmodel.addAttribute(\"userName\", userRegistrationFormBean.getUserName());\n//\t\t\t\t\tSystem.out.println(\"63 : comes till here\");\n//\t\t\t\t\t//return new ModelAndView(new RedirectView(\"Welcome\"));\n\t\t\t\treturn new ModelAndView(\"/ExternalUsers/Issues\", model); // Login page\n\t\t\t\t}\n\t\t\t    else{\n\t\t\t\tmodel.addAttribute(\"issueCreationStatus\", \"There seems to be some connection issues. Please try again\");\n\t\t\t\treturn new ModelAndView(\"/ExternalUsers/Issues\", model); // return back to issues page\t\t\t\t\n\t\t\t\t}\n\n\t \n\t\t}\n\t\t\treturn new ModelAndView(\"/ExternalUsers/Issues\", model);\n\t}", "code_summary": "// POST Method of Register - comes back after the submit of User Details Form.", "code_snippets": [{"sub_id": 0, "code_snippet": "Integer userId = (Integer) sessionID.getAttribute(\"userId\");\nUserDTO userDTO = new UserDTO();\nuserDTO.setUserId(userId);", "code_summary": "// use the Form Elements values from Issue form //getting the userID from session", "place": [23, 25]}, {"sub_id": 1, "code_snippet": "Boolean issueCreationStatus = requestService.addNewIssue(issueFormBean, userDTO);\nSystem.out.println(\"issueCreationStatus is :\" + issueCreationStatus);", "code_summary": "//Calling add new issue method of issueFormBean", "place": [32, 33]}, {"sub_id": 2, "code_snippet": "return new ModelAndView(\"/ExternalUsers/Issues\", model);", "code_summary": "// return back to register // Login page", "place": [28, 28]}, {"sub_id": 3, "code_snippet": "model.addAttribute(\"issueCreationStatus\", \"There seems to be some connection issues. Please try again\");\nreturn new ModelAndView(\"/ExternalUsers/Issues\", model); // return back to issues page\t", "code_summary": "// return back to issues page\t\t\t\t", "place": [42, 43]}], "id": 308}
{"repo": "chaymodules/java_tasks", "path": "Task 2/Task 2 part a/BankAccount/src/BankAccountTest.java", "star_count": 0, "raw_code": "public static void main(String[] args) {\r\n\t\t/*creating object customerOne from BankAccount.java blueprint\r\n\t\tand initalising it with a set balance from constructor*/ \r\n\t\tBankAccount customerOne = new BankAccount(2700.00);\r\n\t\t//using the payin method from BankAccount.java on object customerOne to take away\r\n\t\t//120.00\r\n\t\tcustomerOne.payin(-120.00);\r\n\t\t//setting default name of Customer 1, uses setter from BankAccount object\r\n\t\tcustomerOne.setName(\"Customer 1\");\r\n\t\t/* creating new object for customer 2 with set balance in BankAccount constructor*/\r\n\t\tBankAccount customerTwo = new BankAccount(2700.00);\r\n\t\t//using payin method from BankAccount.class to take away 120.00 from current balance\r\n\t\tcustomerTwo.payin(-120.00);\r\n\t\t//setting default name of Customer 2 using setName method from BankAccount\r\n\t\tcustomerTwo.setName(\"Customer 2\");\r\n\t\t// using the getName method to get name of customer 1 and then asking for user input\r\n\t\tSystem.out.print(customerOne.getName() + \", What is your name? \");\r\n\t\t// getting user input using the Scanner class\r\n\t\tScanner input = new Scanner(System.in);\r\n\t\t// setting name of customer 1 as the next memory location in input variable\r\n\t\tcustomerOne.setName(input.nextLine());\r\n\t\t//prints customers name and gets their balance\r\n\t\tSystem.out.print(customerOne.getName() + \" has the balance of \");\r\n\t\t//using the getBalance method in BankAccount.class to return balance of customer 1\r\n\t\tSystem.out.println(customerOne.getBalance());\r\n\t\t// Getting name of customer 2\r\n\t\tSystem.out.print(customerTwo.getName() + \", What is your name? \");\r\n\t\t// gets users input for name. the next memory location in input variable\r\n\t\t// sets name of customer 2 using setName method. Setting name of next memory location\r\n\t\tcustomerTwo.setName(input.nextLine());\r\n\t\t// closes scanner\r\n\t\tinput.close();\r\n\t\t//prints customers name and gets their balance \r\n\t\tSystem.out.print(customerTwo.getName() + \" has the balance of \");\r\n\t\tSystem.out.println(customerTwo.getBalance());\r\n\r\n\t}", "code_summary": "//main method used for execution of java program\r", "code_snippets": [{"sub_id": 0, "code_snippet": "customerOne.setName(\"Customer 1\");", "code_summary": "//setting default name of Customer 1, uses setter from BankAccount object\r", "place": [9, 9]}, {"sub_id": 1, "code_snippet": "BankAccount customerTwo = new BankAccount(2700.00);", "code_summary": "/* creating new object for customer 2 with set balance in BankAccount constructor*/", "place": [11, 11]}, {"sub_id": 2, "code_snippet": "customerTwo.setName(\"Customer 2\");", "code_summary": "//setting default name of Customer 2 using setName method from BankAccount\r", "place": [15, 15]}, {"sub_id": 3, "code_snippet": "customerOne.setName(input.nextLine());", "code_summary": "// setting name of customer 1 as the next memory location in input variable\r", "place": [21, 21]}, {"sub_id": 4, "code_snippet": "System.out.println(customerOne.getBalance());", "code_summary": "//using the getBalance method in BankAccount.class to return balance of customer 1\r", "place": [25, 25]}, {"sub_id": 5, "code_snippet": "System.out.print(customerTwo.getName() + \", What is your name? \");", "code_summary": "// Getting name of customer 2\r", "place": [27, 27]}, {"sub_id": 6, "code_snippet": "System.out.print(customerTwo.getName() + \" has the balance of \");\r\nSystem.out.println(customerTwo.getBalance());", "code_summary": "//prints customers name and gets their balance \r", "place": [34, 35]}], "id": 311}
{"repo": "art-r/Java-Intelligent-SnakeProject", "path": "src/main/java/logik/Window.java", "star_count": 4, "raw_code": "public void drawSnake(Graphics g) {\n        //check if the disco color flag for the snake has been set\n        if (discoColorSnake){\n            //create random colors for every part of the body\n            for(int bodypart = 0; bodypart < snakeBodyPartX.size(); bodypart++) {\n                if (bodypart == 0) {\n                    snakeColor = Color.green;\n                } else {\n                    snakeColor = discoColors.get((int) (Math.random() * 4));\n                }\n                g.setColor(snakeColor);\n                g.fillRect(snakeBodyPartX.get(bodypart), snakeBodyPartY.get(bodypart), BOXLENGTH, BOXLENGTH);\n            }\n        } else{\n            //if the flag has not been set we want to color the snake just in the normal green values\n            //iterate over the snakes parts\n            for (int bodyPart = 0; bodyPart < snakeBodyPartX.size(); bodyPart++) {\n                //the color of the head\n                if (bodyPart == 0) {\n                    g.setColor(Color.green);\n                } else {\n                    //the color of the body (a different green color)\n                    g.setColor(new Color(45, 160, 0));\n                }\n                //draw the parts with the appropriate color\n                g.fillRect(snakeBodyPartX.get(bodyPart), snakeBodyPartY.get(bodyPart), BOXLENGTH, BOXLENGTH);\n            }\n        }\n    }", "code_summary": "//function to draw the snake", "code_snippets": [{"sub_id": 0, "code_snippet": "if (discoColorSnake){\n    //create random colors for every part of the body\n    for(int bodypart = 0; bodypart < snakeBodyPartX.size(); bodypart++) {\n        if (bodypart == 0) {\n            snakeColor = Color.green;\n        } else {\n            snakeColor = discoColors.get((int) (Math.random() * 4));\n        }\n        g.setColor(snakeColor);\n        g.fillRect(snakeBodyPartX.get(bodypart), snakeBodyPartY.get(bodypart), BOXLENGTH, BOXLENGTH);\n    }\n} else{\n    //if the flag has not been set we want to color the snake just in the normal green values\n    //iterate over the snakes parts\n    for (int bodyPart = 0; bodyPart < snakeBodyPartX.size(); bodyPart++) {\n        //the color of the head\n        if (bodyPart == 0) {\n            g.setColor(Color.green);\n        } else {\n            //the color of the body (a different green color)\n            g.setColor(new Color(45, 160, 0));\n        }\n        //draw the parts with the appropriate color\n        g.fillRect(snakeBodyPartX.get(bodyPart), snakeBodyPartY.get(bodyPart), BOXLENGTH, BOXLENGTH);\n    }\n}", "code_summary": "//check if the disco color flag for the snake has been set", "place": [3, 28]}, {"sub_id": 1, "code_snippet": "for(int bodypart = 0; bodypart < snakeBodyPartX.size(); bodypart++) {\n    if (bodypart == 0) {\n        snakeColor = Color.green;\n    } else {\n        snakeColor = discoColors.get((int) (Math.random() * 4));\n    }\n    g.setColor(snakeColor);\n    g.fillRect(snakeBodyPartX.get(bodypart), snakeBodyPartY.get(bodypart), BOXLENGTH, BOXLENGTH);\n}", "code_summary": "//create random colors for every part of the body", "place": [5, 13]}, {"sub_id": 2, "code_snippet": "for (int bodyPart = 0; bodyPart < snakeBodyPartX.size(); bodyPart++) {\n    //the color of the head\n    if (bodyPart == 0) {\n        g.setColor(Color.green);\n    } else {\n        //the color of the body (a different green color)\n        g.setColor(new Color(45, 160, 0));\n    }\n    //draw the parts with the appropriate color\n    g.fillRect(snakeBodyPartX.get(bodyPart), snakeBodyPartY.get(bodyPart), BOXLENGTH, BOXLENGTH);\n}", "code_summary": "//if the flag has not been set we want to color the snake just in the normal green values //iterate over the snakes parts", "place": [17, 27]}, {"sub_id": 3, "code_snippet": "if (bodyPart == 0) {\n    g.setColor(Color.green);\n}", "code_summary": "//the color of the head", "place": [19, 21]}, {"sub_id": 4, "code_snippet": "g.setColor(new Color(45, 160, 0));", "code_summary": "//the color of the body (a different green color)", "place": [23, 23]}, {"sub_id": 5, "code_snippet": "g.fillRect(snakeBodyPartX.get(bodyPart), snakeBodyPartY.get(bodyPart), BOXLENGTH, BOXLENGTH);", "code_summary": "//draw the parts with the appropriate color", "place": [26, 26]}], "id": 315}
{"repo": "art-r/Java-Intelligent-SnakeProject", "path": "src/main/java/logik/Window.java", "star_count": 4, "raw_code": "public void drawGameOver(Graphics g, int applesEaten) {\n        //draw the reached score\n        g.setColor(Color.red);\n        g.setFont(new Font(\"Ink Free\", Font.BOLD, 40));\n        FontMetrics metrics1 = getFontMetrics(g.getFont());\n        g.drawString(\"Reached Score: \" + applesEaten, (WINDOW_WIDTH - metrics1.stringWidth(\"Reached Score: \" + applesEaten)) / 2, g.getFont().getSize());\n\n        //draw the game over text\n        g.setColor(Color.red);\n        g.setFont(new Font(\"Ink Free\", Font.BOLD, 75));\n        FontMetrics metrics2 = getFontMetrics(g.getFont());\n        g.drawString(\"Game Over\", (WINDOW_WIDTH - metrics2.stringWidth(\"Game Over\")) / 2, WINDOW_HEIGHT / 2);\n    }", "code_summary": "//draw the game over screen", "code_snippets": [{"sub_id": 0, "code_snippet": "g.setColor(Color.red);\ng.setFont(new Font(\"Ink Free\", Font.BOLD, 40));\nFontMetrics metrics1 = getFontMetrics(g.getFont());\ng.drawString(\"Reached Score: \" + applesEaten, (WINDOW_WIDTH - metrics1.stringWidth(\"Reached Score: \" + applesEaten)) / 2, g.getFont().getSize());", "code_summary": "//draw the reached score", "place": [3, 6]}, {"sub_id": 1, "code_snippet": "g.setColor(Color.red);\ng.setFont(new Font(\"Ink Free\", Font.BOLD, 75));\nFontMetrics metrics2 = getFontMetrics(g.getFont());\ng.drawString(\"Game Over\", (WINDOW_WIDTH - metrics2.stringWidth(\"Game Over\")) / 2, WINDOW_HEIGHT / 2);", "code_summary": "//draw the game over text", "place": [9, 12]}], "id": 316}
{"repo": "art-r/Java-Intelligent-SnakeProject", "path": "src/main/java/logik/Window.java", "star_count": 4, "raw_code": "public void drawGameWon(Graphics g, int applesEaten) {\n        //draw the reached score\n        g.setColor(Color.GREEN);\n        g.setFont(new Font(\"Ink Free\", Font.BOLD, 40));\n        FontMetrics metrics1 = getFontMetrics(g.getFont());\n        g.drawString(\"Reached Score: \" + applesEaten, (WINDOW_WIDTH - metrics1.stringWidth(\"Reached Score: \" + applesEaten)) / 2, g.getFont().getSize());\n\n        //draw the game over text\n        g.setColor(Color.red);\n        g.setFont(new Font(\"Ink Free\", Font.BOLD, 75));\n        FontMetrics metrics2 = getFontMetrics(g.getFont());\n        g.drawString(\"CHEATER! (YOU WON)\", (WINDOW_WIDTH - metrics2.stringWidth(\"CHEATER! (YOU WON)\")) / 2, WINDOW_HEIGHT / 2);\n    }", "code_summary": "//draw the game succeeded screen", "code_snippets": [{"sub_id": 0, "code_snippet": "g.setColor(Color.GREEN);\ng.setFont(new Font(\"Ink Free\", Font.BOLD, 40));\nFontMetrics metrics1 = getFontMetrics(g.getFont());\ng.drawString(\"Reached Score: \" + applesEaten, (WINDOW_WIDTH - metrics1.stringWidth(\"Reached Score: \" + applesEaten)) / 2, g.getFont().getSize());", "code_summary": "//draw the reached score", "place": [3, 6]}, {"sub_id": 1, "code_snippet": "g.setColor(Color.red);\ng.setFont(new Font(\"Ink Free\", Font.BOLD, 75));\nFontMetrics metrics2 = getFontMetrics(g.getFont());\ng.drawString(\"CHEATER! (YOU WON)\", (WINDOW_WIDTH - metrics2.stringWidth(\"CHEATER! (YOU WON)\")) / 2, WINDOW_HEIGHT / 2);", "code_summary": "//draw the game over text", "place": [9, 12]}], "id": 317}
{"repo": "ParundeepSingh/Java", "path": "Programs/bankSystem.java", "star_count": 0, "raw_code": "public void withdrawMoney() {\n\t\tdouble witAmt = 0;\n\t\tdo {\n\t\t\tSystem.out.println(\"Enter amount that you want to withdraw: \");\n\t\t\twitAmt = sc.nextDouble();\n\t\t\t// check if withdrawal amount is less than balance, only proceed if true - \n\t\t\tif (witAmt > balance) {\n\t\t\t\tSystem.out.println(\"Account balance is less! Cannot withdraw...transaction failed!\");\n\t\t\t}\n\t\t} while (witAmt > balance);\n\t\tbalance = balance - witAmt;\n\t\tSystem.out.println(\"Your current balance is: \" + balance);\n\t}", "code_summary": "// function to withdraw money from an existing account - ", "code_snippets": [{"sub_id": 0, "code_snippet": "if (witAmt > balance) {\n\tSystem.out.println(\"Account balance is less! Cannot withdraw...transaction failed!\");\n}", "code_summary": "// check if withdrawal amount is less than balance, only proceed if true - ", "place": [7, 9]}], "id": 331}
{"repo": "iCounterBOX/PathFinder04", "path": "app/src/main/java/com/mcuhq/ple_v3/SetupActivity.java", "star_count": 0, "raw_code": "private void confirmInput () {\n        if (!validateESP_MAC_Addr()){\n            Toast.makeText(getApplicationContext(), \"Please correct your input data!\" , Toast.LENGTH_SHORT).show();\n            return;\n        }\n\n        /*\n        String input = \"ESPname:\"  + mEspName.getEditText().getText().toString();\n        input += \"\\n\";\n        input += \"ESPmac:\"  + mEspMacAddr.getEditText().getText().toString();\n        input += \"\\n\";\n        input += \"ep32TriggerTimer:\"  + mEp32TriggerTimer.getEditText().getText().toString();\n        input += \"\\n\";\n        input += \"Wifi_BarChart_Timer:\"  +  mWifi_BarChart_Timer.getEditText().getText().toString();\n        input += \"\\n\";\n        input += \"BT_BarChart_Timer:\"  +  mBT_BarChart_Timer.getEditText().getText().toString();\n        input += \"\\n\";\n        input += \"WBT_DoubleChart_Timer:\"  +  mWBT_DoubleChart_Timer.getEditText().getText().toString();\n        input += \"\\n\";\n        input += \"SelectTimeFilter:\"  +  mSelectTimeFilter.getEditText().getText().toString();\n\n        Toast.makeText(getApplicationContext(), input , Toast.LENGTH_SHORT).show();\n*/\n        // store this into DB/table\n        deleteSetupTable ();\n\n        // Achtung: in der app und in der db verarbeiten wir esp32IsAvailable als int.. aber die CheckBox gibt true/false zur\u00fcck\n        // deshalb ? 1:0\n        updateInsertSetupData (\n                mEspName.getEditText().getText().toString(),\n                mEspMacAddr.getEditText().getText().toString(),\n                mCB_esp32IsAvailable.isChecked() ? 1 : 0,\n                Integer.parseInt(mEp32TriggerTimer.getEditText().getText().toString()),\n                Integer.parseInt(mWifi_BarChart_Timer.getEditText().getText().toString()),\n                Integer.parseInt(mBT_BarChart_Timer.getEditText().getText().toString()),\n                Integer.parseInt(mWBT_DoubleChart_Timer.getEditText().getText().toString()),\n                Integer.parseInt(mSelectTimeFilter.getEditText().getText().toString()) );\n\n        // AFTER RESTART the Activity - mit dem aufRuf der MainActivity werden dann auch die NEUEN Parameter gleich frisch eingelesen!!\n        Toast.makeText(getApplicationContext(), \"Setup()/Changes Done + pLE restarted! \" , Toast.LENGTH_SHORT).show();\n        Intent intent = new Intent(this, MainActivity.class);\n        startActivity(intent);\n    }", "code_summary": "// CONFIRM STORE Function", "code_snippets": [{"sub_id": 0, "code_snippet": "deleteSetupTable ();", "code_summary": "// store this into DB/table", "place": [25, 25]}], "id": 335}
{"repo": "aalok-thakkar/egs-artifact", "path": "scythe/src/forward_enumeration/primitive/FilterEnumerator.java", "star_count": 2, "raw_code": "public static List<Filter> enumCanonicalFilterNamedTable(NamedTable tn, EnumContext ec) {\n        // the selection args are complete\n        List<ValNode> vals = tn.getSchema().stream()\n                .map(s -> new NamedVal(s))\n                .collect(Collectors.toList());\n\n        Map<String, ValType> typeMap = new HashMap<>();\n        for (int i = 0; i < tn.getSchema().size(); i ++) {\n            typeMap.put(tn.getSchema().get(i), tn.getSchemaType().get(i));\n        }\n\n        // enum filters\n        EnumContext ec2 = EnumContext.extendValueBinding(ec, typeMap);\n\n        // For enumeration of named table, allow exists is always set to true.\n        boolean allowExists = true;\n        return FilterEnumerator.enumFiltersLR(vals, ec2.getValNodes(), ec2, allowExists);\n    }", "code_summary": "// Generated filters are used for filtering the renamed table rt", "code_snippets": [{"sub_id": 0, "code_snippet": "boolean allowExists = true;\nreturn FilterEnumerator.enumFiltersLR(vals, ec2.getValNodes(), ec2, allowExists);", "code_summary": "// For enumeration of named table, allow exists is always set to true.", "place": [16, 17]}], "id": 337}
{"repo": "aalok-thakkar/egs-artifact", "path": "scythe/src/forward_enumeration/primitive/FilterEnumerator.java", "star_count": 2, "raw_code": "public static List<Filter> enumCanonicalFilterAggrNode(RenameTableNode rt, EnumContext ec) {\n\n        if (! (rt.getTableNode() instanceof AggregationNode))\n            System.out.println(\"[ERROR@EnumCanonicalFilters 44] \" + rt.getTableNode().getClass());\n\n        AggregationNode an =(AggregationNode) rt.getTableNode();\n\n        int indexBoundary = an.getAggrFieldSize();\n\n        // extend the type information to contain values inside enumcontext\n        Map<String, ValType> typeMap = new HashMap<>();\n        if (rt.getSchema().size() != rt.getSchemaType().size())\n            System.out.println(\"[ERROR@EnumCanonicalFilters 61] \" + rt.getSchema().size() + \" ~ \" + rt.getSchemaType().size());\n        for (int i = 0; i < rt.getSchema().size(); i ++) {\n            typeMap.put(rt.getSchema().get(i), rt.getSchemaType().get(i));\n        }\n        ec = EnumContext.extendValueBinding(ec, typeMap);\n\n        // Left value can only be an aggregation target\n        List<ValNode> L = new ArrayList<>();\n        for (int i = indexBoundary; i < rt.getSchema().size(); i ++) {\n            L.add(new NamedVal(rt.getSchema().get(i)));\n        }\n\n        // do not allow exists in aggregation result\n        boolean allowExists = false;\n        return FilterEnumerator.enumFiltersLR(L, ec.getValNodes(), ec, allowExists);\n    }", "code_summary": "// Generated filters are used for filtering the renamed table rt", "code_snippets": [{"sub_id": 0, "code_snippet": "List<ValNode> L = new ArrayList<>();\nfor (int i = indexBoundary; i < rt.getSchema().size(); i ++) {\n    L.add(new NamedVal(rt.getSchema().get(i)));\n}", "code_summary": "// Left value can only be an aggregation target", "place": [20, 23]}, {"sub_id": 1, "code_snippet": "boolean allowExists = false;\nreturn FilterEnumerator.enumFiltersLR(L, ec.getValNodes(), ec, allowExists);", "code_summary": "// do not allow exists in aggregation result", "place": [26, 27]}], "id": 339}
{"repo": "rajatenzyme/Coding-Journey-", "path": "Algo_Ds_Notes-master/Algo_Ds_Notes-master/Circular_Queue/Circular_Queue.java", "star_count": 0, "raw_code": "public void enQueue(int value) {\n        if ((front == 0 && rear == size - 1) ||\n                (rear == (front - 1) % (size - 1))) {\n            System.out.println(\"\\nOVERFLOW! Queue is Full.\");\n            return;\n        } else if (front == -1) /* Insert First Element */ {\n            front = rear = 0;\n            arr[rear] = value;\n        } else if (rear == size - 1 && front != 0) {\n            rear = 0;\n            arr[rear] = value;\n        } else {\n            rear++;\n            arr[rear] = value;\n        }\n    }", "code_summary": "// Inserting the value in the queue", "code_snippets": [{"sub_id": 0, "code_snippet": "front = rear = 0;\narr[rear] = value;", "code_summary": "/* Insert First Element */", "place": [7, 8]}], "id": 353}
{"repo": "prdp89/interview", "path": "src/com/interview/codechef/ccdsap_2/leetcode/arrays/twopointers/medium/SquareOfSortedArray.java", "star_count": 1, "raw_code": "private static int[] sortedSquares( int[] A ) {\n        int n = A.length;\n        int[] result = new int[n];\n\n        int i = 0, j = n - 1;\n\n        //Since array is already sorted in increasing order\n        for (int p = n - 1; p >= 0; p--) {\n\n            //start storing largest element at the last\n            //Adjust pointers accordingly\n            if (Math.abs(A[i]) > Math.abs(A[j])) {\n                result[p] = A[i] * A[i];\n                i++;\n            } else {\n                result[p] = A[j] * A[j];\n                j--;\n            }\n        }\n        return result;\n    }", "code_summary": "//Using Two pointers : O ( N )", "code_snippets": [{"sub_id": 0, "code_snippet": "for (int p = n - 1; p >= 0; p--) {\n\n    //start storing largest element at the last\n    //Adjust pointers accordingly\n    if (Math.abs(A[i]) > Math.abs(A[j])) {\n        result[p] = A[i] * A[i];\n        i++;\n    } else {\n        result[p] = A[j] * A[j];\n        j--;\n    }\n}", "code_summary": "//Since array is already sorted in increasing order", "place": [8, 19]}, {"sub_id": 1, "code_snippet": "if (Math.abs(A[i]) > Math.abs(A[j])) {\n    result[p] = A[i] * A[i];\n    i++;\n} else {\n    result[p] = A[j] * A[j];\n    j--;\n}", "code_summary": "//start storing largest element at the last //Adjust pointers accordingly", "place": [12, 18]}], "id": 360}
{"repo": "TimeCrafters/FTC_2017-2018", "path": "TeamCode/src/main/java/org/timecrafters/engine/UnstableEngine.java", "star_count": 0, "raw_code": "public void loop() {\n        if (!opFininished && !machineFinished) {\n\n            for (int y = 0; y < processes.get(x).size()-1; y++) {\n\n\n                Log.i(TAG,Boolean.toString(processes.get(x).get(y).getIsFinished()));\n                if (processes.get(x).get(y).getIsFinished()) {\n                    opFininished = true;\n                    Log.i(TAG, \"FINISHED OP : \" + \"[\" + Integer.toString(x) + \"]\" + \"[\" + Integer.toString(y) + \"]\");\n                } else {\n                    opFininished = false;\n                    break;\n                }\n\n            }\n            if (opFininished) {\n                x++;\n            }\n\n\n        } else {\n            if (processes.get(x).get(0) != null) {\n                //set next state.\n                threadIndex = 0;\n                for (int i = 0; i < processes.get(x).size(); i++) {\n                    threads.add(i,new Thread(processes.get(x).get(i)));\n                    threads.get(i).start();\n                    threadIndex ++;\n                }\n                opFininished = false;\n                currentProcess = x;\n                Log.i(TAG, \"Started State : \" + Integer.toString(x));\n\n\n            } else if (processes.get(x).get(0) == null && !machineFinished) {\n                Log.i(TAG, \"MACHINE TERMINATED\");\n                machineFinished = true;\n                stop();\n            }\n\n        }\n\n\n    }", "code_summary": "//checks if ops are finished", "code_snippets": [{"sub_id": 0, "code_snippet": "threadIndex = 0;\nfor (int i = 0; i < processes.get(x).size(); i++) {\n    threads.add(i,new Thread(processes.get(x).get(i)));\n    threads.get(i).start();\n    threadIndex ++;\n}\nopFininished = false;\ncurrentProcess = x;\nLog.i(TAG, \"Started State : \" + Integer.toString(x));", "code_summary": "//set next state.", "place": [25, 33]}], "id": 362}
{"repo": "MistressAlison/OrangeJuiceTheSpire", "path": "OrangeJuiceTheSpire/src/main/java/Moonworks/cards/Ambush.java", "star_count": 1, "raw_code": "@Override\n    public void use(AbstractPlayer p, AbstractMonster m) {\n        //Check if we pass our Norma requirement\n        boolean normaCheck = getNormaLevel() >= NORMA_LEVELS[0];\n\n        //Our Pierce will hit for as much block as the main attack will actually remove\n        int blockDelta = Math.min(m.currentBlock, damage);\n\n        //Apply Vulnerable. I should probably use an action for recalculating damage on the vulnerable target...\n        //BUT this works well enough for now as it shows on card hover\n        this.addToBot(new ApplyPowerAction(m, p, new VulnerablePower(m, magicNumber, false)));\n\n        //Deal the damage, it was already boosted for Vulnerable if it will be applied\n        this.addToBot(new DamageAction(m, new DamageInfo(p, damage, damageTypeForTurn), AbstractGameAction.AttackEffect.BLUNT_LIGHT,true));\n\n        //Only do pierce if we pass our norma and actually have any to do\n        if (normaCheck && blockDelta > 0) {\n            DamageInfo pierceDamage = new DamageInfo(p, blockDelta, DamageInfo.DamageType.HP_LOSS);\n            PiercingPatches.PiercingField.piercing.set(pierceDamage, true);\n            this.addToBot(new DamageAction(m, pierceDamage, AbstractGameAction.AttackEffect.NONE, true));\n        }\n    }", "code_summary": "// Actions the card should do.", "code_snippets": [{"sub_id": 0, "code_snippet": "boolean normaCheck = getNormaLevel() >= NORMA_LEVELS[0];", "code_summary": "//Check if we pass our Norma requirement", "place": [4, 4]}, {"sub_id": 1, "code_snippet": "int blockDelta = Math.min(m.currentBlock, damage);", "code_summary": "//Our Pierce will hit for as much block as the main attack will actually remove", "place": [7, 7]}, {"sub_id": 2, "code_snippet": "this.addToBot(new ApplyPowerAction(m, p, new VulnerablePower(m, magicNumber, false)));", "code_summary": "//Apply Vulnerable. I should probably use an action for recalculating damage on the vulnerable target... //BUT this works well enough for now as it shows on card hover", "place": [11, 11]}, {"sub_id": 3, "code_snippet": "this.addToBot(new DamageAction(m, new DamageInfo(p, damage, damageTypeForTurn), AbstractGameAction.AttackEffect.BLUNT_LIGHT,true));", "code_summary": "//Deal the damage, it was already boosted for Vulnerable if it will be applied", "place": [14, 14]}], "id": 369}
{"repo": "chongwen8/Vector_Routing_Simulation", "path": "src/VectorRouting.java", "star_count": 0, "raw_code": "public boolean shareTables() {\n\t\tboolean stable;\n\t\tint detect = 0; // has the system been updated\n\t\t// I will use this to determine if the system is stable.\n\t\tfor (int i = 0; i < Main.MAX_NODES; i++) {\n\t\t\tstable = Main.routers.updateDistanceVectorTable(i);\n\t\t\tif (stable) {\n\t\t\t\tdetect++;\n\t\t\t}\n\t\t\tSystem.out.println(\"Router \" + (i + 1) + \" updated \" + Main.routers.changes);\n\t\t}\n\t\t// if the system is not stable, then detect will get up from zero\n\t\t// it will be used to return to the main function to detect if the system is indeed stable\n\t\tif (detect == 0) {\n\t\t\t// system is stable\n\t\t\treturn true;\n\t\t} else {\n\t\t\t// system is not stable\n\t\t\treturn false;\n\t\t}\n\t}", "code_summary": "// returns true if the system is stable", "code_snippets": [{"sub_id": 0, "code_snippet": "int detect = 0;", "code_summary": "// has the system been updated", "place": [3, 3]}, {"sub_id": 1, "code_snippet": "for (int i = 0; i < Main.MAX_NODES; i++) {\n\tstable = Main.routers.updateDistanceVectorTable(i);\n\tif (stable) {\n\t\tdetect++;\n\t}\n\tSystem.out.println(\"Router \" + (i + 1) + \" updated \" + Main.routers.changes);\n}", "code_summary": "// I will use this to determine if the system is stable.", "place": [5, 11]}, {"sub_id": 2, "code_snippet": "if (detect == 0) {\n\t\t\t// system is stable\n\t\t\treturn true;\n\t\t} else {\n\t\t\t// system is not stable\n\t\t\treturn false;\n\t\t}", "code_summary": "// if the system is not stable, then detect will get up from zero // it will be used to return to the main function to detect if the system is indeed stable", "place": [14, 20]}, {"sub_id": 3, "code_snippet": "return true;", "code_summary": "// system is stable", "place": [16, 16]}, {"sub_id": 4, "code_snippet": "return false;", "code_summary": "// system is not stable", "place": [19, 19]}], "id": 384}
{"repo": "chongwen8/Vector_Routing_Simulation", "path": "src/VectorRouting.java", "star_count": 0, "raw_code": "public int[][] readInput(String fileName) {\n\t\tint i = 0;\n\t\tint[][] nodeInfo; // will store the information of the nodes from the file\n\t\tnodeInfo = new int[Main.MAX_NODES][Main.MAX_NODES];\n\t\ttry {\n\t\t\tFile file = new File(fileName);\n\t\t\tFileReader fileReader = new FileReader(file);\n\t\t\tBufferedReader bufferedReader = new BufferedReader(fileReader);\n\t\t\tString line;\n\t\t\t// Read data from the file line by line and store it in the array\n\t\t\twhile ((line = bufferedReader.readLine()) != null) {\n\t\t\t\t// we know how the file will be formatted\n\t\t\t\tString[] lines = line.split(\" \");\n\t\t\t\tfor (int j = 0; j < Main.MAX_NODES; j++) {\n\t\t\t\t\t// convert string to int\n\t\t\t\t\tnodeInfo[i][j] = Integer.parseInt(lines[j]);\n\t\t\t\t}\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tfileReader.close();\n\t\t} catch (IOException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t\t// return the created array to the main function\n\t\treturn nodeInfo;\n\t}", "code_summary": "// Will return the node information// This simply reads data from the input file", "code_snippets": [{"sub_id": 0, "code_snippet": "while ((line = bufferedReader.readLine()) != null) {\n    // we know how the file will be formatted\n    String[] lines = line.split(\" \");\n    for (int j = 0; j < Main.MAX_NODES; j++) {\n        // convert string to int\n        nodeInfo[i][j] = Integer.parseInt(lines[j]);\n    }\n    i++;\n}", "code_summary": "// Read data from the file line by line and store it in the array", "place": [11, 19]}, {"sub_id": 1, "code_snippet": "String[] lines = line.split(\" \");\nfor (int j = 0; j < Main.MAX_NODES; j++) {\n    // convert string to int\n    nodeInfo[i][j] = Integer.parseInt(lines[j]);\n}", "code_summary": "// we know how the file will be formatted", "place": [13, 17]}, {"sub_id": 2, "code_snippet": "nodeInfo[i][j] = Integer.parseInt(lines[j]);", "code_summary": "// convert string to int", "place": [16, 16]}, {"sub_id": 3, "code_snippet": "return nodeInfo;", "code_summary": "// return the created array to the main function", "place": [25, 25]}], "id": 385}
{"repo": "ArkadiYoskovitz/StraightShotMiniGame", "path": "Java - Course Project - Mini Game Straight Shot/src/view/GameViewScreen.java", "star_count": 0, "raw_code": "private void layoutSubElements() {\n\t\tsetDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n\t\tsetTitle(\"Straight Shot - MiniGame\");\n\t\tsetBounds(100, 100, 450, 300);\n\n\t\tcontentPane = new JPanel();\n\t\tcontentPane.setBorder(new EmptyBorder(5, 5, 5, 5));\n\t\tsetContentPane(contentPane);\n\n\t\tSpringLayout springLayout = new SpringLayout();\n\t\tcontentPane.setLayout(springLayout);\n\n\t\tJLabel lblGameTitle = new JLabel(\"Straight Shot\");\n\t\tlblGameTitle.setHorizontalAlignment(SwingConstants.CENTER);\n\t\tlblGameTitle.setFont(new Font(\"Lucida Grande\", Font.BOLD, 20));\n\t\tspringLayout.putConstraint(SpringLayout.NORTH, lblGameTitle,  10, SpringLayout.NORTH, contentPane);\n\t\tspringLayout.putConstraint(SpringLayout.WEST , lblGameTitle,  10, SpringLayout.WEST , contentPane);\n\t\tspringLayout.putConstraint(SpringLayout.EAST , lblGameTitle, -10, SpringLayout.EAST , contentPane);\n\t\tcontentPane.add(lblGameTitle);\n\n\t\tJLabel lblInstractions = new JLabel(\"Please enter your guess and press the button\");\n\t\tlblInstractions.setHorizontalAlignment(SwingConstants.CENTER);\n\t\tspringLayout.putConstraint(SpringLayout.NORTH, lblInstractions, 6, SpringLayout.SOUTH, lblGameTitle);\n\t\tspringLayout.putConstraint(SpringLayout.WEST , lblInstractions, 0, SpringLayout.WEST , lblGameTitle);\n\t\tspringLayout.putConstraint(SpringLayout.EAST , lblInstractions, 0, SpringLayout.EAST , lblGameTitle);\n\t\tcontentPane.add(lblInstractions);\n\n\t\tsetTxtEnterGuess(new JTextField());;\n\t\tspringLayout.putConstraint(SpringLayout.NORTH, getTxtEnterGuess(),  6, SpringLayout.SOUTH, lblInstractions );\n\t\tspringLayout.putConstraint(SpringLayout.WEST , getTxtEnterGuess(), 10, SpringLayout.WEST , contentPane);\n\t\tgetTxtEnterGuess().setText(\"Enter Guess\");\n\t\tgetTxtEnterGuess().setToolTipText(\"Enter guess\");\n\t\tcontentPane.add(getTxtEnterGuess());\n\n\t\tsetBtnPressMe(new JButton(\"Press Me!\"));;\n\t\tspringLayout.putConstraint(SpringLayout.EAST , getTxtEnterGuess(), -10, SpringLayout.WEST , btnPressMe\t  );\n\t\tspringLayout.putConstraint(SpringLayout.NORTH, getBtnPressMe()\t, \t6, SpringLayout.SOUTH, lblInstractions);\n\t\tspringLayout.putConstraint(SpringLayout.EAST , getBtnPressMe()\t, \t0, SpringLayout.EAST , lblInstractions);\n\t\tcontentPane.add(getBtnPressMe());\n\n\t\tsetScrollPane(new JScrollPane());\n\t\tgetScrollPane().setBorder(new EtchedBorder(EtchedBorder.RAISED, null, null));\n\t\tspringLayout.putConstraint(SpringLayout.NORTH, getScrollPane(),  10, SpringLayout.SOUTH, getTxtEnterGuess()\t);\n\t\tspringLayout.putConstraint(SpringLayout.WEST , getScrollPane(),   0, SpringLayout.WEST , lblInstractions\t);\n\t\tspringLayout.putConstraint(SpringLayout.EAST , getScrollPane(),   0, SpringLayout.EAST , getTxtEnterGuess()\t);\n\t\tspringLayout.putConstraint(SpringLayout.SOUTH, getScrollPane(), -10, SpringLayout.SOUTH, contentPane\t\t);\n\t\tcontentPane.add(getScrollPane());\n\n\t\tsetList(new JList<Score>());\n\t\tgetScrollPane().getViewport().setView(getList());\n\n\t\tsetBtnNewGame(new JButton(\"New Game\"));\n\t\tspringLayout.putConstraint(SpringLayout.NORTH, getBtnNewGame() , 6, SpringLayout.SOUTH, getBtnPressMe());\n\t\tspringLayout.putConstraint(SpringLayout.EAST , getBtnNewGame() , 0, SpringLayout.EAST , getBtnPressMe());\n\t\tspringLayout.putConstraint(SpringLayout.WEST , getBtnNewGame() , 0, SpringLayout.WEST , getBtnPressMe());\n\t\tcontentPane.add(getBtnNewGame());\n\n\t\tsetLblLooserLabel(new JLabel(\"Looser label\"));;\n\t\tgetLblLooserLabel().setHorizontalAlignment(SwingConstants.CENTER);\n\t\tspringLayout.putConstraint(SpringLayout.NORTH, getLblLooserLabel(), 10, SpringLayout.SOUTH, getBtnNewGame()\t);\n\t\tspringLayout.putConstraint(SpringLayout.SOUTH, getLblLooserLabel(),  0, SpringLayout.SOUTH, getScrollPane()\t);\n\t\tspringLayout.putConstraint(SpringLayout.WEST , getLblLooserLabel(), 10, SpringLayout.EAST , getScrollPane()\t);\n\t\tspringLayout.putConstraint(SpringLayout.EAST , getLblLooserLabel(),  0, SpringLayout.EAST , lblGameTitle\t);\n\t\tcontentPane.add(getLblLooserLabel());\n\n\t\tcontentPane.setFocusTraversalPolicy(new FocusTraversalOnArray(new Component[]{getTxtEnterGuess(), getBtnPressMe(), getBtnNewGame()}));\n\n\t\t// Respond to keyStroke events\n\t\tAbstractAction action = new AbstractAction() {\n\t\t\tprivate static final long serialVersionUID = -5131340540460082527L;\n\n\t\t\t@Override\n\t\t\tpublic void actionPerformed(ActionEvent e) {\n\t\t\t\tif(e.getSource() instanceof JButton){\n\t\t\t\t\tJButton button = (JButton) e.getSource();\n\t\t\t\t\tbutton.doClick();        \n\t\t\t\t} else if(e.getSource() instanceof JComponent){\n\t\t\t\t\tgetBtnPressMe().doClick();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\t\n\t\t// Binding response to Enter pressed\n\t\tgetTxtEnterGuess().getInputMap().put(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0), getBtnPressMe().getText());\n\t\tgetTxtEnterGuess().getActionMap().put(getBtnPressMe().getText(), action);\n\t\t\n\t\tgetBtnPressMe().getInputMap().put(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0), getBtnPressMe().getText());\n\t\tgetBtnPressMe().getActionMap().put(getBtnPressMe().getText(), action);\t\t\n\n\t\tgetBtnNewGame().getInputMap().put(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0), getBtnNewGame().getText());\n\t\tgetBtnNewGame().getActionMap().put(getBtnNewGame().getText(), action);\n\t\t\n\t}", "code_summary": "// Initialize the contents of the frame.", "code_snippets": [{"sub_id": 0, "code_snippet": "AbstractAction action = new AbstractAction() {\n    private static final long serialVersionUID = -5131340540460082527L;\n\n    @Override\n    public void actionPerformed(ActionEvent e) {\n        if(e.getSource() instanceof JButton){\n            JButton button = (JButton) e.getSource();\n            button.doClick();        \n        } else if(e.getSource() instanceof JComponent){\n            getBtnPressMe().doClick();\n        }\n    }\n};", "code_summary": "// Respond to keyStroke events", "place": [69, 81]}, {"sub_id": 1, "code_snippet": "getTxtEnterGuess().getInputMap().put(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0), getBtnPressMe().getText());\ngetTxtEnterGuess().getActionMap().put(getBtnPressMe().getText(), action);\n\t\t\ngetBtnPressMe().getInputMap().put(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0), getBtnPressMe().getText());\ngetBtnPressMe().getActionMap().put(getBtnPressMe().getText(), action);\t\t\n\ngetBtnNewGame().getInputMap().put(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0), getBtnNewGame().getText());\ngetBtnNewGame().getActionMap().put(getBtnNewGame().getText(), action);", "code_summary": "// Binding response to Enter pressed", "place": [84, 91]}], "id": 388}
{"repo": "2643/2021-Code", "path": "src/main/java/frc/robot/commands/conveyor/IntakeIndex.java", "star_count": 0, "raw_code": "@Override\n  public boolean isFinished() {\n    //If the iRSensor after the one last activated is activated, the command ends.\n    if(lastIRActivated >=4){\n      finished = true;\n    }else if(RobotContainer.conveyorBelt.getBallsHeldArray()[lastIRActivated + 1] == true){\n      finished = true; \n    }\n    return finished; \n  }", "code_summary": "// Returns true when the command should end.", "code_snippets": [{"sub_id": 0, "code_snippet": "if(lastIRActivated >=4){\n      finished = true;\n    }else if(RobotContainer.conveyorBelt.getBallsHeldArray()[lastIRActivated + 1] == true){\n      finished = true; \n    }", "code_summary": "//If the iRSensor after the one last activated is activated, the command ends.", "place": [4, 8]}], "id": 390}
{"repo": "mdhillmancmcl/TheWorldAvatar-CMCL-Fork", "path": "thermo/CoMoMath/src/main/java/uk/ac/cam/ceb/como/math/trendline/TrendLine.java", "star_count": 21, "raw_code": "@Override\n    public void setValues(double[] y, double[] x) {\n        if (x.length != y.length) {\n            throw new IllegalArgumentException(String.format(\"The numbers of y and x values must be equal (%d != %d)\",y.length,x.length));\n        }\n        double[][] xData = new double[x.length][]; \n        for (int i = 0; i < x.length; i++) {\n            // the implementation determines how to produce a vector of predictors from a single x\n            xData[i] = xVector(x[i]);\n        }\n        if(logY()) { // in some models we are predicting ln y, so we replace each y with ln y\n            y = Arrays.copyOf(y, y.length); // user might not be finished with the array we were given\n            for (int i = 0; i < x.length; i++) {\n                y[i] = Math.log(y[i]);\n            }\n        }\n        OLSMultipleLinearRegression ols = new OLSMultipleLinearRegression();\n        ols.setNoIntercept(true); // let the implementation include a constant in xVector if desired\n        ols.newSampleData(y, xData); // provide the data to the model\n        coef = (RealMatrix) MatrixUtils.createColumnRealMatrix(ols.estimateRegressionParameters()); // get our coefs\n    }", "code_summary": "// set true to predict log of y (note: y must be positive)", "code_snippets": [{"sub_id": 0, "code_snippet": "y = Arrays.copyOf(y, y.length);", "code_summary": "// user might not be finished with the array we were given", "place": [12, 12]}, {"sub_id": 1, "code_snippet": "ols.setNoIntercept(true);", "code_summary": "// let the implementation include a constant in xVector if desired", "place": [18, 18]}, {"sub_id": 2, "code_snippet": "ols.newSampleData(y, xData);", "code_summary": "// provide the data to the model", "place": [19, 19]}], "id": 395}
{"repo": "emil-wcislo/sbql4j8", "path": "sbql4j8/src/test/openjdk/com/sun/javadoc/AuthorDD/AuthorDD.java", "star_count": 0, "raw_code": "public static String readFileToString(String filename) {\n        try {\n            File file = new File(filename);\n            if ( !file.exists() ) {\n                System.out.println(\"\\nFILE DOES NOT EXIST: \" + filename);\n            }\n            BufferedReader in = new BufferedReader(new FileReader(file));\n\n            // Create an array of characters the size of the file\n            char[] allChars = new char[(int)file.length()];\n\n            // Read the characters into the allChars array\n            in.read(allChars, 0, (int)file.length());\n            in.close();\n\n            // Convert to a string\n            String allCharsString = new String(allChars);\n\n            return allCharsString;\n\n        } catch (FileNotFoundException e) {\n            System.err.println(e);\n            return \"\";\n        } catch (IOException e) {\n            System.err.println(e);\n            return \"\";\n        }\n    }", "code_summary": "// Read the file into a String", "code_snippets": [{"sub_id": 0, "code_snippet": "char[] allChars = new char[(int)file.length()];", "code_summary": "// Create an array of characters the size of the file", "place": [10, 10]}, {"sub_id": 1, "code_snippet": "in.read(allChars, 0, (int)file.length());\nin.close();", "code_summary": "// Read the characters into the allChars array", "place": [13, 14]}, {"sub_id": 2, "code_snippet": "String allCharsString = new String(allChars);", "code_summary": "// Convert to a string", "place": [17, 17]}], "id": 404}
{"repo": "MilesJaques/SwerveDrive-For-Real-", "path": "src/main/java/frc/robot/commands/DriveDistanceCommand.java", "star_count": 0, "raw_code": "@Override\n  public void execute() {\n    // Calculate average sensor position\n    double sensorAccumulator = 0;\n    for(FalconFXSwerveModule swerveModule: RobotContainer.swerveDrive.swerveModules){\n      sensorAccumulator += swerveModule.driveMotor.getSelectedSensorPosition();\n    }\n    sensorAccumulator /= RobotContainer.swerveDrive.swerveModules.length;\n\n    // Drive forward using PID\n    RobotContainer.swerveDrive.drive(0, distancePIDController.run(sensorAccumulator, targetDistance), 0);\n  }", "code_summary": "// Called every time the scheduler runs while the command is scheduled.", "code_snippets": [{"sub_id": 0, "code_snippet": "double sensorAccumulator = 0;\nfor(FalconFXSwerveModule swerveModule: RobotContainer.swerveDrive.swerveModules){\n  sensorAccumulator += swerveModule.driveMotor.getSelectedSensorPosition();\n}\nsensorAccumulator /= RobotContainer.swerveDrive.swerveModules.length;", "code_summary": "// Calculate average sensor position", "place": [4, 8]}, {"sub_id": 1, "code_snippet": "RobotContainer.swerveDrive.drive(0, distancePIDController.run(sensorAccumulator, targetDistance), 0);", "code_summary": "// Drive forward using PID", "place": [11, 11]}], "id": 408}
{"repo": "MilesJaques/SwerveDrive-For-Real-", "path": "src/main/java/frc/robot/commands/DriveDistanceCommand.java", "star_count": 0, "raw_code": "@Override\n  public boolean isFinished() {\n    // Get average sensor position\n    double sensorAccumulator = 0;\n    for(FalconFXSwerveModule swerveModule: RobotContainer.swerveDrive.swerveModules){\n      sensorAccumulator += swerveModule.driveMotor.getSelectedSensorPosition();\n    }\n    sensorAccumulator /= RobotContainer.swerveDrive.swerveModules.length;\n\n    if(sensorAccumulator < targetDistance * (1 + Constants.DDC_TOLERANCE) && sensorAccumulator > targetDistance * (1 - Constants.DDC_TOLERANCE)){\n      counter ++;\n    }\n    else{\n      counter = 0;\n    }\n\n    return (counter > Constants.DDC_MAX_COUNT);\n  }", "code_summary": "// Returns true when the command should end.", "code_snippets": [{"sub_id": 0, "code_snippet": "double sensorAccumulator = 0;\nfor(FalconFXSwerveModule swerveModule: RobotContainer.swerveDrive.swerveModules){\n  sensorAccumulator += swerveModule.driveMotor.getSelectedSensorPosition();\n}\nsensorAccumulator /= RobotContainer.swerveDrive.swerveModules.length;", "code_summary": "// Get average sensor position", "place": [4, 8]}], "id": 409}
{"repo": "horlhardheiley/Critter", "path": "src/main/java/com/example/udacity/critter/chronologer/controller/CustomerController.java", "star_count": 0, "raw_code": "public CustomerDTO convertToDTO(Customer customer) {\n\n        // copy properties of Customer to CustomerDTO:\n        CustomerDTO customerDto = new CustomerDTO();\n        BeanUtils.copyProperties(customer, customerDto);\n\n        // get petIds from Customer, then set to Customer DTO's petIds:\n        List<Long> petIds = customer.getPets().stream().map(Pet::getId).collect(toList());\n        customerDto.setPetIds(petIds);\n\n        // return customer DTO:\n        return customerDto;\n    }", "code_summary": "// utility function to convert Customer to CustomerDTO:", "code_snippets": [{"sub_id": 0, "code_snippet": "CustomerDTO customerDto = new CustomerDTO();\nBeanUtils.copyProperties(customer, customerDto);", "code_summary": "// copy properties of Customer to CustomerDTO:", "place": [4, 5]}, {"sub_id": 1, "code_snippet": "return customerDto;", "code_summary": "// return customer DTO:", "place": [12, 12]}], "id": 411}
{"repo": "Team138Entropy/Entropy2022", "path": "src/main/java/frc/robot/vision/TargetInfo.java", "star_count": 3, "raw_code": "public double getErrorAngle(){\n            // Compensate for camera pitch\n        Translation2d xz_plane_translation =\n            new Translation2d(mX, mZ).rotateBy(Constants.Vision.kCameraHorizontalPlaneToLens);\n        double x = xz_plane_translation.x();\n        double y = mY;\n        double z = xz_plane_translation.y();\n\n        double distance = getDistance();\n        distance = 1;\n        Rotation2d angle = new Rotation2d(x, y, true);\n        Translation2d td = angle.toTranslation();\n        td.translateBy(new Translation2d(0, 10));\n    \n        // System.out.println(\"Camera's Angle to Vision Target: \" + angle.getDegrees());\n        Translation2d t = new Translation2d(distance * angle.cos(), distance * angle.sin());\n        t.StoreDistance = getDistance();\n        angle = td.direction();\n\n        //System.out.println(\"Degrees: \" + angle.getDegrees());\n        //System.out.println(\"Vision Offset Test 1: \" + getOffsetAngle(angle.getDegrees(), mDistance, 5));\n        //System.out.println(\"Vision Offset Test 2: \" + getOffsetAngle(angle.getDegrees(), mDistance, -5));\n        SmartDashboard.putNumber(\"pre-calculated angle\", angle.getDegrees());\n        SmartDashboard.putNumber(\"vision distance\", mDistance);\n        // 5 inches estimated offset\n        return  getOffsetAngle(angle.getDegrees(), mDistance, .416);\n        //return angle.getDegrees();\n    }", "code_summary": "// angle to target", "code_snippets": [{"sub_id": 0, "code_snippet": "Translation2d xz_plane_translation =\n            new Translation2d(mX, mZ).rotateBy(Constants.Vision.kCameraHorizontalPlaneToLens);\n        double x = xz_plane_translation.x();\n        double y = mY;\n        double z = xz_plane_translation.y();", "code_summary": "// Compensate for camera pitch", "place": [3, 7]}, {"sub_id": 1, "code_snippet": "return  getOffsetAngle(angle.getDegrees(), mDistance, .416);", "code_summary": "// 5 inches estimated offset", "place": [26, 26]}], "id": 416}
{"repo": "algmaknick/heart-sound-stethoscope", "path": "heartSoundStethoscope/src/main/java/github/algmaknick/Heart_Sound_Stethoscope_for_android/AxisTickLabels.java", "star_count": 5, "raw_code": "static void draw(Canvas c, ScreenPhysicalMapping axisMap, GridLabel gridLabel,\n                     float axisBeginX, float axisBeginY, int directionI, int labelSide,\n                     Paint labelPaint, Paint gridPaint, Paint rulerBrightPaint) {\n        String axisName = axisNames[gridLabel.getGridType().getValue()];\n\n        float textHeight = labelPaint.getFontMetrics(null);\n        float labelLargeLen = 0.7f * textHeight;\n        float labelSmallLen = 0.6f * labelLargeLen;\n\n        // directionI: 0:+x, 1:+y, 2:-x, 3:-y\n        // labelSide:  1: label at positive side of axis, -1: otherwise\n        boolean drawOnXAxis = directionI % 2 == 0;\n        int directionSign = directionI <=1 ? 1 : -1;\n\n        // Plot axis marks\n        float posAlongAxis;\n        for (int k = 0; k < 2; k ++) {\n            float labelLen   = (k == 0 ? labelSmallLen : labelLargeLen) * labelSide;\n            Paint tickPainter = k == 0 ? gridPaint : rulerBrightPaint;\n            double[] values   = k == 0 ? gridLabel.ticks : gridLabel.values;\n            for (int i = 0; i < values.length; i++) {\n                posAlongAxis = (float)axisMap.pixelFromV(values[i]) * directionSign;\n                if (drawOnXAxis) {\n                    c.drawLine(axisBeginX + posAlongAxis, axisBeginY,\n                               axisBeginX + posAlongAxis, axisBeginY + labelLen, tickPainter);\n                } else {\n                    c.drawLine(axisBeginX,            axisBeginY + posAlongAxis,\n                               axisBeginX + labelLen, axisBeginY + posAlongAxis, tickPainter);\n                }\n            }\n        }\n        // Straight line\n        if (drawOnXAxis) {\n            c.drawLine(axisBeginX, axisBeginY, axisBeginX + (float)axisMap.nCanvasPixel * (1-directionI), axisBeginY, labelPaint);\n        } else {\n            c.drawLine(axisBeginX, axisBeginY, axisBeginX, axisBeginY + (float)axisMap.nCanvasPixel * (2-directionI), labelPaint);\n        }\n\n        // Plot labels\n        float widthDigit = labelPaint.measureText(\"0\");\n        float widthAxisName = widthDigit * axisName.length();\n        float widthAxisNameExt = widthAxisName +.5f*widthDigit;  // with a safe boundary\n\n        // For drawOnXAxis == true\n        float axisNamePosX = directionSign==1\n                ? - widthAxisNameExt + (float)axisMap.nCanvasPixel\n                : - widthAxisNameExt;\n        // For drawOnXAxis == false\n        // always show y-axis name at the smaller (in pixel) position.\n        float axisNamePosY = directionSign==1\n                ? textHeight\n                : textHeight - (float)axisMap.nCanvasPixel;\n        if (gridLabel.getGridType() == GridLabel.Type.DB) {\n            // For dB axis, show axis name far from 0dB (directionSign==1)\n            axisNamePosY = (float)axisMap.nCanvasPixel - 0.8f*widthDigit;\n        }\n\n        float labelPosY = axisBeginY + ( labelSide == 1 ? 0.1f*labelLargeLen + textHeight : -0.3f*labelLargeLen);\n        float labelPosX;\n        int notShowNextLabel = 0;\n\n        for(int i = 0; i < gridLabel.strings.length; i++) {\n            posAlongAxis = (float)axisMap.pixelFromV(gridLabel.values[i]) * directionSign;\n            float thisDigitWidth = drawOnXAxis ? widthDigit*gridLabel.strings[i].length() + 0.3f*widthDigit\n                                               : -textHeight;\n            float axisNamePos = drawOnXAxis ? axisNamePosX\n                                            : axisNamePosY;\n            float axisNameLen = drawOnXAxis ? widthAxisNameExt\n                                            : -textHeight;\n\n            // Avoid label overlap:\n            // (1) No overlap to axis name like \"Hz\";\n            // (2) If no (1), no overlap to important label 1, 10, 100, 1000, 10000, 1k, 10k;\n            // (3) If no (1) and (2), no overlap to previous label.\n            if (isIntvOverlap(posAlongAxis, thisDigitWidth,\n                    axisNamePos, axisNameLen)) {\n                continue;  // case (1)\n            }\n            if (notShowNextLabel > 0) {\n                notShowNextLabel--;\n                continue;  // case (3)\n            }\n            int j = i+1;\n            while (j < gridLabel.strings.length) {\n                float nextDigitPos = (float)axisMap.pixelFromV(gridLabel.values[j]) * directionSign;\n                float nextDigitWidth = drawOnXAxis ? widthDigit*gridLabel.strings[j].length() + 0.3f*widthDigit\n                                                   : -textHeight;\n                if (! isIntvOverlap(posAlongAxis, thisDigitWidth,\n                        nextDigitPos, nextDigitWidth)) {\n                    break;  // no overlap of case (3)\n                }\n                notShowNextLabel++;\n                if (gridLabel.isImportantLabel(j)) {\n                    // do not show label i (case (2))\n                    // but also check case (1) for label j\n                    if (! isIntvOverlap(nextDigitPos, nextDigitWidth,\n                            axisNamePos, axisNameLen)) {\n                        notShowNextLabel = -1;\n                        break;\n                    }\n                }\n                j++;\n            }\n            if (notShowNextLabel == -1) {\n                notShowNextLabel = j - i - 1;  // show the label in case (2)\n                continue;\n            }\n\n            // Now safe to draw label\n            if (drawOnXAxis) {\n                c.drawText(gridLabel.chars[i], 0, gridLabel.strings[i].length(),\n                           axisBeginX + posAlongAxis, labelPosY, labelPaint);\n            } else {\n                labelPosX = labelSide == -1\n                        ? axisBeginX - 0.5f * labelLargeLen - widthDigit * gridLabel.strings[i].length()\n                        : axisBeginX + 0.5f * labelLargeLen;\n                c.drawText(gridLabel.chars[i], 0, gridLabel.strings[i].length(),\n                           labelPosX, axisBeginY + posAlongAxis, labelPaint);\n            }\n        }\n        if (drawOnXAxis) {\n            c.drawText(axisName, axisBeginX + axisNamePosX, labelPosY, labelPaint);\n        } else {\n            labelPosX = labelSide == -1\n                    ? axisBeginX - 0.5f * labelLargeLen - widthAxisName\n                    : axisBeginX + 0.5f * labelLargeLen;\n            c.drawText(axisName, labelPosX, axisBeginY + axisNamePosY, labelPaint);\n        }\n\n    }", "code_summary": "// labelPaint should use fixed width font// Draw ticks and labels for a axisMap.// See GridLabel.Type", "code_snippets": [{"sub_id": 0, "code_snippet": "boolean drawOnXAxis = directionI % 2 == 0;\nint directionSign = directionI <=1 ? 1 : -1;", "code_summary": "// directionI: 0:+x, 1:+y, 2:-x, 3:-y", "place": [12, 13]}, {"sub_id": 1, "code_snippet": "float posAlongAxis;\nfor (int k = 0; k < 2; k ++) {\n    float labelLen   = (k == 0 ? labelSmallLen : labelLargeLen) * labelSide;\n    Paint tickPainter = k == 0 ? gridPaint : rulerBrightPaint;\n    double[] values   = k == 0 ? gridLabel.ticks : gridLabel.values;\n    for (int i = 0; i < values.length; i++) {\n        posAlongAxis = (float)axisMap.pixelFromV(values[i]) * directionSign;\n        if (drawOnXAxis) {\n            c.drawLine(axisBeginX + posAlongAxis, axisBeginY,\n                       axisBeginX + posAlongAxis, axisBeginY + labelLen, tickPainter);\n        } else {\n            c.drawLine(axisBeginX,            axisBeginY + posAlongAxis,\n                       axisBeginX + labelLen, axisBeginY + posAlongAxis, tickPainter);\n        }\n    }\n}", "code_summary": "// Plot axis marks", "place": [16, 31]}, {"sub_id": 2, "code_snippet": "float axisNamePosY = directionSign==1\n        ? textHeight\n        : textHeight - (float)axisMap.nCanvasPixel;", "code_summary": "// always show y-axis name at the smaller (in pixel) position.", "place": [50, 52]}, {"sub_id": 3, "code_snippet": "if (gridLabel.isImportantLabel(j)) {\n    // do not show label i (case (2))\n    // but also check case (1) for label j\n    if (! isIntvOverlap(nextDigitPos, nextDigitWidth,\n                            axisNamePos, axisNameLen)) {\n        notShowNextLabel = -1;\n        break;\n    }\n}", "code_summary": "// (2) If no (1), no overlap to important label 1, 10, 100, 1000, 10000, 1k, 10k;", "place": [93, 101]}, {"sub_id": 4, "code_snippet": "if (notShowNextLabel > 0) {\n    notShowNextLabel--;\n    continue;  // case (3)\n}", "code_summary": "// (3) If no (1) and (2), no overlap to previous label.", "place": [79, 82]}, {"sub_id": 5, "code_snippet": "if (! isIntvOverlap(nextDigitPos, nextDigitWidth,\n        axisNamePos, axisNameLen)) {\n    notShowNextLabel = -1;\n    break;\n}", "code_summary": "// but also check case (1) for label j", "place": [96, 100]}, {"sub_id": 6, "code_snippet": "if (drawOnXAxis) {\n    c.drawText(gridLabel.chars[i], 0, gridLabel.strings[i].length(),\n               axisBeginX + posAlongAxis, labelPosY, labelPaint);\n} else {\n    labelPosX = labelSide == -1\n            ? axisBeginX - 0.5f * labelLargeLen - widthDigit * gridLabel.strings[i].length()\n            : axisBeginX + 0.5f * labelLargeLen;\n    c.drawText(gridLabel.chars[i], 0, gridLabel.strings[i].length(),\n               labelPosX, axisBeginY + posAlongAxis, labelPaint);\n}", "code_summary": "// Now safe to draw label", "place": [110, 119]}], "id": 417}
{"repo": "gruegames/lambda_cloudwatch_ec2_events", "path": "src/main/java/com/gruegames/lambda_cloudwatch_ec2_events/helper/AWSHelper.java", "star_count": 0, "raw_code": "public static SSHClient waitForEC2Instance(String instanceIp, String username, String password) {\n        // see if machine is up yet\n        logger.info(String.format(\"Trying to reach %s\", instanceIp));\n        while (!AWSHelper.isReachable(instanceIp)) {\n            try {\n                logger.info(\"Sleeping...\");\n                Thread.sleep(5000);\n            } catch (InterruptedException e) { }\n        }\n\n        Security.addProvider(new BouncyCastleProvider());\n        SSHClient ssh = null;\n        while(true) {\n            try {\n                ssh = new SSHClient();\n                ssh.addHostKeyVerifier(new PromiscuousVerifier());\n                ssh.setConnectTimeout(5000);\n\n                logger.info(String.format(\"Trying to SSH into %s\", instanceIp));\n                ssh.connect(instanceIp);\n                ssh.authPassword(username, password);\n\n                try(Session session = ssh.startSession()) {\n                    logger.info(\"SSH Session able to start\");\n                    return ssh;\n                }\n            } catch (ConnectionException | UserAuthException e) {\n                logger.info(String.format(\"%s ssh is not ready, sleeping\", instanceIp));\n\n                try {\n                    ssh.disconnect();\n                } catch (IOException ee) {}\n\n                try {\n                    Thread.sleep(10000);\n                } catch (InterruptedException ee) {}\n            } catch (TransportException e) {\n                logger.error(\"SSH Transport Exception\", e);\n                throw new RuntimeException(e);\n            } catch (IOException e) {\n                logger.error(\"SSH IO Exception\", e);\n                throw new RuntimeException(e);\n            }\n        }\n    }", "code_summary": "// Test the SSH connection and sleep until it is ready", "code_snippets": [{"sub_id": 0, "code_snippet": "logger.info(String.format(\"Trying to reach %s\", instanceIp));\nwhile (!AWSHelper.isReachable(instanceIp)) {\n    try {\n        logger.info(\"Sleeping...\");\n        Thread.sleep(5000);\n    } catch (InterruptedException e) { }\n}", "code_summary": "// see if machine is up yet", "place": [3, 9]}], "id": 433}
{"repo": "jmchs-robotics/VSCode2021", "path": "src/main/java/frc/robot/commands/SampleColorCommand.java", "star_count": 0, "raw_code": "@Override\n  public void execute() {\n    /**\n     * The method GetColor() returns a normalized color value from the sensor and can be\n     * useful if outputting the color to an RGB LED or similar. To\n     * read the raw color, use GetRawColor().\n     * \n     * The color sensor works best when within a few inches from an object in\n     * well lit conditions (the built in LED is a big help here!). The farther\n     * an object is the more light from the surroundings will bleed into the \n     * measurements and make it difficult to accurately determine its color.\n     */\n    Color detectedColor = m_colorSensor.getColor();\n\n    /**\n     * Run the color match algorithm on our detected color\n     */\n    String colorString;\n    ColorMatchResult match = m_colorMatcher.matchClosestColor(detectedColor);\n\n    if (match.color == ColorTargets.kBlueTarget) {\n      colorString = \"Blue\";\n    } else if (match.color == ColorTargets.kRedTarget) {\n      colorString = \"Red\";\n    } else if (match.color == ColorTargets.kGreenTarget) {\n      colorString = \"Green\";\n    } else if (match.color == ColorTargets.kYellowTarget) {\n      colorString = \"Yellow\";\n    } else {\n      colorString = \"Unknown\";\n    }\n\n    /**\n     * Open Smart Dashboard or Shuffleboard to see the color detected by the \n     * sensor.\n     */\n    SmartDashboard.putNumber(\"Red\", detectedColor.red);\n    SmartDashboard.putNumber(\"Green\", detectedColor.green);\n    SmartDashboard.putNumber(\"Blue\", detectedColor.blue);\n    SmartDashboard.putNumber(\"Confidence\", match.confidence);\n    SmartDashboard.putString(\"Detected Color\", colorString);\n  }", "code_summary": "// Called every time the scheduler runs while the command is scheduled.", "code_snippets": [{"sub_id": 0, "code_snippet": "Color detectedColor = m_colorSensor.getColor();", "code_summary": "/**\n     * The method GetColor() returns a normalized color value from the sensor and can be\n     * useful if outputting the color to an RGB LED or similar. To\n     * read the raw color, use GetRawColor().\n     * \n     * The color sensor works best when within a few inches from an object in\n     * well lit conditions (the built in LED is a big help here!). The farther\n     * an object is the more light from the surroundings will bleed into the \n     * measurements and make it difficult to accurately determine its color.\n     */", "place": [13, 13]}, {"sub_id": 1, "code_snippet": "String colorString;\nColorMatchResult match = m_colorMatcher.matchClosestColor(detectedColor);\n\nif (match.color == ColorTargets.kBlueTarget) {\n  colorString = \"Blue\";\n} else if (match.color == ColorTargets.kRedTarget) {\n  colorString = \"Red\";\n} else if (match.color == ColorTargets.kGreenTarget) {\n  colorString = \"Green\";\n} else if (match.color == ColorTargets.kYellowTarget) {\n  colorString = \"Yellow\";\n} else {\n  colorString = \"Unknown\";\n}", "code_summary": "/**\n     * Run the color match algorithm on our detected color\n     */", "place": [18, 31]}, {"sub_id": 2, "code_snippet": "SmartDashboard.putNumber(\"Red\", detectedColor.red);\nSmartDashboard.putNumber(\"Green\", detectedColor.green);\nSmartDashboard.putNumber(\"Blue\", detectedColor.blue);\nSmartDashboard.putNumber(\"Confidence\", match.confidence);\nSmartDashboard.putString(\"Detected Color\", colorString);", "code_summary": "/**\n     * Open Smart Dashboard or Shuffleboard to see the color detected by the \n     * sensor.\n     */", "place": [37, 41]}], "id": 443}
{"repo": "rigelglen/Limelight-Android", "path": "app/src/main/java/com/limelight/limelight/viewmodel/FeedViewModel.java", "star_count": 0, "raw_code": "public LiveData<ArrayList<Article>> getArticles(String apiKey, int page, Context ctx, boolean force, boolean moreData) {\n        //if the ArrayList is null\n        if (articleArrayList == null || force) {\n            if (!moreData)\n                articleArrayList = new MutableLiveData<>();\n            //we will load it asynchronously from server in this method\n            loadArticles(apiKey, page, ctx);\n        }\n\n        //finally we will return the ArrayList\n        return articleArrayList;\n    }", "code_summary": "//we will call this method to get the data", "code_snippets": [{"sub_id": 0, "code_snippet": "loadArticles(apiKey, page, ctx);", "code_summary": "//we will load it asynchronously from server in this method", "place": [7, 7]}, {"sub_id": 1, "code_snippet": "return articleArrayList;", "code_summary": "//finally we will return the ArrayList", "place": [11, 11]}], "id": 454}
{"repo": "rigelglen/Limelight-Android", "path": "app/src/main/java/com/limelight/limelight/viewmodel/FeedViewModel.java", "star_count": 0, "raw_code": "private void loadArticles(String apiKey, int page, Context ctx) {\n        Api api = RetrofitClient.getInstance().getApiService();\n\n        Call<ArrayList<Article>> call = api.getFeed(apiKey, page);\n\n\n        call.enqueue(new Callback<ArrayList<Article>>() {\n            @Override\n            public void onResponse(@NonNull Call<ArrayList<Article>> call, @NonNull Response<ArrayList<Article>> response) {\n                if (response.body() != null && response.isSuccessful()) {\n\n                    articleArrayList.setValue(response.body());\n\n\n                } else if (response.errorBody() != null) {\n                    Gson gson = new GsonBuilder().create();\n                    ErrorModel mErrorModel;\n                    try {\n                        mErrorModel = gson.fromJson(response.errorBody().string(), ErrorModel.class);\n                        //Toast.makeText(getApplicationContext(), mErrorModel.getMessage(), Toast.LENGTH_LONG).show();\n                        new SweetAlertDialog(ctx, SweetAlertDialog.ERROR_TYPE)\n                                .setTitleText(\"Error\")\n                                .setContentText(mErrorModel.getMessage())\n                                .show();\n                        articleArrayList.setValue(articleArrayList.getValue());                        //logout();\n\n                    } catch (IOException e) {\n                        Toast.makeText(ctx, \"An error occurred\", Toast.LENGTH_LONG).show();\n                        articleArrayList.setValue(articleArrayList.getValue());\n                    }\n                } else {\n                    Toast.makeText(ctx, \"An error occurred\", Toast.LENGTH_LONG).show();\n                    articleArrayList.setValue(articleArrayList.getValue());\n                }\n\n\n            }\n\n            @Override\n            public void onFailure(@NonNull Call<ArrayList<Article>> call, @NonNull Throwable t) {\n\n                SweetAlertDialog pDialog = new SweetAlertDialog(ctx, SweetAlertDialog.ERROR_TYPE)\n                        .setTitleText(\"Error\")\n                        .setContentText(\"No internet connection\");\n                pDialog.show();\n                articleArrayList.setValue(articleArrayList.getValue());\n            }\n\n        });\n    }", "code_summary": "//This method is using Retrofit to get the JSON data from URL", "code_snippets": [{"sub_id": 0, "code_snippet": "new SweetAlertDialog(ctx, SweetAlertDialog.ERROR_TYPE)\n        .setTitleText(\"Error\")\n        .setContentText(mErrorModel.getMessage())\n        .show();", "code_summary": "//Toast.makeText(getApplicationContext(), mErrorModel.getMessage(), Toast.LENGTH_LONG).show();", "place": [21, 24]}], "id": 455}
{"repo": "shipinm1/shipin1-CountBook", "path": "Shipin1-CountBook2/app/src/main/java/com/first/shipin1_countbook/DisplayCounterAvtivity.java", "star_count": 0, "raw_code": "@Override\n    public void onCreate(Bundle savedInstanceState){\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.counter_activity);\n        // preparation for data receiving and displaying\n        editedInitialValue = (EditText) findViewById(R.id.InitialValueView);\n        editedComment = (EditText) findViewById(R.id.counterComment);\n        editedName = (EditText) findViewById(R.id.CounterTextView);\n\n        Button saveButton = (Button) findViewById(R.id.CounterSaveButton);\n        Button deleteButton = (Button) findViewById(R.id.CounterDeleteButton);\n        Bundle bundle = getIntent().getExtras();\n\n        TextView counterName = (TextView) findViewById(R.id.CounterTextView);\n        counterName.setText(bundle.getString(\"CounterName\"));\n        TextView counterComment = (TextView) findViewById(R.id.counterComment);\n        counterComment.setText(bundle.getString(\"CounterComment\"));\n\n        showValue = (TextView) findViewById(R.id.CountNumberDisplay);\n        position = (bundle.getInt(\"position\"));\n        countvalue = (bundle.getInt(\"CounterCurrentValue\"));\n        countinitial = (bundle.getInt(\"CounterInitialValue\"));\n        temp = countvalue;\n        editedInitialValue.setText(Integer.toString(countinitial));\n        showValue.setText(Integer.toString(countvalue));\n\n        //Save button action when clicked. If statements for error checking.\n        saveButton.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view){\n                String initvalue = editedInitialValue.getText().toString();\n                if (initvalue.matches(\"\")) {\n                    editedInitialValue.setText(\"0\");\n                }\n                int edInitialValue = Integer.parseInt(editedInitialValue.getText().toString());\n                String edComment = editedComment.getText().toString();\n                String edName = editedName.getText().toString();\n                if (edInitialValue < 0){\n                    Toast.makeText(DisplayCounterAvtivity.this, \"Initial Value Can Not Be Negative\\n Change Unsaved\", Toast.LENGTH_LONG).show();\n                    finish();\n                }\n                if (countvalue < 0){\n                    countvalue = temp;\n                    Toast.makeText(DisplayCounterAvtivity.this, \"Counter Can Not Be Negative\\n Change Unsaved\", Toast.LENGTH_LONG).show();\n                    finish();\n                }\n                if (edName.matches(\"\")){\n                    Toast.makeText(DisplayCounterAvtivity.this, \"Name Can Not Be Empty\\n Change Unsaved\", Toast.LENGTH_LONG).show();\n                    finish();\n                }else {\n                    Counters.get(position).setInitValue(edInitialValue);\n                    Counters.get(position).setComment(edComment);\n                    Counters.get(position).setName(edName);\n                    Counters.get(position).setDate(new Date());\n                    Counters.get(position).setCurrentValue(countvalue);\n                    saveInFile();\n                    Toast.makeText(DisplayCounterAvtivity.this, \"Change Saved\", Toast.LENGTH_LONG).show();\n                    Intent returnIntent = new Intent();\n                    setResult(RESULT_OK, returnIntent);\n                    finish();\n                }\n            }\n        });\n        //delete button actions.\n        deleteButton.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view){\n                Counters.remove(position);\n                saveInFile();\n                Toast.makeText(DisplayCounterAvtivity.this, \"Counter Deleted\", Toast.LENGTH_LONG).show();\n                Intent returnIntent = new Intent();\n                setResult(RESULT_OK, returnIntent);\n                finish();\n            }\n        });\n\n\n    }", "code_summary": "//temp for storing the temp current value", "code_snippets": [{"sub_id": 0, "code_snippet": "saveButton.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view){\n                String initvalue = editedInitialValue.getText().toString();\n                if (initvalue.matches(\"\")) {\n                    editedInitialValue.setText(\"0\");\n                }\n                int edInitialValue = Integer.parseInt(editedInitialValue.getText().toString());\n                String edComment = editedComment.getText().toString();\n                String edName = editedName.getText().toString();\n                if (edInitialValue < 0){\n                    Toast.makeText(DisplayCounterAvtivity.this, \"Initial Value Can Not Be Negative\\n Change Unsaved\", Toast.LENGTH_LONG).show();\n                    finish();\n                }\n                if (countvalue < 0){\n                    countvalue = temp;\n                    Toast.makeText(DisplayCounterAvtivity.this, \"Counter Can Not Be Negative\\n Change Unsaved\", Toast.LENGTH_LONG).show();\n                    finish();\n                }\n                if (edName.matches(\"\")){\n                    Toast.makeText(DisplayCounterAvtivity.this, \"Name Can Not Be Empty\\n Change Unsaved\", Toast.LENGTH_LONG).show();\n                    finish();\n                }else {\n                    Counters.get(position).setInitValue(edInitialValue);\n                    Counters.get(position).setComment(edComment);\n                    Counters.get(position).setName(edName);\n                    Counters.get(position).setDate(new Date());\n                    Counters.get(position).setCurrentValue(countvalue);\n                    saveInFile();\n                    Toast.makeText(DisplayCounterAvtivity.this, \"Change Saved\", Toast.LENGTH_LONG).show();\n                    Intent returnIntent = new Intent();\n                    setResult(RESULT_OK, returnIntent);\n                    finish();\n                }\n            }\n        });", "code_summary": "//Save button action when clicked. If statements for error checking.", "place": [28, 63]}, {"sub_id": 1, "code_snippet": "deleteButton.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view){\n                Counters.remove(position);\n                saveInFile();\n                Toast.makeText(DisplayCounterAvtivity.this, \"Counter Deleted\", Toast.LENGTH_LONG).show();\n                Intent returnIntent = new Intent();\n                setResult(RESULT_OK, returnIntent);\n                finish();\n            }\n        });", "code_summary": "//delete button actions.", "place": [65, 75]}], "id": 458}
{"repo": "anuanu0-0/object-modelling", "path": "todo/expenses-manager/src/main/java/com/anuanu00/expensesmanager/commands/DuesCommand.java", "star_count": 0, "raw_code": "@Override\n    public void execute(List<String> tokens) {\n        String memberOwningMoney = tokens.get(1);\n\n        try {\n            // Get dueslist of the member corresponding to other members\n            // Print member - amount\n\n            throw new MemberNotFoundException();\n        } catch (MemberNotFoundException e) {\n            System.out.println(e.getMessage());\n        }\n    }", "code_summary": "// Add the service dependency", "code_snippets": [{"sub_id": 0, "code_snippet": "throw new MemberNotFoundException();", "code_summary": "// Print member - amount", "place": [9, 9]}], "id": 462}
{"repo": "liumapp/compiling-jvm", "path": "openjdk/jdk/test/java/awt/Mouse/ExtraMouseClick/ExtraMouseClick.java", "star_count": 2, "raw_code": "public void start ()\n    {\n        frame.setSize(480, 300);\n        frame.setVisible(true);\n        try{\n            robot = new Robot();\n        }catch(AWTException e){\n            throw new RuntimeException(e);\n        }\n\n        Util.waitForIdle(robot);  //a time to show Frame\n\n        fp = frame.getLocationOnScreen();\n\n        for (int i = 0; i< TRIALS; i++){\n            checkClicked();\n            clearFlags();\n        }\n\n        for (int i = 0; i< TRIALS; i++){\n            oneDrag(2);\n            clearFlags();\n        }\n\n        for (int i = 0; i< TRIALS; i++){\n            oneDrag(5);\n            clearFlags();\n        }\n\n        for (int i = 0; i< TRIALS; i++){\n            oneDrag(70);\n            clearFlags();\n        }\n\n        //Check that no Drag event occur in the SMUDGE area\n        String sToolkit = Toolkit.getDefaultToolkit().getClass().getName();\n        System.out.println(\"Toolkit == \"+sToolkit);\n        if (\"sun.awt.windows.WToolkit\".equals(sToolkit)){\n            int dragWidth = ((Integer)Toolkit.getDefaultToolkit().\n                             getDesktopProperty(\"win.drag.width\")).intValue();\n            int dragHeight = ((Integer)Toolkit.getDefaultToolkit().\n                            getDesktopProperty(\"win.drag.height\")).intValue();\n            System.out.println(\"dragWidth==\"+dragWidth+\":: dragHeight==\"+dragHeight);\n            // DragWidth and dragHeight may be equal to 1. In that case the SMUDGE rectangle\n            // narrowed into 1x1 pixel and we can't drag a mouse in it.\n            // In that case we may skip following testcase but I'd prefer if we move mouse on 1 pixel only.\n            // And that should pass as well.\n            dragWidth = dragWidth > 1? dragWidth/2:1;\n            dragHeight = dragHeight > 1? dragHeight/2:1;\n            for (int i = 0; i< TRIALS; i++){\n                smallWin32Drag(dragWidth, dragHeight);\n                clearFlags();\n            }\n        }else{\n            for (int i = 0; i< TRIALS; i++){\n                smallDrag(SMUDGE_WIDTH - 1, SMUDGE_HEIGHT - 1); //on Motif and XAWT SMUDGE area is 4-pixels wide\n                clearFlags();\n            }\n        }\n        System.out.println(\"Test passed.\");\n    }", "code_summary": "//End  init()", "code_snippets": [{"sub_id": 0, "code_snippet": "Util.waitForIdle(robot);", "code_summary": "//a time to show Frame", "place": [11, 11]}, {"sub_id": 1, "code_snippet": "String sToolkit = Toolkit.getDefaultToolkit().getClass().getName();\nSystem.out.println(\"Toolkit == \"+sToolkit);\nif (\"sun.awt.windows.WToolkit\".equals(sToolkit)){\n    int dragWidth = ((Integer)Toolkit.getDefaultToolkit().\n                     getDesktopProperty(\"win.drag.width\")).intValue();\n    int dragHeight = ((Integer)Toolkit.getDefaultToolkit().\n                    getDesktopProperty(\"win.drag.height\")).intValue();\n    System.out.println(\"dragWidth==\"+dragWidth+\":: dragHeight==\"+dragHeight);\n    // DragWidth and dragHeight may be equal to 1. In that case the SMUDGE rectangle\n    // narrowed into 1x1 pixel and we can't drag a mouse in it.\n    // In that case we may skip following testcase but I'd prefer if we move mouse on 1 pixel only.\n    // And that should pass as well.\n    dragWidth = dragWidth > 1? dragWidth/2:1;\n    dragHeight = dragHeight > 1? dragHeight/2:1;\n    for (int i = 0; i< TRIALS; i++){\n        smallWin32Drag(dragWidth, dragHeight);\n        clearFlags();\n    }\n}else{\n    for (int i = 0; i< TRIALS; i++){\n        smallDrag(SMUDGE_WIDTH - 1, SMUDGE_HEIGHT - 1); //on Motif and XAWT SMUDGE area is 4-pixels wide\n        clearFlags();\n    }\n}", "code_summary": "//Check that no Drag event occur in the SMUDGE area", "place": [36, 59]}, {"sub_id": 2, "code_snippet": "dragWidth = dragWidth > 1? dragWidth/2:1;\ndragHeight = dragHeight > 1? dragHeight/2:1;\nfor (int i = 0; i< TRIALS; i++){\n    smallWin32Drag(dragWidth, dragHeight);\n    clearFlags();\n}", "code_summary": "// And that should pass as well.", "place": [48, 53]}, {"sub_id": 3, "code_snippet": "smallDrag(SMUDGE_WIDTH - 1, SMUDGE_HEIGHT - 1);", "code_summary": "//on Motif and XAWT SMUDGE area is 4-pixels wide", "place": [56, 56]}], "id": 464}
{"repo": "liumapp/compiling-jvm", "path": "openjdk/jdk/test/java/awt/Mouse/ExtraMouseClick/ExtraMouseClick.java", "star_count": 2, "raw_code": "public void smallWin32Drag(int pixelsX, int pixelsY){\n        // by the X-axis\n        robot.mouseMove(fp.x + frame.getWidth()/2, fp.y + frame.getHeight()/2 );\n        //drag for a short distance\n        robot.mousePress(InputEvent.BUTTON1_MASK );\n        System.out.println(\" pixelsX = \"+ pixelsX +\" pixelsY = \" +pixelsY);\n        for (int i = 1; i<=pixelsX;i++){\n            System.out.println(\"Moving a mouse by X\");\n            robot.mouseMove(fp.x + frame.getWidth()/2 + i, fp.y + frame.getHeight()/2 );\n        }\n        robot.mouseRelease(InputEvent.BUTTON1_MASK );\n        robot.delay(1000);\n        if (!dragged){\n            throw new RuntimeException(\"Test failed. Dragged event (by the X-axis) didn't occur in the SMUDGE area. Dragged = \"+dragged);\n        }\n\n        // the same with Y-axis\n        robot.mouseMove(fp.x + frame.getWidth()/2, fp.y + frame.getHeight()/2 );\n        robot.mousePress(InputEvent.BUTTON1_MASK );\n        for (int i = 1; i<=pixelsY;i++){\n            System.out.println(\"Moving a mouse by Y\");\n            robot.mouseMove(fp.x + frame.getWidth()/2, fp.y + frame.getHeight()/2 + i );\n        }\n        robot.mouseRelease(InputEvent.BUTTON1_MASK );\n        robot.delay(1000);\n        if (!dragged){\n            throw new RuntimeException(\"Test failed. Dragged event (by the Y-axis) didn't occur in the SMUDGE area. Dragged = \"+dragged);\n        }\n    }", "code_summary": "// On X-systems Dragged event first fired when mouse has left the SMUDGE area// The difference between X-system and Win32: on Win32 Dragged event start to be generated after any mouse drag.", "code_snippets": [{"sub_id": 0, "code_snippet": "robot.mouseMove(fp.x + frame.getWidth()/2, fp.y + frame.getHeight()/2 );", "code_summary": "// by the X-axis", "place": [3, 3]}, {"sub_id": 1, "code_snippet": "robot.mousePress(InputEvent.BUTTON1_MASK );\nSystem.out.println(\" pixelsX = \"+ pixelsX +\" pixelsY = \" +pixelsY);\nfor (int i = 1; i<=pixelsX;i++){\n    System.out.println(\"Moving a mouse by X\");\n    robot.mouseMove(fp.x + frame.getWidth()/2 + i, fp.y + frame.getHeight()/2 );\n}\nrobot.mouseRelease(InputEvent.BUTTON1_MASK );\nrobot.delay(1000);\nif (!dragged){\n    throw new RuntimeException(\"Test failed. Dragged event (by the X-axis) didn't occur in the SMUDGE area. Dragged = \"+dragged);\n}", "code_summary": "//drag for a short distance", "place": [5, 15]}, {"sub_id": 2, "code_snippet": "robot.mouseMove(fp.x + frame.getWidth()/2, fp.y + frame.getHeight()/2 );\nrobot.mousePress(InputEvent.BUTTON1_MASK );\nfor (int i = 1; i<=pixelsY;i++){\n    System.out.println(\"Moving a mouse by Y\");\n    robot.mouseMove(fp.x + frame.getWidth()/2, fp.y + frame.getHeight()/2 + i );\n}\nrobot.mouseRelease(InputEvent.BUTTON1_MASK );\nrobot.delay(1000);\nif (!dragged){\n    throw new RuntimeException(\"Test failed. Dragged event (by the Y-axis) didn't occur in the SMUDGE area. Dragged = \"+dragged);\n}", "code_summary": "// the same with Y-axis", "place": [18, 28]}], "id": 466}
{"repo": "Cbaharav/MySimpleTweets", "path": "app/src/main/java/com/codepath/apps/restclienttemplate/ComposeActivity.java", "star_count": 0, "raw_code": "public void showProgressBar() {\n        // show progress item\n        miActionProgressItem.setVisible(true);\n    }", "code_summary": "// toggle visibility of progress bar", "code_snippets": [{"sub_id": 0, "code_snippet": "miActionProgressItem.setVisible(true);", "code_summary": "// show progress item", "place": [3, 3]}], "id": 474}
{"repo": "Cbaharav/MySimpleTweets", "path": "app/src/main/java/com/codepath/apps/restclienttemplate/ComposeActivity.java", "star_count": 0, "raw_code": "public void onPost(View v) {\n        showProgressBar();\n        // instantiating client with this context\n        client = TwitterApp.getRestClient(this);\n        // call sendTweet from TwitterClient\n        client.sendTweet(etNewTweet.getText().toString(), new JsonHttpResponseHandler() {\n            @Override\n            public void onSuccess(int statusCode, Header[] headers, JSONObject response) {\n                try {\n                    // get new tweet\n                    Tweet tweet = Tweet.fromJSON(response);\n                    // create new intent and add tweet as extra (parceled)\n                    Intent i = new Intent();\n                    i.putExtra(Tweet.class.getSimpleName(), Parcels.wrap(tweet));\n                    // set as result of the intent, returning to TimelineActivity\n                    setResult(RESULT_OK, i);\n                    // close ComposeActivity\n                    hideProgressBar();\n                    finish();\n\n                } catch (JSONException e) {\n                    e.printStackTrace();\n                }\n            }\n\n            @Override\n            public void onFailure(int statusCode, Header[] headers, Throwable throwable, JSONObject errorResponse) {\n                hideProgressBar();\n                super.onFailure(statusCode, headers, throwable, errorResponse);\n            }\n        });\n\n    }", "code_summary": "// post button is clicked on new tweet", "code_snippets": [{"sub_id": 0, "code_snippet": "client = TwitterApp.getRestClient(this);", "code_summary": "// instantiating client with this context", "place": [4, 4]}, {"sub_id": 1, "code_snippet": "client.sendTweet(etNewTweet.getText().toString(), new JsonHttpResponseHandler() {\n            @Override\n            public void onSuccess(int statusCode, Header[] headers, JSONObject response) {\n                try {\n                    // get new tweet\n                    Tweet tweet = Tweet.fromJSON(response);\n                    // create new intent and add tweet as extra (parceled)\n                    Intent i = new Intent();\n                    i.putExtra(Tweet.class.getSimpleName(), Parcels.wrap(tweet));\n                    // set as result of the intent, returning to TimelineActivity\n                    setResult(RESULT_OK, i);\n                    // close ComposeActivity\n                    hideProgressBar();\n                    finish();\n\n                } catch (JSONException e) {\n                    e.printStackTrace();\n                }\n            }\n\n            @Override\n            public void onFailure(int statusCode, Header[] headers, Throwable throwable, JSONObject errorResponse) {\n                hideProgressBar();\n                super.onFailure(statusCode, headers, throwable, errorResponse);\n            }\n        });", "code_summary": "// call sendTweet from TwitterClient", "place": [6, 31]}, {"sub_id": 2, "code_snippet": "Intent i = new Intent();\ni.putExtra(Tweet.class.getSimpleName(), Parcels.wrap(tweet));", "code_summary": "// create new intent and add tweet as extra (parceled)", "place": [13, 14]}, {"sub_id": 3, "code_snippet": "setResult(RESULT_OK, i);", "code_summary": "// set as result of the intent, returning to TimelineActivity", "place": [16, 16]}], "id": 475}
{"repo": "truonghh99/SimpleTweet", "path": "app/src/main/java/com/codepath/apps/restclienttemplate/TweetsAdapter.java", "star_count": 0, "raw_code": "@Override\n    public void onBindViewHolder(@NonNull ViewHolder holder, int position) {\n        // Get the data at position\n        Tweet tweet = tweets.get(position);\n        // bind the tweet with view holder\n        holder.bind(tweet);\n    }", "code_summary": "// Bind values based on the position of the element", "code_snippets": [{"sub_id": 0, "code_snippet": "Tweet tweet = tweets.get(position);", "code_summary": "// Get the data at position", "place": [4, 4]}, {"sub_id": 1, "code_snippet": "holder.bind(tweet);", "code_summary": "// bind the tweet with view holder", "place": [6, 6]}], "id": 477}
{"repo": "aeolusk/utils", "path": "src/java/com/bono/utils/PasswordEncoder.java", "star_count": 0, "raw_code": "public static String encrypt(byte[] pText, String password) throws Exception {\r\n\t\t// 16 bytes salt\r\n\t\tbyte[] salt = CryptoUtils.getRandomNonce(SALT_LENGTH_BYTE);\r\n\r\n\t\t// GCM recommended 12 bytes iv?\r\n\t\tbyte[] iv = CryptoUtils.getRandomNonce(IV_LENGTH_BYTE);\r\n\r\n\t\t// secret key from password\r\n\t\tSecretKey aesKeyFromPassword = CryptoUtils.getAESKeyFromPassword(password.toCharArray(), salt);\r\n\r\n\t\tCipher cipher = Cipher.getInstance(ENCRYPT_ALGO);\r\n\r\n\t\t// ASE-GCM needs GCMParameterSpec\r\n\t\tcipher.init(Cipher.ENCRYPT_MODE, aesKeyFromPassword, new GCMParameterSpec(TAG_LENGTH_BIT, iv));\r\n\r\n\t\tbyte[] cipherText = cipher.doFinal(pText);\r\n\r\n\t\t// prefix IV and Salt to cipher text\r\n\t\tbyte[] cipherTextWithIvSalt = ByteBuffer.allocate(iv.length + salt.length + cipherText.length).put(iv).put(salt)\r\n\t\t\t\t.put(cipherText).array();\r\n\r\n\t\t// string representation, base64, send this string to other for decryption.\r\n\t\treturn Base64.getEncoder().encodeToString(cipherTextWithIvSalt);\r\n\r\n\t}", "code_summary": "// return a base64 encoded AES encrypted text\r", "code_snippets": [{"sub_id": 0, "code_snippet": "byte[] salt = CryptoUtils.getRandomNonce(SALT_LENGTH_BYTE);", "code_summary": "// 16 bytes salt\r", "place": [3, 3]}, {"sub_id": 1, "code_snippet": "byte[] iv = CryptoUtils.getRandomNonce(IV_LENGTH_BYTE);", "code_summary": "// GCM recommended 12 bytes iv?\r", "place": [6, 6]}, {"sub_id": 2, "code_snippet": "SecretKey aesKeyFromPassword = CryptoUtils.getAESKeyFromPassword(password.toCharArray(), salt);", "code_summary": "// secret key from password\r", "place": [9, 9]}, {"sub_id": 3, "code_snippet": "cipher.init(Cipher.ENCRYPT_MODE, aesKeyFromPassword, new GCMParameterSpec(TAG_LENGTH_BIT, iv));", "code_summary": "// ASE-GCM needs GCMParameterSpec\r", "place": [14, 14]}, {"sub_id": 4, "code_snippet": "byte[] cipherTextWithIvSalt = ByteBuffer.allocate(iv.length + salt.length + cipherText.length).put(iv).put(salt)\n        .put(cipherText).array();", "code_summary": "// prefix IV and Salt to cipher text\r", "place": [19, 20]}, {"sub_id": 5, "code_snippet": "return Base64.getEncoder().encodeToString(cipherTextWithIvSalt);", "code_summary": "// string representation, base64, send this string to other for decryption.\r", "place": [23, 23]}], "id": 480}
{"repo": "980f/ezjava", "path": "src/pers/hal42/data/DateInput.java", "star_count": 0, "raw_code": "private static DateInput FromString(DateInput di, String datestr) {\n    // \"yyyyMMddHHmmssSSS\"\n    if (!StringX.NonTrivial(datestr)) {\n      datestr = \"\";\n    }\n    // make sure it is the right length, exactly\n    datestr = StringX.fill(datestr, '0', 14, false);\n    // now take it apart\n    di.year = StringX.subString(datestr, 2, 4); // assumes 20XX\n    di.month = StringX.subString(datestr, 4, 6);\n    di.day = StringX.subString(datestr, 6, 8);\n    di.hour = StringX.subString(datestr, 8, 10);\n    di.minute = StringX.subString(datestr, 10, 12);\n    di.second = StringX.subString(datestr, 12, 14);\n    return di;\n  }", "code_summary": "// convert from a LocalTimeFormat.DESCENDINGTIMEFORMAT to a DateInput", "code_snippets": [{"sub_id": 0, "code_snippet": "datestr = StringX.fill(datestr, '0', 14, false);", "code_summary": "// make sure it is the right length, exactly", "place": [7, 7]}, {"sub_id": 1, "code_snippet": "di.year = StringX.subString(datestr, 2, 4); // assumes 20XX\ndi.month = StringX.subString(datestr, 4, 6);\ndi.day = StringX.subString(datestr, 6, 8);\ndi.hour = StringX.subString(datestr, 8, 10);\ndi.minute = StringX.subString(datestr, 10, 12);\ndi.second = StringX.subString(datestr, 12, 14);", "code_summary": "// now take it apart", "place": [9, 14]}], "id": 487}
{"repo": "piratte/conquest", "path": "Conquest/src/conquest/bot/BotState.java", "star_count": 4, "raw_code": "public void updateMap(String[] mapInput)\n\t{\n\t\tvisibleMap = fullMap.getMapCopy();\n\t\tfor(int i=1; i<mapInput.length; i++)\n\t\t{\n\t\t\ttry {\n\t\t\t\tRegionData region = visibleMap.getRegion(Integer.parseInt(mapInput[i]));\n\t\t\t\tString playerName = mapInput[i+1];\n\t\t\t\tint armies = Integer.parseInt(mapInput[i+2]);\n\t\t\t\t\n\t\t\t\tregion.setPlayerName(playerName);\n\t\t\t\tregion.setArmies(armies);\n\t\t\t\ti += 2;\n\t\t\t}\n\t\t\tcatch(Exception e) {\n\t\t\t\tSystem.err.println(\"Unable to parse Map Update \" + e.getMessage());\n\t\t\t}\n\t\t}\n\t\tArrayList<RegionData> unknownRegions = new ArrayList<RegionData>();\n\t\t\n\t\t//remove regions which are unknown.\n\t\tfor(RegionData region : visibleMap.regions)\n\t\t\tif(region.getPlayerName().equals(\"unknown\"))\n\t\t\t\tunknownRegions.add(region);\n\t\tfor(RegionData unknownRegion : unknownRegions)\n\t\t\tvisibleMap.getRegions().remove(unknownRegion);\t\t\t\t\n\t}", "code_summary": "//visible regions are given to the bot with player and armies info", "code_snippets": [{"sub_id": 0, "code_snippet": "for(RegionData region : visibleMap.regions)\n\tif(region.getPlayerName().equals(\"unknown\"))\n\t\tunknownRegions.add(region);\nfor(RegionData unknownRegion : unknownRegions)\n\tvisibleMap.getRegions().remove(unknownRegion);", "code_summary": "//remove regions which are unknown.", "place": [22, 26]}], "id": 491}
{"repo": "ananddasani/Android_RecyclerView", "path": "app/src/main/java/com/example/recyclerview/CustomAdapter.java", "star_count": 0, "raw_code": "@Override\n    public ViewHolder onCreateViewHolder(ViewGroup viewGroup, int viewType) {\n\n        // Create a new view, which defines the UI of the list item\n        View view = LayoutInflater.from(viewGroup.getContext())\n                .inflate(R.layout.my_layout, viewGroup, false);\n\n        return new ViewHolder(view);\n    }", "code_summary": "// Create new views (invoked by the layout manager)", "code_snippets": [{"sub_id": 0, "code_snippet": "View view = LayoutInflater.from(viewGroup.getContext())\n                .inflate(R.layout.my_layout, viewGroup, false);", "code_summary": "// Create a new view, which defines the UI of the list item", "place": [5, 6]}], "id": 492}
{"repo": "Disconnect24/Disconnect24-Bot", "path": "src/main/java/xyz/disconnect24/bot/Const.java", "star_count": 3, "raw_code": "public static String getCodeTypes() {\n        StringBuilder response = new StringBuilder(\"Invalid type! Valid types:\\n\");\n        for (String type : namesToType.keySet()) {\n            response.append(\"`\").append(type).append(\"`, \");\n        }\n        // Remove leftover comma + space\n        return response.substring(0, response.length() - 2);\n    }", "code_summary": "// oops, a function in a constant file", "code_snippets": [{"sub_id": 0, "code_snippet": "return response.substring(0, response.length() - 2);", "code_summary": "// Remove leftover comma + space", "place": [7, 7]}], "id": 501}
{"repo": "FRCTeam225/OffseasonDemos", "path": "src/edu/wpi/first/wpilibj/templates/commands/TurnTo.java", "star_count": 1, "raw_code": "protected void execute() {\n        // turn 180 degrees\n        double current = drivetrain.getAngle();\n\n        double error = current-target;\n        System.out.println(error);\n\n        if ( Math.abs(error) < 10 )\n        {\n            stableLoops++;\n        }\n        else\n        {\n            stableLoops = 0;\n        }\n\n        error *= -0.01;\n        drivetrain.setMotors(error, -error);\n    }", "code_summary": "// Called repeatedly when this Command is scheduled to run", "code_snippets": [{"sub_id": 0, "code_snippet": "double current = drivetrain.getAngle();", "code_summary": "// turn 180 degrees", "place": [3, 3]}], "id": 510}
{"repo": "titov-artem/mahjong", "path": "mahjong-application/src/main/java/com.github.mahjong.application/exceptions/ServerExceptionMapper.java", "star_count": 0, "raw_code": "private String serializeEntity(ExceptionResponse resp) {\n        try {\n            return JsonUtil.writeValue(resp).toString();\n        } catch (RuntimeException e) {\n            log.error(\"Failed to serialize full exception response. Using dummy fallback.\", e);\n            // dummy fallback serialization\n            return String.format(\"{\\\"cls\\\": \\\"%s\\\", \\\"message\\\": \\\"%s\\\"}\", resp.cls, resp.message);\n        }\n    }", "code_summary": "// it is forbidden to throw exception from here", "code_snippets": [{"sub_id": 0, "code_snippet": "return String.format(\"{\\\"cls\\\": \\\"%s\\\", \\\"message\\\": \\\"%s\\\"}\", resp.cls, resp.message);", "code_summary": "// dummy fallback serialization", "place": [7, 7]}], "id": 515}
{"repo": "mattraimondi/laughing-winner", "path": "AP Computer Science/StudentFiles/Ch10/Exercises/Temperature.java", "star_count": 0, "raw_code": "public void actionPerformed(ActionEvent e)\r\n  {\r\n    FCConverter fc = new FCConverter();\r\n\r\n    if ((JTextField)e.getSource() == displayF)\r\n    {\r\n      // Fahrenheit to Celsius\r\n      double degrees = stringToDouble(displayF.getText());\r\n      if (!Double.isNaN(degrees))\r\n      {\r\n        fc.setFahrenheit(degrees);\r\n        degrees = fc.getCelsius();\r\n        displayC.setText(String.format(\"%1.1f\", degrees));\r\n      }\r\n      else\r\n      {\r\n        displayF.selectAll();\r\n      }\r\n    }\r\n    else\r\n    {\r\n      // Celsius to Fahrenheit\r\n      double degrees = stringToDouble(displayC.getText());\r\n      if (!Double.isNaN(degrees))\r\n      {\r\n        fc.setCelsius(degrees);\r\n        degrees = fc.getFahrenheit();\r\n        displayF.setText(String.format(\"%1.1f\", degrees));\r\n      }\r\n      else\r\n      {\r\n        displayC.selectAll();\r\n      }\r\n    }\r\n  }", "code_summary": "// Invoked when <Enter> is pressed\r", "code_snippets": [{"sub_id": 0, "code_snippet": "double degrees = stringToDouble(displayF.getText());\nif (!Double.isNaN(degrees))\n{\n    fc.setFahrenheit(degrees);\n    degrees = fc.getCelsius();\n    displayC.setText(String.format(\"%1.1f\", degrees));\n}\nelse\n{\n    displayF.selectAll();\n}", "code_summary": "// Fahrenheit to Celsius\r", "place": [8, 18]}, {"sub_id": 1, "code_snippet": "double degrees = stringToDouble(displayC.getText());\r\nif (!Double.isNaN(degrees))\r\n{\r\n  fc.setCelsius(degrees);\r\n  degrees = fc.getFahrenheit();\r\n  displayF.setText(String.format(\"%1.1f\", degrees));\r\n}\r\nelse\r\n{\r\n  displayC.selectAll();\r\n}", "code_summary": "// Celsius to Fahrenheit\r", "place": [23, 33]}], "id": 516}
{"repo": "Veritomyx/PeakInvestigator-Java-SDK", "path": "src/main/java/com/veritomyx/Checksum.java", "star_count": 0, "raw_code": "public void append(String line) {\n\t\t// calculate the hash of the last sum + the new line\n\t\tStringBuffer sb = new StringBuffer();\n\t\tint i = 0;\n\t\twhile (i < line.length()) {\n\t\t\tchar c = line.charAt(i);\n\t\t\tif (c == '\\r') {\n\t\t\t\ti++;\n\t\t\t\tif (i < line.length() && line.charAt(i) == '\\n') {\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t\t// Output sb\n\t\t\t\tappend(sb);\n\t\t\t\tsb.setLength(0);\n\t\t\t} else if (c == '\\n') {\n\t\t\t\ti++;\n\t\t\t\tif (i < line.length() && line.charAt(i) == '\\r') {\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t\t// Output sb\n\t\t\t\tappend(sb);\n\t\t\t\tsb.setLength(0);\n\t\t\t} else {\n\t\t\t\tsb.append(c);\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t\t// Output sb\n\t\tappend(sb);\n\t}", "code_summary": "// Append line to the cumulative checksum", "code_snippets": [{"sub_id": 0, "code_snippet": "append(sb);", "code_summary": "// Output sb // Output sb", "place": [13, 13]}], "id": 523}
{"repo": "vakulkarni-git/MCA", "path": "app/src/main/java/com/git/mca/HorizontalListAdapter.java", "star_count": 1, "raw_code": "@Override\n    public HorizontalListAdapter.MyViewHolder onCreateViewHolder(ViewGroup parent,\n                                                         int viewType) {\n        Log.d(\"CreateViewHolder\", \"onCreateViewHolder\" + countCreate);\n        countCreate++;\n        // create a new view\n        ImageView v = (ImageView) LayoutInflater.from(parent.getContext())\n                .inflate(R.layout.horizontal_item, parent, false);\n\n        HorizontalListAdapter.MyViewHolder vh = new HorizontalListAdapter.MyViewHolder(v);\n        return vh;\n    }", "code_summary": "// Create new views (invoked by the layout manager)", "code_snippets": [{"sub_id": 0, "code_snippet": "ImageView v = (ImageView) LayoutInflater.from(parent.getContext())\n                .inflate(R.layout.horizontal_item, parent, false);", "code_summary": "// create a new view", "place": [7, 8]}], "id": 524}
{"repo": "vakulkarni-git/MCA", "path": "app/src/main/java/com/git/mca/HorizontalListAdapter.java", "star_count": 1, "raw_code": "@Override\n    public void onBindViewHolder(HorizontalListAdapter.MyViewHolder holder, int position) {\n        // - get element from your dataset at this position\n        // - replace the contents of the view with that element\n        Log.d(\"CustomAdapter\", \"OnBindViewHolder\" + position);\n        //holder.textView.setText(mDataset[position]);\n        //holder.imageView.setImageResource(mDataset[position]);\n        //holder.textView.setText(\"Flag \" + position);\n        holder.image.setImageResource(mDataset[position]);\n    }", "code_summary": "// Replace the contents of a view (invoked by the layout manager)", "code_snippets": [{"sub_id": 0, "code_snippet": "//holder.textView.setText(mDataset[position]);\n        //holder.imageView.setImageResource(mDataset[position]);\n        //holder.textView.setText(\"Flag \" + position);\n        holder.image.setImageResource(mDataset[position]);", "code_summary": "// - replace the contents of the view with that element", "place": [6, 9]}], "id": 525}
{"repo": "lixinjie1985/cassandra", "path": "src/main/java/org/eop/cassandra/json/Jsr353JsonColumn.java", "star_count": 0, "raw_code": "private static void insertJsonColumn(Session session) {\r\n\r\n        JsonObject alice = Json.createObjectBuilder()\r\n                .add(\"name\", \"alice\")\r\n                .add(\"age\", 30)\r\n                .build();\r\n\r\n        JsonObject bob = Json.createObjectBuilder()\r\n                .add(\"name\", \"bob\")\r\n                .add(\"age\", 35)\r\n                .build();\r\n\r\n        // Build and execute a simple statement\r\n        Statement stmt = insertInto(\"examples\", \"json_jsr353_column\")\r\n                .value(\"id\", 1)\r\n                // the JSON object will be converted into a String and persisted into the VARCHAR column \"json\"\r\n                .value(\"json\", alice);\r\n        session.execute(stmt);\r\n\r\n        // The JSON object can be a bound value if the statement is prepared\r\n        // (we use a local variable here for the sake of example, but in a real application you would cache and reuse\r\n        // the prepared statement)\r\n        PreparedStatement pst = session.prepare(\r\n                insertInto(\"examples\", \"json_jsr353_column\")\r\n                        .value(\"id\", bindMarker(\"id\"))\r\n                        .value(\"json\", bindMarker(\"json\")));\r\n        session.execute(pst.bind()\r\n                .setInt(\"id\", 2)\r\n                // note that the codec requires that the type passed to the set() method\r\n                // be always JsonStructure, and not a subclass of it, such as JsonObject\r\n                .set(\"json\", bob, JsonStructure.class));\r\n    }", "code_summary": "// Mapping a JSON object to a table column\r", "code_snippets": [{"sub_id": 0, "code_snippet": "Statement stmt = insertInto(\"examples\", \"json_jsr353_column\")\n                .value(\"id\", 1)\n                // the JSON object will be converted into a String and persisted into the VARCHAR column \"json\"\n                .value(\"json\", alice);\n        session.execute(stmt);", "code_summary": "// Build and execute a simple statement\r", "place": [14, 18]}, {"sub_id": 1, "code_snippet": "PreparedStatement pst = session.prepare(\n                insertInto(\"examples\", \"json_jsr353_column\")\n                        .value(\"id\", bindMarker(\"id\"))\n                        .value(\"json\", bindMarker(\"json\")));\n        session.execute(pst.bind()\n                .setInt(\"id\", 2)\n                // note that the codec requires that the type passed to the set() method\n                // be always JsonStructure, and not a subclass of it, such as JsonObject\n                .set(\"json\", bob, JsonStructure.class));", "code_summary": "// The JSON object can be a bound value if the statement is prepared\r", "place": [23, 31]}, {"sub_id": 2, "code_snippet": "PreparedStatement pst = session.prepare(\r\n                insertInto(\"examples\", \"json_jsr353_column\")\r\n                        .value(\"id\", bindMarker(\"id\"))\r\n                        .value(\"json\", bindMarker(\"json\")));", "code_summary": "// (we use a local variable here for the sake of example, but in a real application you would cache and reuse\r // the prepared statement)\r", "place": [23, 26]}], "id": 530}
